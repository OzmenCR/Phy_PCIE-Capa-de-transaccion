/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os) */

(* src = "byte_strippingS.v:1" *)
module byte_strippingS(data_in, valid, reset_L, clockS1, clockS2, clockS4, lane_0, lane_1, valid0, valid1);
  (* src = "byte_strippingS.v:9" *)
  wire [31:0] _000_;
  (* src = "byte_strippingS.v:9" *)
  wire [31:0] _001_;
  (* src = "byte_strippingS.v:9" *)
  wire _002_;
  (* src = "byte_strippingS.v:9" *)
  wire _003_;
  (* src = "byte_strippingS.v:9" *)
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  (* src = "byte_strippingS.v:3" *)
  input clockS1;
  (* src = "byte_strippingS.v:3" *)
  input clockS2;
  (* src = "byte_strippingS.v:3" *)
  input clockS4;
  (* src = "byte_strippingS.v:2" *)
  input [31:0] data_in;
  (* src = "byte_strippingS.v:4" *)
  output [31:0] lane_0;
  (* src = "byte_strippingS.v:4" *)
  output [31:0] lane_1;
  (* src = "byte_strippingS.v:3" *)
  input reset_L;
  (* src = "byte_strippingS.v:7" *)
  wire selector;
  (* src = "byte_strippingS.v:3" *)
  input valid;
  (* src = "byte_strippingS.v:5" *)
  output valid0;
  (* src = "byte_strippingS.v:5" *)
  output valid1;
  NOT _204_ (
    .A(reset_L),
    .Y(_005_)
  );
  NAND _205_ (
    .A(selector),
    .B(valid),
    .Y(_072_)
  );
  NOT _206_ (
    .A(selector),
    .Y(_002_)
  );
  NAND _207_ (
    .A(_002_),
    .B(valid0),
    .Y(_073_)
  );
  NAND _208_ (
    .A(_073_),
    .B(_072_),
    .Y(_003_)
  );
  NAND _209_ (
    .A(lane_1[0]),
    .B(selector),
    .Y(_074_)
  );
  NAND _210_ (
    .A(data_in[0]),
    .B(_002_),
    .Y(_075_)
  );
  NAND _211_ (
    .A(_075_),
    .B(_074_),
    .Y(_001_[0])
  );
  NAND _212_ (
    .A(lane_1[1]),
    .B(selector),
    .Y(_076_)
  );
  NAND _213_ (
    .A(data_in[1]),
    .B(_002_),
    .Y(_077_)
  );
  NAND _214_ (
    .A(_077_),
    .B(_076_),
    .Y(_001_[1])
  );
  NAND _215_ (
    .A(lane_1[2]),
    .B(selector),
    .Y(_078_)
  );
  NAND _216_ (
    .A(data_in[2]),
    .B(_002_),
    .Y(_079_)
  );
  NAND _217_ (
    .A(_079_),
    .B(_078_),
    .Y(_001_[2])
  );
  NAND _218_ (
    .A(lane_1[3]),
    .B(selector),
    .Y(_080_)
  );
  NAND _219_ (
    .A(data_in[3]),
    .B(_002_),
    .Y(_081_)
  );
  NAND _220_ (
    .A(_081_),
    .B(_080_),
    .Y(_001_[3])
  );
  NAND _221_ (
    .A(lane_1[4]),
    .B(selector),
    .Y(_082_)
  );
  NAND _222_ (
    .A(data_in[4]),
    .B(_002_),
    .Y(_083_)
  );
  NAND _223_ (
    .A(_083_),
    .B(_082_),
    .Y(_001_[4])
  );
  NAND _224_ (
    .A(lane_1[5]),
    .B(selector),
    .Y(_084_)
  );
  NAND _225_ (
    .A(data_in[5]),
    .B(_002_),
    .Y(_085_)
  );
  NAND _226_ (
    .A(_085_),
    .B(_084_),
    .Y(_001_[5])
  );
  NAND _227_ (
    .A(lane_1[6]),
    .B(selector),
    .Y(_086_)
  );
  NAND _228_ (
    .A(data_in[6]),
    .B(_002_),
    .Y(_087_)
  );
  NAND _229_ (
    .A(_087_),
    .B(_086_),
    .Y(_001_[6])
  );
  NAND _230_ (
    .A(lane_1[7]),
    .B(selector),
    .Y(_088_)
  );
  NAND _231_ (
    .A(data_in[7]),
    .B(_002_),
    .Y(_089_)
  );
  NAND _232_ (
    .A(_089_),
    .B(_088_),
    .Y(_001_[7])
  );
  NAND _233_ (
    .A(lane_1[8]),
    .B(selector),
    .Y(_090_)
  );
  NAND _234_ (
    .A(data_in[8]),
    .B(_002_),
    .Y(_091_)
  );
  NAND _235_ (
    .A(_091_),
    .B(_090_),
    .Y(_001_[8])
  );
  NAND _236_ (
    .A(lane_1[9]),
    .B(selector),
    .Y(_092_)
  );
  NAND _237_ (
    .A(data_in[9]),
    .B(_002_),
    .Y(_093_)
  );
  NAND _238_ (
    .A(_093_),
    .B(_092_),
    .Y(_001_[9])
  );
  NAND _239_ (
    .A(lane_1[10]),
    .B(selector),
    .Y(_094_)
  );
  NAND _240_ (
    .A(data_in[10]),
    .B(_002_),
    .Y(_095_)
  );
  NAND _241_ (
    .A(_095_),
    .B(_094_),
    .Y(_001_[10])
  );
  NAND _242_ (
    .A(lane_1[11]),
    .B(selector),
    .Y(_096_)
  );
  NAND _243_ (
    .A(data_in[11]),
    .B(_002_),
    .Y(_097_)
  );
  NAND _244_ (
    .A(_097_),
    .B(_096_),
    .Y(_001_[11])
  );
  NAND _245_ (
    .A(lane_1[12]),
    .B(selector),
    .Y(_098_)
  );
  NAND _246_ (
    .A(data_in[12]),
    .B(_002_),
    .Y(_099_)
  );
  NAND _247_ (
    .A(_099_),
    .B(_098_),
    .Y(_001_[12])
  );
  NAND _248_ (
    .A(lane_1[13]),
    .B(selector),
    .Y(_100_)
  );
  NAND _249_ (
    .A(data_in[13]),
    .B(_002_),
    .Y(_101_)
  );
  NAND _250_ (
    .A(_101_),
    .B(_100_),
    .Y(_001_[13])
  );
  NAND _251_ (
    .A(lane_1[14]),
    .B(selector),
    .Y(_102_)
  );
  NAND _252_ (
    .A(data_in[14]),
    .B(_002_),
    .Y(_103_)
  );
  NAND _253_ (
    .A(_103_),
    .B(_102_),
    .Y(_001_[14])
  );
  NAND _254_ (
    .A(lane_1[15]),
    .B(selector),
    .Y(_104_)
  );
  NAND _255_ (
    .A(data_in[15]),
    .B(_002_),
    .Y(_105_)
  );
  NAND _256_ (
    .A(_105_),
    .B(_104_),
    .Y(_001_[15])
  );
  NAND _257_ (
    .A(lane_1[16]),
    .B(selector),
    .Y(_106_)
  );
  NAND _258_ (
    .A(data_in[16]),
    .B(_002_),
    .Y(_107_)
  );
  NAND _259_ (
    .A(_107_),
    .B(_106_),
    .Y(_001_[16])
  );
  NAND _260_ (
    .A(lane_1[17]),
    .B(selector),
    .Y(_108_)
  );
  NAND _261_ (
    .A(data_in[17]),
    .B(_002_),
    .Y(_109_)
  );
  NAND _262_ (
    .A(_109_),
    .B(_108_),
    .Y(_001_[17])
  );
  NAND _263_ (
    .A(lane_1[18]),
    .B(selector),
    .Y(_110_)
  );
  NAND _264_ (
    .A(data_in[18]),
    .B(_002_),
    .Y(_111_)
  );
  NAND _265_ (
    .A(_111_),
    .B(_110_),
    .Y(_001_[18])
  );
  NAND _266_ (
    .A(lane_1[19]),
    .B(selector),
    .Y(_112_)
  );
  NAND _267_ (
    .A(data_in[19]),
    .B(_002_),
    .Y(_113_)
  );
  NAND _268_ (
    .A(_113_),
    .B(_112_),
    .Y(_001_[19])
  );
  NAND _269_ (
    .A(lane_1[20]),
    .B(selector),
    .Y(_114_)
  );
  NAND _270_ (
    .A(data_in[20]),
    .B(_002_),
    .Y(_115_)
  );
  NAND _271_ (
    .A(_115_),
    .B(_114_),
    .Y(_001_[20])
  );
  NAND _272_ (
    .A(lane_1[21]),
    .B(selector),
    .Y(_116_)
  );
  NAND _273_ (
    .A(data_in[21]),
    .B(_002_),
    .Y(_117_)
  );
  NAND _274_ (
    .A(_117_),
    .B(_116_),
    .Y(_001_[21])
  );
  NAND _275_ (
    .A(lane_1[22]),
    .B(selector),
    .Y(_118_)
  );
  NAND _276_ (
    .A(data_in[22]),
    .B(_002_),
    .Y(_119_)
  );
  NAND _277_ (
    .A(_119_),
    .B(_118_),
    .Y(_001_[22])
  );
  NAND _278_ (
    .A(lane_1[23]),
    .B(selector),
    .Y(_120_)
  );
  NAND _279_ (
    .A(data_in[23]),
    .B(_002_),
    .Y(_121_)
  );
  NAND _280_ (
    .A(_121_),
    .B(_120_),
    .Y(_001_[23])
  );
  NAND _281_ (
    .A(lane_1[24]),
    .B(selector),
    .Y(_122_)
  );
  NAND _282_ (
    .A(data_in[24]),
    .B(_002_),
    .Y(_123_)
  );
  NAND _283_ (
    .A(_123_),
    .B(_122_),
    .Y(_001_[24])
  );
  NAND _284_ (
    .A(lane_1[25]),
    .B(selector),
    .Y(_124_)
  );
  NAND _285_ (
    .A(data_in[25]),
    .B(_002_),
    .Y(_125_)
  );
  NAND _286_ (
    .A(_125_),
    .B(_124_),
    .Y(_001_[25])
  );
  NAND _287_ (
    .A(lane_1[26]),
    .B(selector),
    .Y(_126_)
  );
  NAND _288_ (
    .A(data_in[26]),
    .B(_002_),
    .Y(_127_)
  );
  NAND _289_ (
    .A(_127_),
    .B(_126_),
    .Y(_001_[26])
  );
  NAND _290_ (
    .A(lane_1[27]),
    .B(selector),
    .Y(_128_)
  );
  NAND _291_ (
    .A(data_in[27]),
    .B(_002_),
    .Y(_129_)
  );
  NAND _292_ (
    .A(_129_),
    .B(_128_),
    .Y(_001_[27])
  );
  NAND _293_ (
    .A(lane_1[28]),
    .B(selector),
    .Y(_130_)
  );
  NAND _294_ (
    .A(data_in[28]),
    .B(_002_),
    .Y(_131_)
  );
  NAND _295_ (
    .A(_131_),
    .B(_130_),
    .Y(_001_[28])
  );
  NAND _296_ (
    .A(lane_1[29]),
    .B(selector),
    .Y(_132_)
  );
  NAND _297_ (
    .A(data_in[29]),
    .B(_002_),
    .Y(_133_)
  );
  NAND _298_ (
    .A(_133_),
    .B(_132_),
    .Y(_001_[29])
  );
  NAND _299_ (
    .A(lane_1[30]),
    .B(selector),
    .Y(_134_)
  );
  NAND _300_ (
    .A(data_in[30]),
    .B(_002_),
    .Y(_135_)
  );
  NAND _301_ (
    .A(_135_),
    .B(_134_),
    .Y(_001_[30])
  );
  NAND _302_ (
    .A(lane_1[31]),
    .B(selector),
    .Y(_136_)
  );
  NAND _303_ (
    .A(data_in[31]),
    .B(_002_),
    .Y(_137_)
  );
  NAND _304_ (
    .A(_137_),
    .B(_136_),
    .Y(_001_[31])
  );
  NAND _305_ (
    .A(data_in[0]),
    .B(selector),
    .Y(_138_)
  );
  NAND _306_ (
    .A(lane_0[0]),
    .B(_002_),
    .Y(_139_)
  );
  NAND _307_ (
    .A(_139_),
    .B(_138_),
    .Y(_000_[0])
  );
  NAND _308_ (
    .A(data_in[1]),
    .B(selector),
    .Y(_140_)
  );
  NAND _309_ (
    .A(lane_0[1]),
    .B(_002_),
    .Y(_141_)
  );
  NAND _310_ (
    .A(_141_),
    .B(_140_),
    .Y(_000_[1])
  );
  NAND _311_ (
    .A(data_in[2]),
    .B(selector),
    .Y(_142_)
  );
  NAND _312_ (
    .A(lane_0[2]),
    .B(_002_),
    .Y(_143_)
  );
  NAND _313_ (
    .A(_143_),
    .B(_142_),
    .Y(_000_[2])
  );
  NAND _314_ (
    .A(data_in[3]),
    .B(selector),
    .Y(_144_)
  );
  NAND _315_ (
    .A(lane_0[3]),
    .B(_002_),
    .Y(_145_)
  );
  NAND _316_ (
    .A(_145_),
    .B(_144_),
    .Y(_000_[3])
  );
  NAND _317_ (
    .A(data_in[4]),
    .B(selector),
    .Y(_146_)
  );
  NAND _318_ (
    .A(lane_0[4]),
    .B(_002_),
    .Y(_147_)
  );
  NAND _319_ (
    .A(_147_),
    .B(_146_),
    .Y(_000_[4])
  );
  NAND _320_ (
    .A(data_in[5]),
    .B(selector),
    .Y(_148_)
  );
  NAND _321_ (
    .A(lane_0[5]),
    .B(_002_),
    .Y(_149_)
  );
  NAND _322_ (
    .A(_149_),
    .B(_148_),
    .Y(_000_[5])
  );
  NAND _323_ (
    .A(data_in[6]),
    .B(selector),
    .Y(_150_)
  );
  NAND _324_ (
    .A(lane_0[6]),
    .B(_002_),
    .Y(_151_)
  );
  NAND _325_ (
    .A(_151_),
    .B(_150_),
    .Y(_000_[6])
  );
  NAND _326_ (
    .A(data_in[7]),
    .B(selector),
    .Y(_152_)
  );
  NAND _327_ (
    .A(lane_0[7]),
    .B(_002_),
    .Y(_153_)
  );
  NAND _328_ (
    .A(_153_),
    .B(_152_),
    .Y(_000_[7])
  );
  NAND _329_ (
    .A(data_in[8]),
    .B(selector),
    .Y(_154_)
  );
  NAND _330_ (
    .A(lane_0[8]),
    .B(_002_),
    .Y(_155_)
  );
  NAND _331_ (
    .A(_155_),
    .B(_154_),
    .Y(_000_[8])
  );
  NAND _332_ (
    .A(data_in[9]),
    .B(selector),
    .Y(_156_)
  );
  NAND _333_ (
    .A(lane_0[9]),
    .B(_002_),
    .Y(_157_)
  );
  NAND _334_ (
    .A(_157_),
    .B(_156_),
    .Y(_000_[9])
  );
  NAND _335_ (
    .A(data_in[10]),
    .B(selector),
    .Y(_158_)
  );
  NAND _336_ (
    .A(lane_0[10]),
    .B(_002_),
    .Y(_159_)
  );
  NAND _337_ (
    .A(_159_),
    .B(_158_),
    .Y(_000_[10])
  );
  NAND _338_ (
    .A(data_in[11]),
    .B(selector),
    .Y(_160_)
  );
  NAND _339_ (
    .A(lane_0[11]),
    .B(_002_),
    .Y(_161_)
  );
  NAND _340_ (
    .A(_161_),
    .B(_160_),
    .Y(_000_[11])
  );
  NAND _341_ (
    .A(data_in[12]),
    .B(selector),
    .Y(_162_)
  );
  NAND _342_ (
    .A(lane_0[12]),
    .B(_002_),
    .Y(_163_)
  );
  NAND _343_ (
    .A(_163_),
    .B(_162_),
    .Y(_000_[12])
  );
  NAND _344_ (
    .A(data_in[13]),
    .B(selector),
    .Y(_164_)
  );
  NAND _345_ (
    .A(lane_0[13]),
    .B(_002_),
    .Y(_165_)
  );
  NAND _346_ (
    .A(_165_),
    .B(_164_),
    .Y(_000_[13])
  );
  NAND _347_ (
    .A(data_in[14]),
    .B(selector),
    .Y(_166_)
  );
  NAND _348_ (
    .A(lane_0[14]),
    .B(_002_),
    .Y(_167_)
  );
  NAND _349_ (
    .A(_167_),
    .B(_166_),
    .Y(_000_[14])
  );
  NAND _350_ (
    .A(data_in[15]),
    .B(selector),
    .Y(_168_)
  );
  NAND _351_ (
    .A(lane_0[15]),
    .B(_002_),
    .Y(_169_)
  );
  NAND _352_ (
    .A(_169_),
    .B(_168_),
    .Y(_000_[15])
  );
  NAND _353_ (
    .A(data_in[16]),
    .B(selector),
    .Y(_170_)
  );
  NAND _354_ (
    .A(lane_0[16]),
    .B(_002_),
    .Y(_171_)
  );
  NAND _355_ (
    .A(_171_),
    .B(_170_),
    .Y(_000_[16])
  );
  NAND _356_ (
    .A(data_in[17]),
    .B(selector),
    .Y(_172_)
  );
  NAND _357_ (
    .A(lane_0[17]),
    .B(_002_),
    .Y(_173_)
  );
  NAND _358_ (
    .A(_173_),
    .B(_172_),
    .Y(_000_[17])
  );
  NAND _359_ (
    .A(data_in[18]),
    .B(selector),
    .Y(_174_)
  );
  NAND _360_ (
    .A(lane_0[18]),
    .B(_002_),
    .Y(_175_)
  );
  NAND _361_ (
    .A(_175_),
    .B(_174_),
    .Y(_000_[18])
  );
  NAND _362_ (
    .A(data_in[19]),
    .B(selector),
    .Y(_176_)
  );
  NAND _363_ (
    .A(lane_0[19]),
    .B(_002_),
    .Y(_177_)
  );
  NAND _364_ (
    .A(_177_),
    .B(_176_),
    .Y(_000_[19])
  );
  NAND _365_ (
    .A(data_in[20]),
    .B(selector),
    .Y(_178_)
  );
  NAND _366_ (
    .A(lane_0[20]),
    .B(_002_),
    .Y(_179_)
  );
  NAND _367_ (
    .A(_179_),
    .B(_178_),
    .Y(_000_[20])
  );
  NAND _368_ (
    .A(data_in[21]),
    .B(selector),
    .Y(_180_)
  );
  NAND _369_ (
    .A(lane_0[21]),
    .B(_002_),
    .Y(_181_)
  );
  NAND _370_ (
    .A(_181_),
    .B(_180_),
    .Y(_000_[21])
  );
  NAND _371_ (
    .A(data_in[22]),
    .B(selector),
    .Y(_182_)
  );
  NAND _372_ (
    .A(lane_0[22]),
    .B(_002_),
    .Y(_183_)
  );
  NAND _373_ (
    .A(_183_),
    .B(_182_),
    .Y(_000_[22])
  );
  NAND _374_ (
    .A(data_in[23]),
    .B(selector),
    .Y(_184_)
  );
  NAND _375_ (
    .A(lane_0[23]),
    .B(_002_),
    .Y(_185_)
  );
  NAND _376_ (
    .A(_185_),
    .B(_184_),
    .Y(_000_[23])
  );
  NAND _377_ (
    .A(data_in[24]),
    .B(selector),
    .Y(_186_)
  );
  NAND _378_ (
    .A(lane_0[24]),
    .B(_002_),
    .Y(_187_)
  );
  NAND _379_ (
    .A(_187_),
    .B(_186_),
    .Y(_000_[24])
  );
  NAND _380_ (
    .A(data_in[25]),
    .B(selector),
    .Y(_188_)
  );
  NAND _381_ (
    .A(lane_0[25]),
    .B(_002_),
    .Y(_189_)
  );
  NAND _382_ (
    .A(_189_),
    .B(_188_),
    .Y(_000_[25])
  );
  NAND _383_ (
    .A(data_in[26]),
    .B(selector),
    .Y(_190_)
  );
  NAND _384_ (
    .A(lane_0[26]),
    .B(_002_),
    .Y(_191_)
  );
  NAND _385_ (
    .A(_191_),
    .B(_190_),
    .Y(_000_[26])
  );
  NAND _386_ (
    .A(data_in[27]),
    .B(selector),
    .Y(_192_)
  );
  NAND _387_ (
    .A(lane_0[27]),
    .B(_002_),
    .Y(_193_)
  );
  NAND _388_ (
    .A(_193_),
    .B(_192_),
    .Y(_000_[27])
  );
  NAND _389_ (
    .A(data_in[28]),
    .B(selector),
    .Y(_194_)
  );
  NAND _390_ (
    .A(lane_0[28]),
    .B(_002_),
    .Y(_195_)
  );
  NAND _391_ (
    .A(_195_),
    .B(_194_),
    .Y(_000_[28])
  );
  NAND _392_ (
    .A(data_in[29]),
    .B(selector),
    .Y(_196_)
  );
  NAND _393_ (
    .A(lane_0[29]),
    .B(_002_),
    .Y(_197_)
  );
  NAND _394_ (
    .A(_197_),
    .B(_196_),
    .Y(_000_[29])
  );
  NAND _395_ (
    .A(data_in[30]),
    .B(selector),
    .Y(_198_)
  );
  NAND _396_ (
    .A(lane_0[30]),
    .B(_002_),
    .Y(_199_)
  );
  NAND _397_ (
    .A(_199_),
    .B(_198_),
    .Y(_000_[30])
  );
  NAND _398_ (
    .A(data_in[31]),
    .B(selector),
    .Y(_200_)
  );
  NAND _399_ (
    .A(lane_0[31]),
    .B(_002_),
    .Y(_201_)
  );
  NAND _400_ (
    .A(_201_),
    .B(_200_),
    .Y(_000_[31])
  );
  NAND _401_ (
    .A(valid1),
    .B(selector),
    .Y(_202_)
  );
  NAND _402_ (
    .A(_002_),
    .B(valid),
    .Y(_203_)
  );
  NAND _403_ (
    .A(_203_),
    .B(_202_),
    .Y(_004_)
  );
  NOT _404_ (
    .A(reset_L),
    .Y(_006_)
  );
  NOT _405_ (
    .A(reset_L),
    .Y(_007_)
  );
  NOT _406_ (
    .A(reset_L),
    .Y(_008_)
  );
  NOT _407_ (
    .A(reset_L),
    .Y(_009_)
  );
  NOT _408_ (
    .A(reset_L),
    .Y(_010_)
  );
  NOT _409_ (
    .A(reset_L),
    .Y(_011_)
  );
  NOT _410_ (
    .A(reset_L),
    .Y(_012_)
  );
  NOT _411_ (
    .A(reset_L),
    .Y(_013_)
  );
  NOT _412_ (
    .A(reset_L),
    .Y(_014_)
  );
  NOT _413_ (
    .A(reset_L),
    .Y(_015_)
  );
  NOT _414_ (
    .A(reset_L),
    .Y(_016_)
  );
  NOT _415_ (
    .A(reset_L),
    .Y(_017_)
  );
  NOT _416_ (
    .A(reset_L),
    .Y(_018_)
  );
  NOT _417_ (
    .A(reset_L),
    .Y(_019_)
  );
  NOT _418_ (
    .A(reset_L),
    .Y(_020_)
  );
  NOT _419_ (
    .A(reset_L),
    .Y(_021_)
  );
  NOT _420_ (
    .A(reset_L),
    .Y(_022_)
  );
  NOT _421_ (
    .A(reset_L),
    .Y(_023_)
  );
  NOT _422_ (
    .A(reset_L),
    .Y(_024_)
  );
  NOT _423_ (
    .A(reset_L),
    .Y(_025_)
  );
  NOT _424_ (
    .A(reset_L),
    .Y(_026_)
  );
  NOT _425_ (
    .A(reset_L),
    .Y(_027_)
  );
  NOT _426_ (
    .A(reset_L),
    .Y(_028_)
  );
  NOT _427_ (
    .A(reset_L),
    .Y(_029_)
  );
  NOT _428_ (
    .A(reset_L),
    .Y(_030_)
  );
  NOT _429_ (
    .A(reset_L),
    .Y(_031_)
  );
  NOT _430_ (
    .A(reset_L),
    .Y(_032_)
  );
  NOT _431_ (
    .A(reset_L),
    .Y(_033_)
  );
  NOT _432_ (
    .A(reset_L),
    .Y(_034_)
  );
  NOT _433_ (
    .A(reset_L),
    .Y(_035_)
  );
  NOT _434_ (
    .A(reset_L),
    .Y(_036_)
  );
  NOT _435_ (
    .A(reset_L),
    .Y(_037_)
  );
  NOT _436_ (
    .A(reset_L),
    .Y(_038_)
  );
  NOT _437_ (
    .A(reset_L),
    .Y(_039_)
  );
  NOT _438_ (
    .A(reset_L),
    .Y(_040_)
  );
  NOT _439_ (
    .A(reset_L),
    .Y(_041_)
  );
  NOT _440_ (
    .A(reset_L),
    .Y(_042_)
  );
  NOT _441_ (
    .A(reset_L),
    .Y(_043_)
  );
  NOT _442_ (
    .A(reset_L),
    .Y(_044_)
  );
  NOT _443_ (
    .A(reset_L),
    .Y(_045_)
  );
  NOT _444_ (
    .A(reset_L),
    .Y(_046_)
  );
  NOT _445_ (
    .A(reset_L),
    .Y(_047_)
  );
  NOT _446_ (
    .A(reset_L),
    .Y(_048_)
  );
  NOT _447_ (
    .A(reset_L),
    .Y(_049_)
  );
  NOT _448_ (
    .A(reset_L),
    .Y(_050_)
  );
  NOT _449_ (
    .A(reset_L),
    .Y(_051_)
  );
  NOT _450_ (
    .A(reset_L),
    .Y(_052_)
  );
  NOT _451_ (
    .A(reset_L),
    .Y(_053_)
  );
  NOT _452_ (
    .A(reset_L),
    .Y(_054_)
  );
  NOT _453_ (
    .A(reset_L),
    .Y(_055_)
  );
  NOT _454_ (
    .A(reset_L),
    .Y(_056_)
  );
  NOT _455_ (
    .A(reset_L),
    .Y(_057_)
  );
  NOT _456_ (
    .A(reset_L),
    .Y(_058_)
  );
  NOT _457_ (
    .A(reset_L),
    .Y(_059_)
  );
  NOT _458_ (
    .A(reset_L),
    .Y(_060_)
  );
  NOT _459_ (
    .A(reset_L),
    .Y(_061_)
  );
  NOT _460_ (
    .A(reset_L),
    .Y(_062_)
  );
  NOT _461_ (
    .A(reset_L),
    .Y(_063_)
  );
  NOT _462_ (
    .A(reset_L),
    .Y(_064_)
  );
  NOT _463_ (
    .A(reset_L),
    .Y(_065_)
  );
  NOT _464_ (
    .A(reset_L),
    .Y(_066_)
  );
  NOT _465_ (
    .A(reset_L),
    .Y(_067_)
  );
  NOT _466_ (
    .A(reset_L),
    .Y(_068_)
  );
  NOT _467_ (
    .A(reset_L),
    .Y(_069_)
  );
  NOT _468_ (
    .A(reset_L),
    .Y(_070_)
  );
  NOT _469_ (
    .A(reset_L),
    .Y(_071_)
  );
  DFFSR _470_ (
    .C(clockS2),
    .D(_000_[0]),
    .Q(lane_0[0]),
    .R(_006_),
    .S(1'b0)
  );
  DFFSR _471_ (
    .C(clockS2),
    .D(_000_[1]),
    .Q(lane_0[1]),
    .R(_007_),
    .S(1'b0)
  );
  DFFSR _472_ (
    .C(clockS2),
    .D(_000_[2]),
    .Q(lane_0[2]),
    .R(_008_),
    .S(1'b0)
  );
  DFFSR _473_ (
    .C(clockS2),
    .D(_000_[3]),
    .Q(lane_0[3]),
    .R(_009_),
    .S(1'b0)
  );
  DFFSR _474_ (
    .C(clockS2),
    .D(_000_[4]),
    .Q(lane_0[4]),
    .R(_010_),
    .S(1'b0)
  );
  DFFSR _475_ (
    .C(clockS2),
    .D(_000_[5]),
    .Q(lane_0[5]),
    .R(_011_),
    .S(1'b0)
  );
  DFFSR _476_ (
    .C(clockS2),
    .D(_000_[6]),
    .Q(lane_0[6]),
    .R(_012_),
    .S(1'b0)
  );
  DFFSR _477_ (
    .C(clockS2),
    .D(_000_[7]),
    .Q(lane_0[7]),
    .R(_013_),
    .S(1'b0)
  );
  DFFSR _478_ (
    .C(clockS2),
    .D(_000_[8]),
    .Q(lane_0[8]),
    .R(_014_),
    .S(1'b0)
  );
  DFFSR _479_ (
    .C(clockS2),
    .D(_000_[9]),
    .Q(lane_0[9]),
    .R(_015_),
    .S(1'b0)
  );
  DFFSR _480_ (
    .C(clockS2),
    .D(_000_[10]),
    .Q(lane_0[10]),
    .R(_016_),
    .S(1'b0)
  );
  DFFSR _481_ (
    .C(clockS2),
    .D(_000_[11]),
    .Q(lane_0[11]),
    .R(_017_),
    .S(1'b0)
  );
  DFFSR _482_ (
    .C(clockS2),
    .D(_000_[12]),
    .Q(lane_0[12]),
    .R(_018_),
    .S(1'b0)
  );
  DFFSR _483_ (
    .C(clockS2),
    .D(_000_[13]),
    .Q(lane_0[13]),
    .R(_019_),
    .S(1'b0)
  );
  DFFSR _484_ (
    .C(clockS2),
    .D(_000_[14]),
    .Q(lane_0[14]),
    .R(_020_),
    .S(1'b0)
  );
  DFFSR _485_ (
    .C(clockS2),
    .D(_000_[15]),
    .Q(lane_0[15]),
    .R(_021_),
    .S(1'b0)
  );
  DFFSR _486_ (
    .C(clockS2),
    .D(_000_[16]),
    .Q(lane_0[16]),
    .R(_022_),
    .S(1'b0)
  );
  DFFSR _487_ (
    .C(clockS2),
    .D(_000_[17]),
    .Q(lane_0[17]),
    .R(_023_),
    .S(1'b0)
  );
  DFFSR _488_ (
    .C(clockS2),
    .D(_000_[18]),
    .Q(lane_0[18]),
    .R(_024_),
    .S(1'b0)
  );
  DFFSR _489_ (
    .C(clockS2),
    .D(_000_[19]),
    .Q(lane_0[19]),
    .R(_025_),
    .S(1'b0)
  );
  DFFSR _490_ (
    .C(clockS2),
    .D(_000_[20]),
    .Q(lane_0[20]),
    .R(_026_),
    .S(1'b0)
  );
  DFFSR _491_ (
    .C(clockS2),
    .D(_000_[21]),
    .Q(lane_0[21]),
    .R(_027_),
    .S(1'b0)
  );
  DFFSR _492_ (
    .C(clockS2),
    .D(_000_[22]),
    .Q(lane_0[22]),
    .R(_028_),
    .S(1'b0)
  );
  DFFSR _493_ (
    .C(clockS2),
    .D(_000_[23]),
    .Q(lane_0[23]),
    .R(_029_),
    .S(1'b0)
  );
  DFFSR _494_ (
    .C(clockS2),
    .D(_000_[24]),
    .Q(lane_0[24]),
    .R(_030_),
    .S(1'b0)
  );
  DFFSR _495_ (
    .C(clockS2),
    .D(_000_[25]),
    .Q(lane_0[25]),
    .R(_031_),
    .S(1'b0)
  );
  DFFSR _496_ (
    .C(clockS2),
    .D(_000_[26]),
    .Q(lane_0[26]),
    .R(_032_),
    .S(1'b0)
  );
  DFFSR _497_ (
    .C(clockS2),
    .D(_000_[27]),
    .Q(lane_0[27]),
    .R(_033_),
    .S(1'b0)
  );
  DFFSR _498_ (
    .C(clockS2),
    .D(_000_[28]),
    .Q(lane_0[28]),
    .R(_034_),
    .S(1'b0)
  );
  DFFSR _499_ (
    .C(clockS2),
    .D(_000_[29]),
    .Q(lane_0[29]),
    .R(_035_),
    .S(1'b0)
  );
  DFFSR _500_ (
    .C(clockS2),
    .D(_000_[30]),
    .Q(lane_0[30]),
    .R(_036_),
    .S(1'b0)
  );
  DFFSR _501_ (
    .C(clockS2),
    .D(_000_[31]),
    .Q(lane_0[31]),
    .R(_037_),
    .S(1'b0)
  );
  DFFSR _502_ (
    .C(clockS2),
    .D(_001_[0]),
    .Q(lane_1[0]),
    .R(_038_),
    .S(1'b0)
  );
  DFFSR _503_ (
    .C(clockS2),
    .D(_001_[1]),
    .Q(lane_1[1]),
    .R(_039_),
    .S(1'b0)
  );
  DFFSR _504_ (
    .C(clockS2),
    .D(_001_[2]),
    .Q(lane_1[2]),
    .R(_040_),
    .S(1'b0)
  );
  DFFSR _505_ (
    .C(clockS2),
    .D(_001_[3]),
    .Q(lane_1[3]),
    .R(_041_),
    .S(1'b0)
  );
  DFFSR _506_ (
    .C(clockS2),
    .D(_001_[4]),
    .Q(lane_1[4]),
    .R(_042_),
    .S(1'b0)
  );
  DFFSR _507_ (
    .C(clockS2),
    .D(_001_[5]),
    .Q(lane_1[5]),
    .R(_043_),
    .S(1'b0)
  );
  DFFSR _508_ (
    .C(clockS2),
    .D(_001_[6]),
    .Q(lane_1[6]),
    .R(_044_),
    .S(1'b0)
  );
  DFFSR _509_ (
    .C(clockS2),
    .D(_001_[7]),
    .Q(lane_1[7]),
    .R(_045_),
    .S(1'b0)
  );
  DFFSR _510_ (
    .C(clockS2),
    .D(_001_[8]),
    .Q(lane_1[8]),
    .R(_046_),
    .S(1'b0)
  );
  DFFSR _511_ (
    .C(clockS2),
    .D(_001_[9]),
    .Q(lane_1[9]),
    .R(_047_),
    .S(1'b0)
  );
  DFFSR _512_ (
    .C(clockS2),
    .D(_001_[10]),
    .Q(lane_1[10]),
    .R(_048_),
    .S(1'b0)
  );
  DFFSR _513_ (
    .C(clockS2),
    .D(_001_[11]),
    .Q(lane_1[11]),
    .R(_049_),
    .S(1'b0)
  );
  DFFSR _514_ (
    .C(clockS2),
    .D(_001_[12]),
    .Q(lane_1[12]),
    .R(_050_),
    .S(1'b0)
  );
  DFFSR _515_ (
    .C(clockS2),
    .D(_001_[13]),
    .Q(lane_1[13]),
    .R(_051_),
    .S(1'b0)
  );
  DFFSR _516_ (
    .C(clockS2),
    .D(_001_[14]),
    .Q(lane_1[14]),
    .R(_052_),
    .S(1'b0)
  );
  DFFSR _517_ (
    .C(clockS2),
    .D(_001_[15]),
    .Q(lane_1[15]),
    .R(_053_),
    .S(1'b0)
  );
  DFFSR _518_ (
    .C(clockS2),
    .D(_001_[16]),
    .Q(lane_1[16]),
    .R(_054_),
    .S(1'b0)
  );
  DFFSR _519_ (
    .C(clockS2),
    .D(_001_[17]),
    .Q(lane_1[17]),
    .R(_055_),
    .S(1'b0)
  );
  DFFSR _520_ (
    .C(clockS2),
    .D(_001_[18]),
    .Q(lane_1[18]),
    .R(_056_),
    .S(1'b0)
  );
  DFFSR _521_ (
    .C(clockS2),
    .D(_001_[19]),
    .Q(lane_1[19]),
    .R(_057_),
    .S(1'b0)
  );
  DFFSR _522_ (
    .C(clockS2),
    .D(_001_[20]),
    .Q(lane_1[20]),
    .R(_058_),
    .S(1'b0)
  );
  DFFSR _523_ (
    .C(clockS2),
    .D(_001_[21]),
    .Q(lane_1[21]),
    .R(_059_),
    .S(1'b0)
  );
  DFFSR _524_ (
    .C(clockS2),
    .D(_001_[22]),
    .Q(lane_1[22]),
    .R(_060_),
    .S(1'b0)
  );
  DFFSR _525_ (
    .C(clockS2),
    .D(_001_[23]),
    .Q(lane_1[23]),
    .R(_061_),
    .S(1'b0)
  );
  DFFSR _526_ (
    .C(clockS2),
    .D(_001_[24]),
    .Q(lane_1[24]),
    .R(_062_),
    .S(1'b0)
  );
  DFFSR _527_ (
    .C(clockS2),
    .D(_001_[25]),
    .Q(lane_1[25]),
    .R(_063_),
    .S(1'b0)
  );
  DFFSR _528_ (
    .C(clockS2),
    .D(_001_[26]),
    .Q(lane_1[26]),
    .R(_064_),
    .S(1'b0)
  );
  DFFSR _529_ (
    .C(clockS2),
    .D(_001_[27]),
    .Q(lane_1[27]),
    .R(_065_),
    .S(1'b0)
  );
  DFFSR _530_ (
    .C(clockS2),
    .D(_001_[28]),
    .Q(lane_1[28]),
    .R(_066_),
    .S(1'b0)
  );
  DFFSR _531_ (
    .C(clockS2),
    .D(_001_[29]),
    .Q(lane_1[29]),
    .R(_067_),
    .S(1'b0)
  );
  DFFSR _532_ (
    .C(clockS2),
    .D(_001_[30]),
    .Q(lane_1[30]),
    .R(_068_),
    .S(1'b0)
  );
  DFFSR _533_ (
    .C(clockS2),
    .D(_001_[31]),
    .Q(lane_1[31]),
    .R(_069_),
    .S(1'b0)
  );
  DFFSR _534_ (
    .C(clockS2),
    .D(_002_),
    .Q(selector),
    .R(_070_),
    .S(1'b0)
  );
  DFFSR _535_ (
    .C(clockS2),
    .D(_003_),
    .Q(valid0),
    .R(_071_),
    .S(1'b0)
  );
  DFFSR _536_ (
    .C(clockS2),
    .D(_004_),
    .Q(valid1),
    .R(_005_),
    .S(1'b0)
  );
endmodule

(* src = "c32b_8bS.v:3" *)
module c32b_8bS(data_in, data_out, valid_in, clockS1, clockS4, reset_L, valid_out);
  (* src = "c32b_8bS.v:10" *)
  wire [7:0] _000_;
  (* src = "c32b_8bS.v:10" *)
  wire [1:0] _001_;
  (* src = "c32b_8bS.v:10" *)
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  (* src = "c32b_8bS.v:5" *)
  input clockS1;
  (* src = "c32b_8bS.v:5" *)
  input clockS4;
  (* src = "c32b_8bS.v:3" *)
  input [31:0] data_in;
  (* src = "c32b_8bS.v:4" *)
  output [7:0] data_out;
  (* src = "c32b_8bS.v:5" *)
  input reset_L;
  (* src = "c32b_8bS.v:9" *)
  wire [1:0] select;
  (* src = "c32b_8bS.v:5" *)
  input valid_in;
  (* src = "c32b_8bS.v:6" *)
  output valid_out;
  NOT _099_ (
    .A(reset_L),
    .Y(_003_)
  );
  NOT _100_ (
    .A(select[0]),
    .Y(_001_[0])
  );
  NOT _101_ (
    .A(data_in[7]),
    .Y(_061_)
  );
  NAND _102_ (
    .A(select[1]),
    .B(select[0]),
    .Y(_062_)
  );
  NOR _103_ (
    .A(_062_),
    .B(_061_),
    .Y(_063_)
  );
  NOT _104_ (
    .A(data_in[23]),
    .Y(_064_)
  );
  NOT _105_ (
    .A(select[1]),
    .Y(_065_)
  );
  NAND _106_ (
    .A(_065_),
    .B(select[0]),
    .Y(_066_)
  );
  NOR _107_ (
    .A(_066_),
    .B(_064_),
    .Y(_067_)
  );
  NOR _108_ (
    .A(_067_),
    .B(_063_),
    .Y(_068_)
  );
  NOT _109_ (
    .A(data_in[31]),
    .Y(_069_)
  );
  NAND _110_ (
    .A(_065_),
    .B(_001_[0]),
    .Y(_070_)
  );
  NOR _111_ (
    .A(_070_),
    .B(_069_),
    .Y(_071_)
  );
  NOT _112_ (
    .A(data_in[15]),
    .Y(_072_)
  );
  NAND _113_ (
    .A(select[1]),
    .B(_001_[0]),
    .Y(_073_)
  );
  NOR _114_ (
    .A(_073_),
    .B(_072_),
    .Y(_074_)
  );
  NOR _115_ (
    .A(_074_),
    .B(_071_),
    .Y(_075_)
  );
  NAND _116_ (
    .A(_075_),
    .B(_068_),
    .Y(_000_[7])
  );
  NOT _117_ (
    .A(data_in[6]),
    .Y(_076_)
  );
  NOR _118_ (
    .A(_062_),
    .B(_076_),
    .Y(_077_)
  );
  NOT _119_ (
    .A(data_in[30]),
    .Y(_079_)
  );
  NOR _120_ (
    .A(_070_),
    .B(_079_),
    .Y(_081_)
  );
  NOR _121_ (
    .A(_081_),
    .B(_077_),
    .Y(_083_)
  );
  NOT _122_ (
    .A(data_in[22]),
    .Y(_085_)
  );
  NOR _123_ (
    .A(_066_),
    .B(_085_),
    .Y(_087_)
  );
  NOT _124_ (
    .A(data_in[14]),
    .Y(_089_)
  );
  NOR _125_ (
    .A(_073_),
    .B(_089_),
    .Y(_091_)
  );
  NOR _126_ (
    .A(_091_),
    .B(_087_),
    .Y(_093_)
  );
  NAND _127_ (
    .A(_093_),
    .B(_083_),
    .Y(_000_[6])
  );
  NOT _128_ (
    .A(data_in[21]),
    .Y(_096_)
  );
  NOR _129_ (
    .A(_066_),
    .B(_096_),
    .Y(_097_)
  );
  NOT _130_ (
    .A(data_in[5]),
    .Y(_098_)
  );
  NOR _131_ (
    .A(_062_),
    .B(_098_),
    .Y(_004_)
  );
  NOR _132_ (
    .A(_004_),
    .B(_097_),
    .Y(_005_)
  );
  NOT _133_ (
    .A(data_in[13]),
    .Y(_006_)
  );
  NOR _134_ (
    .A(_073_),
    .B(_006_),
    .Y(_007_)
  );
  NOT _135_ (
    .A(data_in[29]),
    .Y(_008_)
  );
  NOR _136_ (
    .A(_070_),
    .B(_008_),
    .Y(_009_)
  );
  NOR _137_ (
    .A(_009_),
    .B(_007_),
    .Y(_010_)
  );
  NAND _138_ (
    .A(_010_),
    .B(_005_),
    .Y(_000_[5])
  );
  NOT _139_ (
    .A(data_in[4]),
    .Y(_011_)
  );
  NOR _140_ (
    .A(_062_),
    .B(_011_),
    .Y(_012_)
  );
  NOT _141_ (
    .A(data_in[28]),
    .Y(_013_)
  );
  NOR _142_ (
    .A(_070_),
    .B(_013_),
    .Y(_014_)
  );
  NOR _143_ (
    .A(_014_),
    .B(_012_),
    .Y(_015_)
  );
  NOT _144_ (
    .A(data_in[20]),
    .Y(_016_)
  );
  NOR _145_ (
    .A(_066_),
    .B(_016_),
    .Y(_017_)
  );
  NOT _146_ (
    .A(data_in[12]),
    .Y(_018_)
  );
  NOR _147_ (
    .A(_073_),
    .B(_018_),
    .Y(_019_)
  );
  NOR _148_ (
    .A(_019_),
    .B(_017_),
    .Y(_020_)
  );
  NAND _149_ (
    .A(_020_),
    .B(_015_),
    .Y(_000_[4])
  );
  NOT _150_ (
    .A(data_in[11]),
    .Y(_021_)
  );
  NOR _151_ (
    .A(_073_),
    .B(_021_),
    .Y(_022_)
  );
  NOT _152_ (
    .A(data_in[3]),
    .Y(_023_)
  );
  NOR _153_ (
    .A(_062_),
    .B(_023_),
    .Y(_024_)
  );
  NOR _154_ (
    .A(_024_),
    .B(_022_),
    .Y(_025_)
  );
  NOT _155_ (
    .A(data_in[27]),
    .Y(_026_)
  );
  NOR _156_ (
    .A(_070_),
    .B(_026_),
    .Y(_027_)
  );
  NOT _157_ (
    .A(data_in[19]),
    .Y(_028_)
  );
  NOR _158_ (
    .A(_066_),
    .B(_028_),
    .Y(_029_)
  );
  NOR _159_ (
    .A(_029_),
    .B(_027_),
    .Y(_030_)
  );
  NAND _160_ (
    .A(_030_),
    .B(_025_),
    .Y(_000_[3])
  );
  NOT _161_ (
    .A(data_in[10]),
    .Y(_031_)
  );
  NOR _162_ (
    .A(_073_),
    .B(_031_),
    .Y(_032_)
  );
  NOT _163_ (
    .A(data_in[2]),
    .Y(_033_)
  );
  NOR _164_ (
    .A(_062_),
    .B(_033_),
    .Y(_034_)
  );
  NOR _165_ (
    .A(_034_),
    .B(_032_),
    .Y(_035_)
  );
  NOT _166_ (
    .A(data_in[18]),
    .Y(_036_)
  );
  NOR _167_ (
    .A(_066_),
    .B(_036_),
    .Y(_037_)
  );
  NOT _168_ (
    .A(data_in[26]),
    .Y(_038_)
  );
  NOR _169_ (
    .A(_070_),
    .B(_038_),
    .Y(_039_)
  );
  NOR _170_ (
    .A(_039_),
    .B(_037_),
    .Y(_040_)
  );
  NAND _171_ (
    .A(_040_),
    .B(_035_),
    .Y(_000_[2])
  );
  NOT _172_ (
    .A(data_in[9]),
    .Y(_041_)
  );
  NOR _173_ (
    .A(_073_),
    .B(_041_),
    .Y(_042_)
  );
  NOT _174_ (
    .A(data_in[1]),
    .Y(_043_)
  );
  NOR _175_ (
    .A(_062_),
    .B(_043_),
    .Y(_044_)
  );
  NOR _176_ (
    .A(_044_),
    .B(_042_),
    .Y(_045_)
  );
  NOT _177_ (
    .A(data_in[17]),
    .Y(_046_)
  );
  NOR _178_ (
    .A(_066_),
    .B(_046_),
    .Y(_047_)
  );
  NOT _179_ (
    .A(data_in[25]),
    .Y(_048_)
  );
  NOR _180_ (
    .A(_070_),
    .B(_048_),
    .Y(_049_)
  );
  NOR _181_ (
    .A(_049_),
    .B(_047_),
    .Y(_050_)
  );
  NAND _182_ (
    .A(_050_),
    .B(_045_),
    .Y(_000_[1])
  );
  NOT _183_ (
    .A(data_in[24]),
    .Y(_051_)
  );
  NOR _184_ (
    .A(_070_),
    .B(_051_),
    .Y(_052_)
  );
  NOT _185_ (
    .A(data_in[0]),
    .Y(_053_)
  );
  NOR _186_ (
    .A(_062_),
    .B(_053_),
    .Y(_054_)
  );
  NOR _187_ (
    .A(_054_),
    .B(_052_),
    .Y(_055_)
  );
  NOT _188_ (
    .A(data_in[8]),
    .Y(_056_)
  );
  NOR _189_ (
    .A(_073_),
    .B(_056_),
    .Y(_057_)
  );
  NOT _190_ (
    .A(data_in[16]),
    .Y(_058_)
  );
  NOR _191_ (
    .A(_066_),
    .B(_058_),
    .Y(_059_)
  );
  NOR _192_ (
    .A(_059_),
    .B(_057_),
    .Y(_060_)
  );
  NAND _193_ (
    .A(_060_),
    .B(_055_),
    .Y(_000_[0])
  );
  NAND _194_ (
    .A(_073_),
    .B(_066_),
    .Y(_001_[1])
  );
  BUF _195_ (
    .A(valid_in),
    .Y(_002_)
  );
  NOT _196_ (
    .A(reset_L),
    .Y(_078_)
  );
  NOT _197_ (
    .A(reset_L),
    .Y(_080_)
  );
  NOT _198_ (
    .A(reset_L),
    .Y(_082_)
  );
  NOT _199_ (
    .A(reset_L),
    .Y(_084_)
  );
  NOT _200_ (
    .A(reset_L),
    .Y(_086_)
  );
  NOT _201_ (
    .A(reset_L),
    .Y(_088_)
  );
  NOT _202_ (
    .A(reset_L),
    .Y(_090_)
  );
  NOT _203_ (
    .A(reset_L),
    .Y(_092_)
  );
  NOT _204_ (
    .A(reset_L),
    .Y(_094_)
  );
  NOT _205_ (
    .A(reset_L),
    .Y(_095_)
  );
  DFFSR _206_ (
    .C(clockS4),
    .D(_000_[0]),
    .Q(data_out[0]),
    .R(_078_),
    .S(1'b0)
  );
  DFFSR _207_ (
    .C(clockS4),
    .D(_000_[1]),
    .Q(data_out[1]),
    .R(_080_),
    .S(1'b0)
  );
  DFFSR _208_ (
    .C(clockS4),
    .D(_000_[2]),
    .Q(data_out[2]),
    .R(_082_),
    .S(1'b0)
  );
  DFFSR _209_ (
    .C(clockS4),
    .D(_000_[3]),
    .Q(data_out[3]),
    .R(_084_),
    .S(1'b0)
  );
  DFFSR _210_ (
    .C(clockS4),
    .D(_000_[4]),
    .Q(data_out[4]),
    .R(_086_),
    .S(1'b0)
  );
  DFFSR _211_ (
    .C(clockS4),
    .D(_000_[5]),
    .Q(data_out[5]),
    .R(_088_),
    .S(1'b0)
  );
  DFFSR _212_ (
    .C(clockS4),
    .D(_000_[6]),
    .Q(data_out[6]),
    .R(_090_),
    .S(1'b0)
  );
  DFFSR _213_ (
    .C(clockS4),
    .D(_000_[7]),
    .Q(data_out[7]),
    .R(_092_),
    .S(1'b0)
  );
  DFFSR _214_ (
    .C(clockS4),
    .D(_002_),
    .Q(valid_out),
    .R(_094_),
    .S(1'b0)
  );
  DFFSR _215_ (
    .C(clockS4),
    .D(_001_[0]),
    .Q(select[0]),
    .R(1'b0),
    .S(_095_)
  );
  DFFSR _216_ (
    .C(clockS4),
    .D(_001_[1]),
    .Q(select[1]),
    .R(_003_),
    .S(1'b0)
  );
endmodule

(* src = "c32b_8bS0S.v:3" *)
module c32b_8bS0S(data_in, data_out, valid_in, clockS1, clockS4, reset_L, valid_out);
  (* src = "c32b_8bS0S.v:10" *)
  wire [7:0] _000_;
  (* src = "c32b_8bS0S.v:10" *)
  wire [1:0] _001_;
  (* src = "c32b_8bS0S.v:10" *)
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  (* src = "c32b_8bS0S.v:5" *)
  input clockS1;
  (* src = "c32b_8bS0S.v:5" *)
  input clockS4;
  (* src = "c32b_8bS0S.v:3" *)
  input [31:0] data_in;
  (* src = "c32b_8bS0S.v:4" *)
  output [7:0] data_out;
  (* src = "c32b_8bS0S.v:5" *)
  input reset_L;
  (* src = "c32b_8bS0S.v:9" *)
  wire [1:0] select;
  (* src = "c32b_8bS0S.v:5" *)
  input valid_in;
  (* src = "c32b_8bS0S.v:6" *)
  output valid_out;
  NOT _099_ (
    .A(reset_L),
    .Y(_003_)
  );
  NOT _100_ (
    .A(select[0]),
    .Y(_001_[0])
  );
  NOT _101_ (
    .A(data_in[7]),
    .Y(_061_)
  );
  NAND _102_ (
    .A(select[1]),
    .B(select[0]),
    .Y(_062_)
  );
  NOR _103_ (
    .A(_062_),
    .B(_061_),
    .Y(_063_)
  );
  NOT _104_ (
    .A(data_in[23]),
    .Y(_064_)
  );
  NOT _105_ (
    .A(select[1]),
    .Y(_065_)
  );
  NAND _106_ (
    .A(_065_),
    .B(select[0]),
    .Y(_066_)
  );
  NOR _107_ (
    .A(_066_),
    .B(_064_),
    .Y(_067_)
  );
  NOR _108_ (
    .A(_067_),
    .B(_063_),
    .Y(_068_)
  );
  NOT _109_ (
    .A(data_in[31]),
    .Y(_069_)
  );
  NAND _110_ (
    .A(_065_),
    .B(_001_[0]),
    .Y(_070_)
  );
  NOR _111_ (
    .A(_070_),
    .B(_069_),
    .Y(_071_)
  );
  NOT _112_ (
    .A(data_in[15]),
    .Y(_072_)
  );
  NAND _113_ (
    .A(select[1]),
    .B(_001_[0]),
    .Y(_073_)
  );
  NOR _114_ (
    .A(_073_),
    .B(_072_),
    .Y(_074_)
  );
  NOR _115_ (
    .A(_074_),
    .B(_071_),
    .Y(_075_)
  );
  NAND _116_ (
    .A(_075_),
    .B(_068_),
    .Y(_000_[7])
  );
  NOT _117_ (
    .A(data_in[6]),
    .Y(_076_)
  );
  NOR _118_ (
    .A(_062_),
    .B(_076_),
    .Y(_077_)
  );
  NOT _119_ (
    .A(data_in[30]),
    .Y(_079_)
  );
  NOR _120_ (
    .A(_070_),
    .B(_079_),
    .Y(_081_)
  );
  NOR _121_ (
    .A(_081_),
    .B(_077_),
    .Y(_083_)
  );
  NOT _122_ (
    .A(data_in[22]),
    .Y(_085_)
  );
  NOR _123_ (
    .A(_066_),
    .B(_085_),
    .Y(_087_)
  );
  NOT _124_ (
    .A(data_in[14]),
    .Y(_089_)
  );
  NOR _125_ (
    .A(_073_),
    .B(_089_),
    .Y(_091_)
  );
  NOR _126_ (
    .A(_091_),
    .B(_087_),
    .Y(_093_)
  );
  NAND _127_ (
    .A(_093_),
    .B(_083_),
    .Y(_000_[6])
  );
  NOT _128_ (
    .A(data_in[21]),
    .Y(_096_)
  );
  NOR _129_ (
    .A(_066_),
    .B(_096_),
    .Y(_097_)
  );
  NOT _130_ (
    .A(data_in[5]),
    .Y(_098_)
  );
  NOR _131_ (
    .A(_062_),
    .B(_098_),
    .Y(_004_)
  );
  NOR _132_ (
    .A(_004_),
    .B(_097_),
    .Y(_005_)
  );
  NOT _133_ (
    .A(data_in[13]),
    .Y(_006_)
  );
  NOR _134_ (
    .A(_073_),
    .B(_006_),
    .Y(_007_)
  );
  NOT _135_ (
    .A(data_in[29]),
    .Y(_008_)
  );
  NOR _136_ (
    .A(_070_),
    .B(_008_),
    .Y(_009_)
  );
  NOR _137_ (
    .A(_009_),
    .B(_007_),
    .Y(_010_)
  );
  NAND _138_ (
    .A(_010_),
    .B(_005_),
    .Y(_000_[5])
  );
  NOT _139_ (
    .A(data_in[4]),
    .Y(_011_)
  );
  NOR _140_ (
    .A(_062_),
    .B(_011_),
    .Y(_012_)
  );
  NOT _141_ (
    .A(data_in[28]),
    .Y(_013_)
  );
  NOR _142_ (
    .A(_070_),
    .B(_013_),
    .Y(_014_)
  );
  NOR _143_ (
    .A(_014_),
    .B(_012_),
    .Y(_015_)
  );
  NOT _144_ (
    .A(data_in[20]),
    .Y(_016_)
  );
  NOR _145_ (
    .A(_066_),
    .B(_016_),
    .Y(_017_)
  );
  NOT _146_ (
    .A(data_in[12]),
    .Y(_018_)
  );
  NOR _147_ (
    .A(_073_),
    .B(_018_),
    .Y(_019_)
  );
  NOR _148_ (
    .A(_019_),
    .B(_017_),
    .Y(_020_)
  );
  NAND _149_ (
    .A(_020_),
    .B(_015_),
    .Y(_000_[4])
  );
  NOT _150_ (
    .A(data_in[11]),
    .Y(_021_)
  );
  NOR _151_ (
    .A(_073_),
    .B(_021_),
    .Y(_022_)
  );
  NOT _152_ (
    .A(data_in[3]),
    .Y(_023_)
  );
  NOR _153_ (
    .A(_062_),
    .B(_023_),
    .Y(_024_)
  );
  NOR _154_ (
    .A(_024_),
    .B(_022_),
    .Y(_025_)
  );
  NOT _155_ (
    .A(data_in[27]),
    .Y(_026_)
  );
  NOR _156_ (
    .A(_070_),
    .B(_026_),
    .Y(_027_)
  );
  NOT _157_ (
    .A(data_in[19]),
    .Y(_028_)
  );
  NOR _158_ (
    .A(_066_),
    .B(_028_),
    .Y(_029_)
  );
  NOR _159_ (
    .A(_029_),
    .B(_027_),
    .Y(_030_)
  );
  NAND _160_ (
    .A(_030_),
    .B(_025_),
    .Y(_000_[3])
  );
  NOT _161_ (
    .A(data_in[10]),
    .Y(_031_)
  );
  NOR _162_ (
    .A(_073_),
    .B(_031_),
    .Y(_032_)
  );
  NOT _163_ (
    .A(data_in[2]),
    .Y(_033_)
  );
  NOR _164_ (
    .A(_062_),
    .B(_033_),
    .Y(_034_)
  );
  NOR _165_ (
    .A(_034_),
    .B(_032_),
    .Y(_035_)
  );
  NOT _166_ (
    .A(data_in[18]),
    .Y(_036_)
  );
  NOR _167_ (
    .A(_066_),
    .B(_036_),
    .Y(_037_)
  );
  NOT _168_ (
    .A(data_in[26]),
    .Y(_038_)
  );
  NOR _169_ (
    .A(_070_),
    .B(_038_),
    .Y(_039_)
  );
  NOR _170_ (
    .A(_039_),
    .B(_037_),
    .Y(_040_)
  );
  NAND _171_ (
    .A(_040_),
    .B(_035_),
    .Y(_000_[2])
  );
  NOT _172_ (
    .A(data_in[9]),
    .Y(_041_)
  );
  NOR _173_ (
    .A(_073_),
    .B(_041_),
    .Y(_042_)
  );
  NOT _174_ (
    .A(data_in[1]),
    .Y(_043_)
  );
  NOR _175_ (
    .A(_062_),
    .B(_043_),
    .Y(_044_)
  );
  NOR _176_ (
    .A(_044_),
    .B(_042_),
    .Y(_045_)
  );
  NOT _177_ (
    .A(data_in[17]),
    .Y(_046_)
  );
  NOR _178_ (
    .A(_066_),
    .B(_046_),
    .Y(_047_)
  );
  NOT _179_ (
    .A(data_in[25]),
    .Y(_048_)
  );
  NOR _180_ (
    .A(_070_),
    .B(_048_),
    .Y(_049_)
  );
  NOR _181_ (
    .A(_049_),
    .B(_047_),
    .Y(_050_)
  );
  NAND _182_ (
    .A(_050_),
    .B(_045_),
    .Y(_000_[1])
  );
  NOT _183_ (
    .A(data_in[24]),
    .Y(_051_)
  );
  NOR _184_ (
    .A(_070_),
    .B(_051_),
    .Y(_052_)
  );
  NOT _185_ (
    .A(data_in[0]),
    .Y(_053_)
  );
  NOR _186_ (
    .A(_062_),
    .B(_053_),
    .Y(_054_)
  );
  NOR _187_ (
    .A(_054_),
    .B(_052_),
    .Y(_055_)
  );
  NOT _188_ (
    .A(data_in[8]),
    .Y(_056_)
  );
  NOR _189_ (
    .A(_073_),
    .B(_056_),
    .Y(_057_)
  );
  NOT _190_ (
    .A(data_in[16]),
    .Y(_058_)
  );
  NOR _191_ (
    .A(_066_),
    .B(_058_),
    .Y(_059_)
  );
  NOR _192_ (
    .A(_059_),
    .B(_057_),
    .Y(_060_)
  );
  NAND _193_ (
    .A(_060_),
    .B(_055_),
    .Y(_000_[0])
  );
  NAND _194_ (
    .A(_073_),
    .B(_066_),
    .Y(_001_[1])
  );
  BUF _195_ (
    .A(valid_in),
    .Y(_002_)
  );
  NOT _196_ (
    .A(reset_L),
    .Y(_078_)
  );
  NOT _197_ (
    .A(reset_L),
    .Y(_080_)
  );
  NOT _198_ (
    .A(reset_L),
    .Y(_082_)
  );
  NOT _199_ (
    .A(reset_L),
    .Y(_084_)
  );
  NOT _200_ (
    .A(reset_L),
    .Y(_086_)
  );
  NOT _201_ (
    .A(reset_L),
    .Y(_088_)
  );
  NOT _202_ (
    .A(reset_L),
    .Y(_090_)
  );
  NOT _203_ (
    .A(reset_L),
    .Y(_092_)
  );
  NOT _204_ (
    .A(reset_L),
    .Y(_094_)
  );
  NOT _205_ (
    .A(reset_L),
    .Y(_095_)
  );
  DFFSR _206_ (
    .C(clockS4),
    .D(_000_[0]),
    .Q(data_out[0]),
    .R(_078_),
    .S(1'b0)
  );
  DFFSR _207_ (
    .C(clockS4),
    .D(_000_[1]),
    .Q(data_out[1]),
    .R(_080_),
    .S(1'b0)
  );
  DFFSR _208_ (
    .C(clockS4),
    .D(_000_[2]),
    .Q(data_out[2]),
    .R(_082_),
    .S(1'b0)
  );
  DFFSR _209_ (
    .C(clockS4),
    .D(_000_[3]),
    .Q(data_out[3]),
    .R(_084_),
    .S(1'b0)
  );
  DFFSR _210_ (
    .C(clockS4),
    .D(_000_[4]),
    .Q(data_out[4]),
    .R(_086_),
    .S(1'b0)
  );
  DFFSR _211_ (
    .C(clockS4),
    .D(_000_[5]),
    .Q(data_out[5]),
    .R(_088_),
    .S(1'b0)
  );
  DFFSR _212_ (
    .C(clockS4),
    .D(_000_[6]),
    .Q(data_out[6]),
    .R(_090_),
    .S(1'b0)
  );
  DFFSR _213_ (
    .C(clockS4),
    .D(_000_[7]),
    .Q(data_out[7]),
    .R(_092_),
    .S(1'b0)
  );
  DFFSR _214_ (
    .C(clockS4),
    .D(_002_),
    .Q(valid_out),
    .R(_094_),
    .S(1'b0)
  );
  DFFSR _215_ (
    .C(clockS4),
    .D(_001_[0]),
    .Q(select[0]),
    .R(1'b0),
    .S(_095_)
  );
  DFFSR _216_ (
    .C(clockS4),
    .D(_001_[1]),
    .Q(select[1]),
    .R(1'b0),
    .S(_003_)
  );
endmodule

(* src = "c8b_32bS.v:3" *)
module c8b_32bS(data_in, data_out, valid, clockS1, clockS4, reset_L, valid_out);
  (* src = "c8b_32bS.v:19" *)
  wire [31:0] _000_;
  (* src = "c8b_32bS.v:19" *)
  wire [1:0] _001_;
  (* src = "c8b_32bS.v:19" *)
  wire [31:0] _002_;
  (* src = "c8b_32bS.v:19" *)
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  (* src = "c8b_32bS.v:11" *)
  wire [31:0] bus0;
  (* src = "c8b_32bS.v:6" *)
  input clockS1;
  (* src = "c8b_32bS.v:7" *)
  input clockS4;
  (* src = "c8b_32bS.v:12" *)
  wire [1:0] counter;
  (* onehot = 32'd1 *)
  wire [1:0] counter0;
  (* src = "c8b_32bS.v:3" *)
  input [7:0] data_in;
  (* src = "c8b_32bS.v:4" *)
  output [31:0] data_out;
  (* src = "c8b_32bS.v:8" *)
  input reset_L;
  (* src = "c8b_32bS.v:5" *)
  input valid;
  (* src = "c8b_32bS.v:9" *)
  output valid_out;
  NOT _216_ (
    .A(reset_L),
    .Y(_004_)
  );
  NOT _217_ (
    .A(counter[0]),
    .Y(_001_[0])
  );
  NOT _218_ (
    .A(counter0[1]),
    .Y(_007_)
  );
  NOT _219_ (
    .A(counter[1]),
    .Y(_009_)
  );
  NOR _220_ (
    .A(_009_),
    .B(_001_[0]),
    .Y(_011_)
  );
  NAND _221_ (
    .A(_011_),
    .B(_007_),
    .Y(_005_)
  );
  NAND _222_ (
    .A(_011_),
    .B(data_in[7]),
    .Y(_014_)
  );
  NAND _223_ (
    .A(counter[1]),
    .B(counter[0]),
    .Y(_016_)
  );
  NAND _224_ (
    .A(_016_),
    .B(bus0[7]),
    .Y(_018_)
  );
  NAND _225_ (
    .A(_018_),
    .B(_014_),
    .Y(_000_[7])
  );
  NAND _226_ (
    .A(_011_),
    .B(data_in[6]),
    .Y(_021_)
  );
  NAND _227_ (
    .A(_016_),
    .B(bus0[6]),
    .Y(_023_)
  );
  NAND _228_ (
    .A(_023_),
    .B(_021_),
    .Y(_000_[6])
  );
  NAND _229_ (
    .A(_011_),
    .B(data_in[5]),
    .Y(_026_)
  );
  NAND _230_ (
    .A(_016_),
    .B(bus0[5]),
    .Y(_028_)
  );
  NAND _231_ (
    .A(_028_),
    .B(_026_),
    .Y(_000_[5])
  );
  NAND _232_ (
    .A(_011_),
    .B(data_in[4]),
    .Y(_031_)
  );
  NAND _233_ (
    .A(_016_),
    .B(bus0[4]),
    .Y(_033_)
  );
  NAND _234_ (
    .A(_033_),
    .B(_031_),
    .Y(_000_[4])
  );
  NAND _235_ (
    .A(_011_),
    .B(data_in[3]),
    .Y(_036_)
  );
  NAND _236_ (
    .A(_016_),
    .B(bus0[3]),
    .Y(_038_)
  );
  NAND _237_ (
    .A(_038_),
    .B(_036_),
    .Y(_000_[3])
  );
  NAND _238_ (
    .A(_011_),
    .B(data_in[2]),
    .Y(_041_)
  );
  NAND _239_ (
    .A(_016_),
    .B(bus0[2]),
    .Y(_043_)
  );
  NAND _240_ (
    .A(_043_),
    .B(_041_),
    .Y(_000_[2])
  );
  NAND _241_ (
    .A(_011_),
    .B(data_in[1]),
    .Y(_046_)
  );
  NAND _242_ (
    .A(_016_),
    .B(bus0[1]),
    .Y(_048_)
  );
  NAND _243_ (
    .A(_048_),
    .B(_046_),
    .Y(_000_[1])
  );
  NAND _244_ (
    .A(_011_),
    .B(data_in[0]),
    .Y(_051_)
  );
  NAND _245_ (
    .A(_016_),
    .B(bus0[0]),
    .Y(_053_)
  );
  NAND _246_ (
    .A(_053_),
    .B(_051_),
    .Y(_000_[0])
  );
  NOR _247_ (
    .A(_009_),
    .B(counter[0]),
    .Y(_056_)
  );
  NAND _248_ (
    .A(_056_),
    .B(data_in[6]),
    .Y(_058_)
  );
  NAND _249_ (
    .A(counter[1]),
    .B(_001_[0]),
    .Y(_060_)
  );
  NAND _250_ (
    .A(_060_),
    .B(bus0[14]),
    .Y(_062_)
  );
  NAND _251_ (
    .A(_062_),
    .B(_058_),
    .Y(_000_[14])
  );
  NAND _252_ (
    .A(_056_),
    .B(data_in[5]),
    .Y(_065_)
  );
  NAND _253_ (
    .A(_060_),
    .B(bus0[13]),
    .Y(_067_)
  );
  NAND _254_ (
    .A(_067_),
    .B(_065_),
    .Y(_000_[13])
  );
  NAND _255_ (
    .A(_056_),
    .B(data_in[4]),
    .Y(_070_)
  );
  NAND _256_ (
    .A(_060_),
    .B(bus0[12]),
    .Y(_072_)
  );
  NAND _257_ (
    .A(_072_),
    .B(_070_),
    .Y(_000_[12])
  );
  NAND _258_ (
    .A(_056_),
    .B(data_in[3]),
    .Y(_075_)
  );
  NAND _259_ (
    .A(_060_),
    .B(bus0[11]),
    .Y(_077_)
  );
  NAND _260_ (
    .A(_077_),
    .B(_075_),
    .Y(_000_[11])
  );
  NAND _261_ (
    .A(_056_),
    .B(data_in[2]),
    .Y(_080_)
  );
  NAND _262_ (
    .A(_060_),
    .B(bus0[10]),
    .Y(_082_)
  );
  NAND _263_ (
    .A(_082_),
    .B(_080_),
    .Y(_000_[10])
  );
  NAND _264_ (
    .A(_056_),
    .B(data_in[1]),
    .Y(_085_)
  );
  NAND _265_ (
    .A(_060_),
    .B(bus0[9]),
    .Y(_087_)
  );
  NAND _266_ (
    .A(_087_),
    .B(_085_),
    .Y(_000_[9])
  );
  NAND _267_ (
    .A(_056_),
    .B(data_in[0]),
    .Y(_090_)
  );
  NAND _268_ (
    .A(_060_),
    .B(bus0[8]),
    .Y(_092_)
  );
  NAND _269_ (
    .A(_092_),
    .B(_090_),
    .Y(_000_[8])
  );
  NAND _270_ (
    .A(_056_),
    .B(data_in[7]),
    .Y(_095_)
  );
  NAND _271_ (
    .A(_060_),
    .B(bus0[15]),
    .Y(_097_)
  );
  NAND _272_ (
    .A(_097_),
    .B(_095_),
    .Y(_000_[15])
  );
  NOR _273_ (
    .A(counter[1]),
    .B(_001_[0]),
    .Y(_100_)
  );
  NAND _274_ (
    .A(_100_),
    .B(data_in[6]),
    .Y(_102_)
  );
  NAND _275_ (
    .A(_009_),
    .B(counter[0]),
    .Y(_104_)
  );
  NAND _276_ (
    .A(_104_),
    .B(bus0[22]),
    .Y(_106_)
  );
  NAND _277_ (
    .A(_106_),
    .B(_102_),
    .Y(_000_[22])
  );
  NAND _278_ (
    .A(_100_),
    .B(data_in[5]),
    .Y(_109_)
  );
  NAND _279_ (
    .A(_104_),
    .B(bus0[21]),
    .Y(_111_)
  );
  NAND _280_ (
    .A(_111_),
    .B(_109_),
    .Y(_000_[21])
  );
  NAND _281_ (
    .A(_100_),
    .B(data_in[4]),
    .Y(_114_)
  );
  NAND _282_ (
    .A(_104_),
    .B(bus0[20]),
    .Y(_116_)
  );
  NAND _283_ (
    .A(_116_),
    .B(_114_),
    .Y(_000_[20])
  );
  NAND _284_ (
    .A(_100_),
    .B(data_in[3]),
    .Y(_119_)
  );
  NAND _285_ (
    .A(_104_),
    .B(bus0[19]),
    .Y(_121_)
  );
  NAND _286_ (
    .A(_121_),
    .B(_119_),
    .Y(_000_[19])
  );
  NAND _287_ (
    .A(_100_),
    .B(data_in[2]),
    .Y(_122_)
  );
  NAND _288_ (
    .A(_104_),
    .B(bus0[18]),
    .Y(_124_)
  );
  NAND _289_ (
    .A(_124_),
    .B(_122_),
    .Y(_000_[18])
  );
  NAND _290_ (
    .A(_100_),
    .B(data_in[1]),
    .Y(_125_)
  );
  NAND _291_ (
    .A(_104_),
    .B(bus0[17]),
    .Y(_126_)
  );
  NAND _292_ (
    .A(_126_),
    .B(_125_),
    .Y(_000_[17])
  );
  NAND _293_ (
    .A(_100_),
    .B(data_in[0]),
    .Y(_127_)
  );
  NAND _294_ (
    .A(_104_),
    .B(bus0[16]),
    .Y(_128_)
  );
  NAND _295_ (
    .A(_128_),
    .B(_127_),
    .Y(_000_[16])
  );
  NAND _296_ (
    .A(_100_),
    .B(data_in[7]),
    .Y(_129_)
  );
  NAND _297_ (
    .A(_104_),
    .B(bus0[23]),
    .Y(_130_)
  );
  NAND _298_ (
    .A(_130_),
    .B(_129_),
    .Y(_000_[23])
  );
  NOR _299_ (
    .A(counter[1]),
    .B(counter[0]),
    .Y(_131_)
  );
  NAND _300_ (
    .A(_131_),
    .B(data_in[6]),
    .Y(_132_)
  );
  NAND _301_ (
    .A(_009_),
    .B(_001_[0]),
    .Y(_133_)
  );
  NAND _302_ (
    .A(_133_),
    .B(bus0[30]),
    .Y(_134_)
  );
  NAND _303_ (
    .A(_134_),
    .B(_132_),
    .Y(_000_[30])
  );
  NAND _304_ (
    .A(_131_),
    .B(data_in[5]),
    .Y(_135_)
  );
  NAND _305_ (
    .A(_133_),
    .B(bus0[29]),
    .Y(_136_)
  );
  NAND _306_ (
    .A(_136_),
    .B(_135_),
    .Y(_000_[29])
  );
  NAND _307_ (
    .A(_131_),
    .B(data_in[4]),
    .Y(_137_)
  );
  NAND _308_ (
    .A(_133_),
    .B(bus0[28]),
    .Y(_138_)
  );
  NAND _309_ (
    .A(_138_),
    .B(_137_),
    .Y(_000_[28])
  );
  NAND _310_ (
    .A(_131_),
    .B(data_in[3]),
    .Y(_139_)
  );
  NAND _311_ (
    .A(_133_),
    .B(bus0[27]),
    .Y(_140_)
  );
  NAND _312_ (
    .A(_140_),
    .B(_139_),
    .Y(_000_[27])
  );
  NAND _313_ (
    .A(_131_),
    .B(data_in[2]),
    .Y(_141_)
  );
  NAND _314_ (
    .A(_133_),
    .B(bus0[26]),
    .Y(_142_)
  );
  NAND _315_ (
    .A(_142_),
    .B(_141_),
    .Y(_000_[26])
  );
  NAND _316_ (
    .A(_131_),
    .B(data_in[1]),
    .Y(_143_)
  );
  NAND _317_ (
    .A(_133_),
    .B(bus0[25]),
    .Y(_144_)
  );
  NAND _318_ (
    .A(_144_),
    .B(_143_),
    .Y(_000_[25])
  );
  NAND _319_ (
    .A(_131_),
    .B(data_in[0]),
    .Y(_145_)
  );
  NAND _320_ (
    .A(_133_),
    .B(bus0[24]),
    .Y(_146_)
  );
  NAND _321_ (
    .A(_146_),
    .B(_145_),
    .Y(_000_[24])
  );
  NAND _322_ (
    .A(_131_),
    .B(data_in[7]),
    .Y(_147_)
  );
  NAND _323_ (
    .A(_133_),
    .B(bus0[31]),
    .Y(_148_)
  );
  NAND _324_ (
    .A(_148_),
    .B(_147_),
    .Y(_000_[31])
  );
  NAND _325_ (
    .A(valid),
    .B(counter0[1]),
    .Y(_149_)
  );
  NAND _326_ (
    .A(valid_out),
    .B(_007_),
    .Y(_150_)
  );
  NAND _327_ (
    .A(_150_),
    .B(_149_),
    .Y(_003_)
  );
  NAND _328_ (
    .A(bus0[0]),
    .B(counter0[1]),
    .Y(_151_)
  );
  NAND _329_ (
    .A(data_out[0]),
    .B(_007_),
    .Y(_152_)
  );
  NAND _330_ (
    .A(_152_),
    .B(_151_),
    .Y(_002_[0])
  );
  NAND _331_ (
    .A(bus0[1]),
    .B(counter0[1]),
    .Y(_153_)
  );
  NAND _332_ (
    .A(data_out[1]),
    .B(_007_),
    .Y(_154_)
  );
  NAND _333_ (
    .A(_154_),
    .B(_153_),
    .Y(_002_[1])
  );
  NAND _334_ (
    .A(bus0[2]),
    .B(counter0[1]),
    .Y(_155_)
  );
  NAND _335_ (
    .A(data_out[2]),
    .B(_007_),
    .Y(_156_)
  );
  NAND _336_ (
    .A(_156_),
    .B(_155_),
    .Y(_002_[2])
  );
  NAND _337_ (
    .A(bus0[3]),
    .B(counter0[1]),
    .Y(_157_)
  );
  NAND _338_ (
    .A(data_out[3]),
    .B(_007_),
    .Y(_158_)
  );
  NAND _339_ (
    .A(_158_),
    .B(_157_),
    .Y(_002_[3])
  );
  NAND _340_ (
    .A(bus0[4]),
    .B(counter0[1]),
    .Y(_159_)
  );
  NAND _341_ (
    .A(data_out[4]),
    .B(_007_),
    .Y(_160_)
  );
  NAND _342_ (
    .A(_160_),
    .B(_159_),
    .Y(_002_[4])
  );
  NAND _343_ (
    .A(bus0[5]),
    .B(counter0[1]),
    .Y(_161_)
  );
  NAND _344_ (
    .A(data_out[5]),
    .B(_007_),
    .Y(_162_)
  );
  NAND _345_ (
    .A(_162_),
    .B(_161_),
    .Y(_002_[5])
  );
  NAND _346_ (
    .A(bus0[6]),
    .B(counter0[1]),
    .Y(_163_)
  );
  NAND _347_ (
    .A(data_out[6]),
    .B(_007_),
    .Y(_164_)
  );
  NAND _348_ (
    .A(_164_),
    .B(_163_),
    .Y(_002_[6])
  );
  NAND _349_ (
    .A(bus0[7]),
    .B(counter0[1]),
    .Y(_165_)
  );
  NAND _350_ (
    .A(data_out[7]),
    .B(_007_),
    .Y(_166_)
  );
  NAND _351_ (
    .A(_166_),
    .B(_165_),
    .Y(_002_[7])
  );
  NAND _352_ (
    .A(bus0[8]),
    .B(counter0[1]),
    .Y(_167_)
  );
  NAND _353_ (
    .A(data_out[8]),
    .B(_007_),
    .Y(_168_)
  );
  NAND _354_ (
    .A(_168_),
    .B(_167_),
    .Y(_002_[8])
  );
  NAND _355_ (
    .A(bus0[9]),
    .B(counter0[1]),
    .Y(_169_)
  );
  NAND _356_ (
    .A(data_out[9]),
    .B(_007_),
    .Y(_170_)
  );
  NAND _357_ (
    .A(_170_),
    .B(_169_),
    .Y(_002_[9])
  );
  NAND _358_ (
    .A(bus0[10]),
    .B(counter0[1]),
    .Y(_171_)
  );
  NAND _359_ (
    .A(data_out[10]),
    .B(_007_),
    .Y(_172_)
  );
  NAND _360_ (
    .A(_172_),
    .B(_171_),
    .Y(_002_[10])
  );
  NAND _361_ (
    .A(bus0[11]),
    .B(counter0[1]),
    .Y(_173_)
  );
  NAND _362_ (
    .A(data_out[11]),
    .B(_007_),
    .Y(_174_)
  );
  NAND _363_ (
    .A(_174_),
    .B(_173_),
    .Y(_002_[11])
  );
  NAND _364_ (
    .A(bus0[12]),
    .B(counter0[1]),
    .Y(_175_)
  );
  NAND _365_ (
    .A(data_out[12]),
    .B(_007_),
    .Y(_176_)
  );
  NAND _366_ (
    .A(_176_),
    .B(_175_),
    .Y(_002_[12])
  );
  NAND _367_ (
    .A(bus0[13]),
    .B(counter0[1]),
    .Y(_177_)
  );
  NAND _368_ (
    .A(data_out[13]),
    .B(_007_),
    .Y(_178_)
  );
  NAND _369_ (
    .A(_178_),
    .B(_177_),
    .Y(_002_[13])
  );
  NAND _370_ (
    .A(bus0[14]),
    .B(counter0[1]),
    .Y(_179_)
  );
  NAND _371_ (
    .A(data_out[14]),
    .B(_007_),
    .Y(_180_)
  );
  NAND _372_ (
    .A(_180_),
    .B(_179_),
    .Y(_002_[14])
  );
  NAND _373_ (
    .A(bus0[15]),
    .B(counter0[1]),
    .Y(_181_)
  );
  NAND _374_ (
    .A(data_out[15]),
    .B(_007_),
    .Y(_182_)
  );
  NAND _375_ (
    .A(_182_),
    .B(_181_),
    .Y(_002_[15])
  );
  NAND _376_ (
    .A(bus0[16]),
    .B(counter0[1]),
    .Y(_183_)
  );
  NAND _377_ (
    .A(data_out[16]),
    .B(_007_),
    .Y(_184_)
  );
  NAND _378_ (
    .A(_184_),
    .B(_183_),
    .Y(_002_[16])
  );
  NAND _379_ (
    .A(bus0[17]),
    .B(counter0[1]),
    .Y(_185_)
  );
  NAND _380_ (
    .A(data_out[17]),
    .B(_007_),
    .Y(_186_)
  );
  NAND _381_ (
    .A(_186_),
    .B(_185_),
    .Y(_002_[17])
  );
  NAND _382_ (
    .A(bus0[18]),
    .B(counter0[1]),
    .Y(_187_)
  );
  NAND _383_ (
    .A(data_out[18]),
    .B(_007_),
    .Y(_188_)
  );
  NAND _384_ (
    .A(_188_),
    .B(_187_),
    .Y(_002_[18])
  );
  NAND _385_ (
    .A(bus0[19]),
    .B(counter0[1]),
    .Y(_189_)
  );
  NAND _386_ (
    .A(data_out[19]),
    .B(_007_),
    .Y(_190_)
  );
  NAND _387_ (
    .A(_190_),
    .B(_189_),
    .Y(_002_[19])
  );
  NAND _388_ (
    .A(bus0[20]),
    .B(counter0[1]),
    .Y(_191_)
  );
  NAND _389_ (
    .A(data_out[20]),
    .B(_007_),
    .Y(_192_)
  );
  NAND _390_ (
    .A(_192_),
    .B(_191_),
    .Y(_002_[20])
  );
  NAND _391_ (
    .A(bus0[21]),
    .B(counter0[1]),
    .Y(_193_)
  );
  NAND _392_ (
    .A(data_out[21]),
    .B(_007_),
    .Y(_194_)
  );
  NAND _393_ (
    .A(_194_),
    .B(_193_),
    .Y(_002_[21])
  );
  NAND _394_ (
    .A(bus0[22]),
    .B(counter0[1]),
    .Y(_195_)
  );
  NAND _395_ (
    .A(data_out[22]),
    .B(_007_),
    .Y(_196_)
  );
  NAND _396_ (
    .A(_196_),
    .B(_195_),
    .Y(_002_[22])
  );
  NAND _397_ (
    .A(bus0[23]),
    .B(counter0[1]),
    .Y(_197_)
  );
  NAND _398_ (
    .A(data_out[23]),
    .B(_007_),
    .Y(_198_)
  );
  NAND _399_ (
    .A(_198_),
    .B(_197_),
    .Y(_002_[23])
  );
  NAND _400_ (
    .A(bus0[24]),
    .B(counter0[1]),
    .Y(_199_)
  );
  NAND _401_ (
    .A(data_out[24]),
    .B(_007_),
    .Y(_200_)
  );
  NAND _402_ (
    .A(_200_),
    .B(_199_),
    .Y(_002_[24])
  );
  NAND _403_ (
    .A(bus0[25]),
    .B(counter0[1]),
    .Y(_201_)
  );
  NAND _404_ (
    .A(data_out[25]),
    .B(_007_),
    .Y(_202_)
  );
  NAND _405_ (
    .A(_202_),
    .B(_201_),
    .Y(_002_[25])
  );
  NAND _406_ (
    .A(bus0[26]),
    .B(counter0[1]),
    .Y(_203_)
  );
  NAND _407_ (
    .A(data_out[26]),
    .B(_007_),
    .Y(_204_)
  );
  NAND _408_ (
    .A(_204_),
    .B(_203_),
    .Y(_002_[26])
  );
  NAND _409_ (
    .A(bus0[27]),
    .B(counter0[1]),
    .Y(_205_)
  );
  NAND _410_ (
    .A(data_out[27]),
    .B(_007_),
    .Y(_206_)
  );
  NAND _411_ (
    .A(_206_),
    .B(_205_),
    .Y(_002_[27])
  );
  NAND _412_ (
    .A(bus0[28]),
    .B(counter0[1]),
    .Y(_207_)
  );
  NAND _413_ (
    .A(data_out[28]),
    .B(_007_),
    .Y(_208_)
  );
  NAND _414_ (
    .A(_208_),
    .B(_207_),
    .Y(_002_[28])
  );
  NAND _415_ (
    .A(bus0[29]),
    .B(counter0[1]),
    .Y(_209_)
  );
  NAND _416_ (
    .A(data_out[29]),
    .B(_007_),
    .Y(_210_)
  );
  NAND _417_ (
    .A(_210_),
    .B(_209_),
    .Y(_002_[29])
  );
  NAND _418_ (
    .A(bus0[30]),
    .B(counter0[1]),
    .Y(_211_)
  );
  NAND _419_ (
    .A(data_out[30]),
    .B(_007_),
    .Y(_212_)
  );
  NAND _420_ (
    .A(_212_),
    .B(_211_),
    .Y(_002_[30])
  );
  NAND _421_ (
    .A(bus0[31]),
    .B(counter0[1]),
    .Y(_213_)
  );
  NAND _422_ (
    .A(data_out[31]),
    .B(_007_),
    .Y(_214_)
  );
  NAND _423_ (
    .A(_214_),
    .B(_213_),
    .Y(_002_[31])
  );
  NOT _424_ (
    .A(counter0[0]),
    .Y(_215_)
  );
  NOR _425_ (
    .A(_016_),
    .B(_215_),
    .Y(_123_)
  );
  NAND _426_ (
    .A(_104_),
    .B(_060_),
    .Y(_001_[1])
  );
  NOT _427_ (
    .A(reset_L),
    .Y(_006_)
  );
  NOT _428_ (
    .A(reset_L),
    .Y(_008_)
  );
  NOT _429_ (
    .A(reset_L),
    .Y(_010_)
  );
  NOT _430_ (
    .A(reset_L),
    .Y(_012_)
  );
  NOT _431_ (
    .A(reset_L),
    .Y(_013_)
  );
  NOT _432_ (
    .A(reset_L),
    .Y(_015_)
  );
  NOT _433_ (
    .A(reset_L),
    .Y(_017_)
  );
  NOT _434_ (
    .A(reset_L),
    .Y(_019_)
  );
  NOT _435_ (
    .A(reset_L),
    .Y(_020_)
  );
  NOT _436_ (
    .A(reset_L),
    .Y(_022_)
  );
  NOT _437_ (
    .A(reset_L),
    .Y(_024_)
  );
  NOT _438_ (
    .A(reset_L),
    .Y(_025_)
  );
  NOT _439_ (
    .A(reset_L),
    .Y(_027_)
  );
  NOT _440_ (
    .A(reset_L),
    .Y(_029_)
  );
  NOT _441_ (
    .A(reset_L),
    .Y(_030_)
  );
  NOT _442_ (
    .A(reset_L),
    .Y(_032_)
  );
  NOT _443_ (
    .A(reset_L),
    .Y(_034_)
  );
  NOT _444_ (
    .A(reset_L),
    .Y(_035_)
  );
  NOT _445_ (
    .A(reset_L),
    .Y(_037_)
  );
  NOT _446_ (
    .A(reset_L),
    .Y(_039_)
  );
  NOT _447_ (
    .A(reset_L),
    .Y(_040_)
  );
  NOT _448_ (
    .A(reset_L),
    .Y(_042_)
  );
  NOT _449_ (
    .A(reset_L),
    .Y(_044_)
  );
  NOT _450_ (
    .A(reset_L),
    .Y(_045_)
  );
  NOT _451_ (
    .A(reset_L),
    .Y(_047_)
  );
  NOT _452_ (
    .A(reset_L),
    .Y(_049_)
  );
  NOT _453_ (
    .A(reset_L),
    .Y(_050_)
  );
  NOT _454_ (
    .A(reset_L),
    .Y(_052_)
  );
  NOT _455_ (
    .A(reset_L),
    .Y(_054_)
  );
  NOT _456_ (
    .A(reset_L),
    .Y(_055_)
  );
  NOT _457_ (
    .A(reset_L),
    .Y(_057_)
  );
  NOT _458_ (
    .A(reset_L),
    .Y(_059_)
  );
  NOT _459_ (
    .A(reset_L),
    .Y(_061_)
  );
  NOT _460_ (
    .A(reset_L),
    .Y(_063_)
  );
  NOT _461_ (
    .A(reset_L),
    .Y(_064_)
  );
  NOT _462_ (
    .A(reset_L),
    .Y(_066_)
  );
  NOT _463_ (
    .A(reset_L),
    .Y(_068_)
  );
  NOT _464_ (
    .A(reset_L),
    .Y(_069_)
  );
  NOT _465_ (
    .A(reset_L),
    .Y(_071_)
  );
  NOT _466_ (
    .A(reset_L),
    .Y(_073_)
  );
  NOT _467_ (
    .A(reset_L),
    .Y(_074_)
  );
  NOT _468_ (
    .A(reset_L),
    .Y(_076_)
  );
  NOT _469_ (
    .A(reset_L),
    .Y(_078_)
  );
  NOT _470_ (
    .A(reset_L),
    .Y(_079_)
  );
  NOT _471_ (
    .A(reset_L),
    .Y(_081_)
  );
  NOT _472_ (
    .A(reset_L),
    .Y(_083_)
  );
  NOT _473_ (
    .A(reset_L),
    .Y(_084_)
  );
  NOT _474_ (
    .A(reset_L),
    .Y(_086_)
  );
  NOT _475_ (
    .A(reset_L),
    .Y(_088_)
  );
  NOT _476_ (
    .A(reset_L),
    .Y(_089_)
  );
  NOT _477_ (
    .A(reset_L),
    .Y(_091_)
  );
  NOT _478_ (
    .A(reset_L),
    .Y(_093_)
  );
  NOT _479_ (
    .A(reset_L),
    .Y(_094_)
  );
  NOT _480_ (
    .A(reset_L),
    .Y(_096_)
  );
  NOT _481_ (
    .A(reset_L),
    .Y(_098_)
  );
  NOT _482_ (
    .A(reset_L),
    .Y(_099_)
  );
  NOT _483_ (
    .A(reset_L),
    .Y(_101_)
  );
  NOT _484_ (
    .A(reset_L),
    .Y(_103_)
  );
  NOT _485_ (
    .A(reset_L),
    .Y(_105_)
  );
  NOT _486_ (
    .A(reset_L),
    .Y(_107_)
  );
  NOT _487_ (
    .A(reset_L),
    .Y(_108_)
  );
  NOT _488_ (
    .A(reset_L),
    .Y(_110_)
  );
  NOT _489_ (
    .A(reset_L),
    .Y(_112_)
  );
  NOT _490_ (
    .A(reset_L),
    .Y(_113_)
  );
  NOT _491_ (
    .A(reset_L),
    .Y(_115_)
  );
  NOT _492_ (
    .A(reset_L),
    .Y(_117_)
  );
  NOT _493_ (
    .A(reset_L),
    .Y(_118_)
  );
  NOT _494_ (
    .A(reset_L),
    .Y(_120_)
  );
  DFFSR _495_ (
    .C(clockS4),
    .D(_005_),
    .Q(counter0[0]),
    .R(1'b0),
    .S(_006_)
  );
  DFFSR _496_ (
    .C(clockS4),
    .D(_123_),
    .Q(counter0[1]),
    .R(_008_),
    .S(1'b0)
  );
  DFFSR _497_ (
    .C(clockS4),
    .D(_002_[0]),
    .Q(data_out[0]),
    .R(_010_),
    .S(1'b0)
  );
  DFFSR _498_ (
    .C(clockS4),
    .D(_002_[1]),
    .Q(data_out[1]),
    .R(_012_),
    .S(1'b0)
  );
  DFFSR _499_ (
    .C(clockS4),
    .D(_002_[2]),
    .Q(data_out[2]),
    .R(_013_),
    .S(1'b0)
  );
  DFFSR _500_ (
    .C(clockS4),
    .D(_002_[3]),
    .Q(data_out[3]),
    .R(_015_),
    .S(1'b0)
  );
  DFFSR _501_ (
    .C(clockS4),
    .D(_002_[4]),
    .Q(data_out[4]),
    .R(_017_),
    .S(1'b0)
  );
  DFFSR _502_ (
    .C(clockS4),
    .D(_002_[5]),
    .Q(data_out[5]),
    .R(_019_),
    .S(1'b0)
  );
  DFFSR _503_ (
    .C(clockS4),
    .D(_002_[6]),
    .Q(data_out[6]),
    .R(_020_),
    .S(1'b0)
  );
  DFFSR _504_ (
    .C(clockS4),
    .D(_002_[7]),
    .Q(data_out[7]),
    .R(_022_),
    .S(1'b0)
  );
  DFFSR _505_ (
    .C(clockS4),
    .D(_002_[8]),
    .Q(data_out[8]),
    .R(_024_),
    .S(1'b0)
  );
  DFFSR _506_ (
    .C(clockS4),
    .D(_002_[9]),
    .Q(data_out[9]),
    .R(_025_),
    .S(1'b0)
  );
  DFFSR _507_ (
    .C(clockS4),
    .D(_002_[10]),
    .Q(data_out[10]),
    .R(_027_),
    .S(1'b0)
  );
  DFFSR _508_ (
    .C(clockS4),
    .D(_002_[11]),
    .Q(data_out[11]),
    .R(_029_),
    .S(1'b0)
  );
  DFFSR _509_ (
    .C(clockS4),
    .D(_002_[12]),
    .Q(data_out[12]),
    .R(_030_),
    .S(1'b0)
  );
  DFFSR _510_ (
    .C(clockS4),
    .D(_002_[13]),
    .Q(data_out[13]),
    .R(_032_),
    .S(1'b0)
  );
  DFFSR _511_ (
    .C(clockS4),
    .D(_002_[14]),
    .Q(data_out[14]),
    .R(_034_),
    .S(1'b0)
  );
  DFFSR _512_ (
    .C(clockS4),
    .D(_002_[15]),
    .Q(data_out[15]),
    .R(_035_),
    .S(1'b0)
  );
  DFFSR _513_ (
    .C(clockS4),
    .D(_002_[16]),
    .Q(data_out[16]),
    .R(_037_),
    .S(1'b0)
  );
  DFFSR _514_ (
    .C(clockS4),
    .D(_002_[17]),
    .Q(data_out[17]),
    .R(_039_),
    .S(1'b0)
  );
  DFFSR _515_ (
    .C(clockS4),
    .D(_002_[18]),
    .Q(data_out[18]),
    .R(_040_),
    .S(1'b0)
  );
  DFFSR _516_ (
    .C(clockS4),
    .D(_002_[19]),
    .Q(data_out[19]),
    .R(_042_),
    .S(1'b0)
  );
  DFFSR _517_ (
    .C(clockS4),
    .D(_002_[20]),
    .Q(data_out[20]),
    .R(_044_),
    .S(1'b0)
  );
  DFFSR _518_ (
    .C(clockS4),
    .D(_002_[21]),
    .Q(data_out[21]),
    .R(_045_),
    .S(1'b0)
  );
  DFFSR _519_ (
    .C(clockS4),
    .D(_002_[22]),
    .Q(data_out[22]),
    .R(_047_),
    .S(1'b0)
  );
  DFFSR _520_ (
    .C(clockS4),
    .D(_002_[23]),
    .Q(data_out[23]),
    .R(_049_),
    .S(1'b0)
  );
  DFFSR _521_ (
    .C(clockS4),
    .D(_002_[24]),
    .Q(data_out[24]),
    .R(_050_),
    .S(1'b0)
  );
  DFFSR _522_ (
    .C(clockS4),
    .D(_002_[25]),
    .Q(data_out[25]),
    .R(_052_),
    .S(1'b0)
  );
  DFFSR _523_ (
    .C(clockS4),
    .D(_002_[26]),
    .Q(data_out[26]),
    .R(_054_),
    .S(1'b0)
  );
  DFFSR _524_ (
    .C(clockS4),
    .D(_002_[27]),
    .Q(data_out[27]),
    .R(_055_),
    .S(1'b0)
  );
  DFFSR _525_ (
    .C(clockS4),
    .D(_002_[28]),
    .Q(data_out[28]),
    .R(_057_),
    .S(1'b0)
  );
  DFFSR _526_ (
    .C(clockS4),
    .D(_002_[29]),
    .Q(data_out[29]),
    .R(_059_),
    .S(1'b0)
  );
  DFFSR _527_ (
    .C(clockS4),
    .D(_002_[30]),
    .Q(data_out[30]),
    .R(_061_),
    .S(1'b0)
  );
  DFFSR _528_ (
    .C(clockS4),
    .D(_002_[31]),
    .Q(data_out[31]),
    .R(_063_),
    .S(1'b0)
  );
  DFFSR _529_ (
    .C(clockS4),
    .D(_003_),
    .Q(valid_out),
    .R(_064_),
    .S(1'b0)
  );
  DFFSR _530_ (
    .C(clockS4),
    .D(_001_[0]),
    .Q(counter[0]),
    .R(1'b0),
    .S(_066_)
  );
  DFFSR _531_ (
    .C(clockS4),
    .D(_001_[1]),
    .Q(counter[1]),
    .R(1'b0),
    .S(_068_)
  );
  DFFSR _532_ (
    .C(clockS4),
    .D(_000_[0]),
    .Q(bus0[0]),
    .R(_069_),
    .S(1'b0)
  );
  DFFSR _533_ (
    .C(clockS4),
    .D(_000_[1]),
    .Q(bus0[1]),
    .R(_071_),
    .S(1'b0)
  );
  DFFSR _534_ (
    .C(clockS4),
    .D(_000_[2]),
    .Q(bus0[2]),
    .R(_073_),
    .S(1'b0)
  );
  DFFSR _535_ (
    .C(clockS4),
    .D(_000_[3]),
    .Q(bus0[3]),
    .R(_074_),
    .S(1'b0)
  );
  DFFSR _536_ (
    .C(clockS4),
    .D(_000_[4]),
    .Q(bus0[4]),
    .R(_076_),
    .S(1'b0)
  );
  DFFSR _537_ (
    .C(clockS4),
    .D(_000_[5]),
    .Q(bus0[5]),
    .R(_078_),
    .S(1'b0)
  );
  DFFSR _538_ (
    .C(clockS4),
    .D(_000_[6]),
    .Q(bus0[6]),
    .R(_079_),
    .S(1'b0)
  );
  DFFSR _539_ (
    .C(clockS4),
    .D(_000_[7]),
    .Q(bus0[7]),
    .R(_081_),
    .S(1'b0)
  );
  DFFSR _540_ (
    .C(clockS4),
    .D(_000_[8]),
    .Q(bus0[8]),
    .R(_083_),
    .S(1'b0)
  );
  DFFSR _541_ (
    .C(clockS4),
    .D(_000_[9]),
    .Q(bus0[9]),
    .R(_084_),
    .S(1'b0)
  );
  DFFSR _542_ (
    .C(clockS4),
    .D(_000_[10]),
    .Q(bus0[10]),
    .R(_086_),
    .S(1'b0)
  );
  DFFSR _543_ (
    .C(clockS4),
    .D(_000_[11]),
    .Q(bus0[11]),
    .R(_088_),
    .S(1'b0)
  );
  DFFSR _544_ (
    .C(clockS4),
    .D(_000_[12]),
    .Q(bus0[12]),
    .R(_089_),
    .S(1'b0)
  );
  DFFSR _545_ (
    .C(clockS4),
    .D(_000_[13]),
    .Q(bus0[13]),
    .R(_091_),
    .S(1'b0)
  );
  DFFSR _546_ (
    .C(clockS4),
    .D(_000_[14]),
    .Q(bus0[14]),
    .R(_093_),
    .S(1'b0)
  );
  DFFSR _547_ (
    .C(clockS4),
    .D(_000_[15]),
    .Q(bus0[15]),
    .R(_094_),
    .S(1'b0)
  );
  DFFSR _548_ (
    .C(clockS4),
    .D(_000_[16]),
    .Q(bus0[16]),
    .R(_096_),
    .S(1'b0)
  );
  DFFSR _549_ (
    .C(clockS4),
    .D(_000_[17]),
    .Q(bus0[17]),
    .R(_098_),
    .S(1'b0)
  );
  DFFSR _550_ (
    .C(clockS4),
    .D(_000_[18]),
    .Q(bus0[18]),
    .R(_099_),
    .S(1'b0)
  );
  DFFSR _551_ (
    .C(clockS4),
    .D(_000_[19]),
    .Q(bus0[19]),
    .R(_101_),
    .S(1'b0)
  );
  DFFSR _552_ (
    .C(clockS4),
    .D(_000_[20]),
    .Q(bus0[20]),
    .R(_103_),
    .S(1'b0)
  );
  DFFSR _553_ (
    .C(clockS4),
    .D(_000_[21]),
    .Q(bus0[21]),
    .R(_105_),
    .S(1'b0)
  );
  DFFSR _554_ (
    .C(clockS4),
    .D(_000_[22]),
    .Q(bus0[22]),
    .R(_107_),
    .S(1'b0)
  );
  DFFSR _555_ (
    .C(clockS4),
    .D(_000_[23]),
    .Q(bus0[23]),
    .R(_108_),
    .S(1'b0)
  );
  DFFSR _556_ (
    .C(clockS4),
    .D(_000_[24]),
    .Q(bus0[24]),
    .R(_110_),
    .S(1'b0)
  );
  DFFSR _557_ (
    .C(clockS4),
    .D(_000_[25]),
    .Q(bus0[25]),
    .R(_112_),
    .S(1'b0)
  );
  DFFSR _558_ (
    .C(clockS4),
    .D(_000_[26]),
    .Q(bus0[26]),
    .R(_113_),
    .S(1'b0)
  );
  DFFSR _559_ (
    .C(clockS4),
    .D(_000_[27]),
    .Q(bus0[27]),
    .R(_115_),
    .S(1'b0)
  );
  DFFSR _560_ (
    .C(clockS4),
    .D(_000_[28]),
    .Q(bus0[28]),
    .R(_117_),
    .S(1'b0)
  );
  DFFSR _561_ (
    .C(clockS4),
    .D(_000_[29]),
    .Q(bus0[29]),
    .R(_118_),
    .S(1'b0)
  );
  DFFSR _562_ (
    .C(clockS4),
    .D(_000_[30]),
    .Q(bus0[30]),
    .R(_120_),
    .S(1'b0)
  );
  DFFSR _563_ (
    .C(clockS4),
    .D(_000_[31]),
    .Q(bus0[31]),
    .R(_004_),
    .S(1'b0)
  );
endmodule

(* src = "c8b_32bS2.v:3" *)
module c8b_32bS2(data_in, data_out, valid, clockS1, clockS4, reset_L, valid_out);
  (* src = "c8b_32bS2.v:19" *)
  wire [31:0] _000_;
  (* src = "c8b_32bS2.v:19" *)
  wire [1:0] _001_;
  (* src = "c8b_32bS2.v:19" *)
  wire [31:0] _002_;
  (* src = "c8b_32bS2.v:19" *)
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  (* src = "c8b_32bS2.v:11" *)
  wire [31:0] bus0;
  (* src = "c8b_32bS2.v:6" *)
  input clockS1;
  (* src = "c8b_32bS2.v:7" *)
  input clockS4;
  (* src = "c8b_32bS2.v:12" *)
  wire [1:0] counter;
  (* onehot = 32'd1 *)
  wire [1:0] counter0;
  (* src = "c8b_32bS2.v:3" *)
  input [7:0] data_in;
  (* src = "c8b_32bS2.v:4" *)
  output [31:0] data_out;
  (* src = "c8b_32bS2.v:8" *)
  input reset_L;
  (* src = "c8b_32bS2.v:5" *)
  input valid;
  (* src = "c8b_32bS2.v:9" *)
  output valid_out;
  NOT _216_ (
    .A(reset_L),
    .Y(_004_)
  );
  NOT _217_ (
    .A(counter0[1]),
    .Y(_006_)
  );
  NOT _218_ (
    .A(counter[1]),
    .Y(_008_)
  );
  NOT _219_ (
    .A(counter[0]),
    .Y(_001_[0])
  );
  NOR _220_ (
    .A(_001_[0]),
    .B(_008_),
    .Y(_011_)
  );
  NAND _221_ (
    .A(_011_),
    .B(_006_),
    .Y(_005_)
  );
  NAND _222_ (
    .A(_011_),
    .B(data_in[7]),
    .Y(_014_)
  );
  NAND _223_ (
    .A(counter[0]),
    .B(counter[1]),
    .Y(_016_)
  );
  NAND _224_ (
    .A(_016_),
    .B(bus0[7]),
    .Y(_018_)
  );
  NAND _225_ (
    .A(_018_),
    .B(_014_),
    .Y(_000_[7])
  );
  NAND _226_ (
    .A(_011_),
    .B(data_in[6]),
    .Y(_021_)
  );
  NAND _227_ (
    .A(_016_),
    .B(bus0[6]),
    .Y(_023_)
  );
  NAND _228_ (
    .A(_023_),
    .B(_021_),
    .Y(_000_[6])
  );
  NAND _229_ (
    .A(_011_),
    .B(data_in[5]),
    .Y(_026_)
  );
  NAND _230_ (
    .A(_016_),
    .B(bus0[5]),
    .Y(_028_)
  );
  NAND _231_ (
    .A(_028_),
    .B(_026_),
    .Y(_000_[5])
  );
  NAND _232_ (
    .A(_011_),
    .B(data_in[4]),
    .Y(_031_)
  );
  NAND _233_ (
    .A(_016_),
    .B(bus0[4]),
    .Y(_033_)
  );
  NAND _234_ (
    .A(_033_),
    .B(_031_),
    .Y(_000_[4])
  );
  NAND _235_ (
    .A(_011_),
    .B(data_in[3]),
    .Y(_036_)
  );
  NAND _236_ (
    .A(_016_),
    .B(bus0[3]),
    .Y(_038_)
  );
  NAND _237_ (
    .A(_038_),
    .B(_036_),
    .Y(_000_[3])
  );
  NAND _238_ (
    .A(_011_),
    .B(data_in[2]),
    .Y(_041_)
  );
  NAND _239_ (
    .A(_016_),
    .B(bus0[2]),
    .Y(_043_)
  );
  NAND _240_ (
    .A(_043_),
    .B(_041_),
    .Y(_000_[2])
  );
  NAND _241_ (
    .A(_011_),
    .B(data_in[1]),
    .Y(_046_)
  );
  NAND _242_ (
    .A(_016_),
    .B(bus0[1]),
    .Y(_048_)
  );
  NAND _243_ (
    .A(_048_),
    .B(_046_),
    .Y(_000_[1])
  );
  NAND _244_ (
    .A(_011_),
    .B(data_in[0]),
    .Y(_051_)
  );
  NAND _245_ (
    .A(_016_),
    .B(bus0[0]),
    .Y(_053_)
  );
  NAND _246_ (
    .A(_053_),
    .B(_051_),
    .Y(_000_[0])
  );
  NOR _247_ (
    .A(counter[0]),
    .B(_008_),
    .Y(_056_)
  );
  NAND _248_ (
    .A(_056_),
    .B(data_in[6]),
    .Y(_058_)
  );
  NAND _249_ (
    .A(_001_[0]),
    .B(counter[1]),
    .Y(_060_)
  );
  NAND _250_ (
    .A(_060_),
    .B(bus0[14]),
    .Y(_062_)
  );
  NAND _251_ (
    .A(_062_),
    .B(_058_),
    .Y(_000_[14])
  );
  NAND _252_ (
    .A(_056_),
    .B(data_in[5]),
    .Y(_065_)
  );
  NAND _253_ (
    .A(_060_),
    .B(bus0[13]),
    .Y(_067_)
  );
  NAND _254_ (
    .A(_067_),
    .B(_065_),
    .Y(_000_[13])
  );
  NAND _255_ (
    .A(_056_),
    .B(data_in[4]),
    .Y(_070_)
  );
  NAND _256_ (
    .A(_060_),
    .B(bus0[12]),
    .Y(_072_)
  );
  NAND _257_ (
    .A(_072_),
    .B(_070_),
    .Y(_000_[12])
  );
  NAND _258_ (
    .A(_056_),
    .B(data_in[3]),
    .Y(_075_)
  );
  NAND _259_ (
    .A(_060_),
    .B(bus0[11]),
    .Y(_077_)
  );
  NAND _260_ (
    .A(_077_),
    .B(_075_),
    .Y(_000_[11])
  );
  NAND _261_ (
    .A(_056_),
    .B(data_in[2]),
    .Y(_080_)
  );
  NAND _262_ (
    .A(_060_),
    .B(bus0[10]),
    .Y(_082_)
  );
  NAND _263_ (
    .A(_082_),
    .B(_080_),
    .Y(_000_[10])
  );
  NAND _264_ (
    .A(_056_),
    .B(data_in[1]),
    .Y(_085_)
  );
  NAND _265_ (
    .A(_060_),
    .B(bus0[9]),
    .Y(_087_)
  );
  NAND _266_ (
    .A(_087_),
    .B(_085_),
    .Y(_000_[9])
  );
  NAND _267_ (
    .A(_056_),
    .B(data_in[0]),
    .Y(_090_)
  );
  NAND _268_ (
    .A(_060_),
    .B(bus0[8]),
    .Y(_092_)
  );
  NAND _269_ (
    .A(_092_),
    .B(_090_),
    .Y(_000_[8])
  );
  NAND _270_ (
    .A(_056_),
    .B(data_in[7]),
    .Y(_095_)
  );
  NAND _271_ (
    .A(_060_),
    .B(bus0[15]),
    .Y(_097_)
  );
  NAND _272_ (
    .A(_097_),
    .B(_095_),
    .Y(_000_[15])
  );
  NOR _273_ (
    .A(_001_[0]),
    .B(counter[1]),
    .Y(_100_)
  );
  NAND _274_ (
    .A(_100_),
    .B(data_in[6]),
    .Y(_102_)
  );
  NAND _275_ (
    .A(counter[0]),
    .B(_008_),
    .Y(_104_)
  );
  NAND _276_ (
    .A(_104_),
    .B(bus0[22]),
    .Y(_106_)
  );
  NAND _277_ (
    .A(_106_),
    .B(_102_),
    .Y(_000_[22])
  );
  NAND _278_ (
    .A(_100_),
    .B(data_in[5]),
    .Y(_109_)
  );
  NAND _279_ (
    .A(_104_),
    .B(bus0[21]),
    .Y(_111_)
  );
  NAND _280_ (
    .A(_111_),
    .B(_109_),
    .Y(_000_[21])
  );
  NAND _281_ (
    .A(_100_),
    .B(data_in[4]),
    .Y(_114_)
  );
  NAND _282_ (
    .A(_104_),
    .B(bus0[20]),
    .Y(_116_)
  );
  NAND _283_ (
    .A(_116_),
    .B(_114_),
    .Y(_000_[20])
  );
  NAND _284_ (
    .A(_100_),
    .B(data_in[3]),
    .Y(_119_)
  );
  NAND _285_ (
    .A(_104_),
    .B(bus0[19]),
    .Y(_121_)
  );
  NAND _286_ (
    .A(_121_),
    .B(_119_),
    .Y(_000_[19])
  );
  NAND _287_ (
    .A(_100_),
    .B(data_in[2]),
    .Y(_123_)
  );
  NAND _288_ (
    .A(_104_),
    .B(bus0[18]),
    .Y(_124_)
  );
  NAND _289_ (
    .A(_124_),
    .B(_123_),
    .Y(_000_[18])
  );
  NAND _290_ (
    .A(_100_),
    .B(data_in[1]),
    .Y(_125_)
  );
  NAND _291_ (
    .A(_104_),
    .B(bus0[17]),
    .Y(_126_)
  );
  NAND _292_ (
    .A(_126_),
    .B(_125_),
    .Y(_000_[17])
  );
  NAND _293_ (
    .A(_100_),
    .B(data_in[0]),
    .Y(_127_)
  );
  NAND _294_ (
    .A(_104_),
    .B(bus0[16]),
    .Y(_128_)
  );
  NAND _295_ (
    .A(_128_),
    .B(_127_),
    .Y(_000_[16])
  );
  NAND _296_ (
    .A(_100_),
    .B(data_in[7]),
    .Y(_129_)
  );
  NAND _297_ (
    .A(_104_),
    .B(bus0[23]),
    .Y(_130_)
  );
  NAND _298_ (
    .A(_130_),
    .B(_129_),
    .Y(_000_[23])
  );
  NOR _299_ (
    .A(counter[0]),
    .B(counter[1]),
    .Y(_131_)
  );
  NAND _300_ (
    .A(_131_),
    .B(data_in[6]),
    .Y(_132_)
  );
  NAND _301_ (
    .A(_001_[0]),
    .B(_008_),
    .Y(_133_)
  );
  NAND _302_ (
    .A(_133_),
    .B(bus0[30]),
    .Y(_134_)
  );
  NAND _303_ (
    .A(_134_),
    .B(_132_),
    .Y(_000_[30])
  );
  NAND _304_ (
    .A(_131_),
    .B(data_in[5]),
    .Y(_135_)
  );
  NAND _305_ (
    .A(_133_),
    .B(bus0[29]),
    .Y(_136_)
  );
  NAND _306_ (
    .A(_136_),
    .B(_135_),
    .Y(_000_[29])
  );
  NAND _307_ (
    .A(_131_),
    .B(data_in[4]),
    .Y(_137_)
  );
  NAND _308_ (
    .A(_133_),
    .B(bus0[28]),
    .Y(_138_)
  );
  NAND _309_ (
    .A(_138_),
    .B(_137_),
    .Y(_000_[28])
  );
  NAND _310_ (
    .A(_131_),
    .B(data_in[3]),
    .Y(_139_)
  );
  NAND _311_ (
    .A(_133_),
    .B(bus0[27]),
    .Y(_140_)
  );
  NAND _312_ (
    .A(_140_),
    .B(_139_),
    .Y(_000_[27])
  );
  NAND _313_ (
    .A(_131_),
    .B(data_in[2]),
    .Y(_141_)
  );
  NAND _314_ (
    .A(_133_),
    .B(bus0[26]),
    .Y(_142_)
  );
  NAND _315_ (
    .A(_142_),
    .B(_141_),
    .Y(_000_[26])
  );
  NAND _316_ (
    .A(_131_),
    .B(data_in[1]),
    .Y(_143_)
  );
  NAND _317_ (
    .A(_133_),
    .B(bus0[25]),
    .Y(_144_)
  );
  NAND _318_ (
    .A(_144_),
    .B(_143_),
    .Y(_000_[25])
  );
  NAND _319_ (
    .A(_131_),
    .B(data_in[0]),
    .Y(_145_)
  );
  NAND _320_ (
    .A(_133_),
    .B(bus0[24]),
    .Y(_146_)
  );
  NAND _321_ (
    .A(_146_),
    .B(_145_),
    .Y(_000_[24])
  );
  NAND _322_ (
    .A(_131_),
    .B(data_in[7]),
    .Y(_147_)
  );
  NAND _323_ (
    .A(_133_),
    .B(bus0[31]),
    .Y(_148_)
  );
  NAND _324_ (
    .A(_148_),
    .B(_147_),
    .Y(_000_[31])
  );
  NAND _325_ (
    .A(valid),
    .B(counter0[1]),
    .Y(_149_)
  );
  NAND _326_ (
    .A(valid_out),
    .B(_006_),
    .Y(_150_)
  );
  NAND _327_ (
    .A(_150_),
    .B(_149_),
    .Y(_003_)
  );
  NAND _328_ (
    .A(bus0[0]),
    .B(counter0[1]),
    .Y(_151_)
  );
  NAND _329_ (
    .A(data_out[0]),
    .B(_006_),
    .Y(_152_)
  );
  NAND _330_ (
    .A(_152_),
    .B(_151_),
    .Y(_002_[0])
  );
  NAND _331_ (
    .A(bus0[1]),
    .B(counter0[1]),
    .Y(_153_)
  );
  NAND _332_ (
    .A(data_out[1]),
    .B(_006_),
    .Y(_154_)
  );
  NAND _333_ (
    .A(_154_),
    .B(_153_),
    .Y(_002_[1])
  );
  NAND _334_ (
    .A(bus0[2]),
    .B(counter0[1]),
    .Y(_155_)
  );
  NAND _335_ (
    .A(data_out[2]),
    .B(_006_),
    .Y(_156_)
  );
  NAND _336_ (
    .A(_156_),
    .B(_155_),
    .Y(_002_[2])
  );
  NAND _337_ (
    .A(bus0[3]),
    .B(counter0[1]),
    .Y(_157_)
  );
  NAND _338_ (
    .A(data_out[3]),
    .B(_006_),
    .Y(_158_)
  );
  NAND _339_ (
    .A(_158_),
    .B(_157_),
    .Y(_002_[3])
  );
  NAND _340_ (
    .A(bus0[4]),
    .B(counter0[1]),
    .Y(_159_)
  );
  NAND _341_ (
    .A(data_out[4]),
    .B(_006_),
    .Y(_160_)
  );
  NAND _342_ (
    .A(_160_),
    .B(_159_),
    .Y(_002_[4])
  );
  NAND _343_ (
    .A(bus0[5]),
    .B(counter0[1]),
    .Y(_161_)
  );
  NAND _344_ (
    .A(data_out[5]),
    .B(_006_),
    .Y(_162_)
  );
  NAND _345_ (
    .A(_162_),
    .B(_161_),
    .Y(_002_[5])
  );
  NAND _346_ (
    .A(bus0[6]),
    .B(counter0[1]),
    .Y(_163_)
  );
  NAND _347_ (
    .A(data_out[6]),
    .B(_006_),
    .Y(_164_)
  );
  NAND _348_ (
    .A(_164_),
    .B(_163_),
    .Y(_002_[6])
  );
  NAND _349_ (
    .A(bus0[7]),
    .B(counter0[1]),
    .Y(_165_)
  );
  NAND _350_ (
    .A(data_out[7]),
    .B(_006_),
    .Y(_166_)
  );
  NAND _351_ (
    .A(_166_),
    .B(_165_),
    .Y(_002_[7])
  );
  NAND _352_ (
    .A(bus0[8]),
    .B(counter0[1]),
    .Y(_167_)
  );
  NAND _353_ (
    .A(data_out[8]),
    .B(_006_),
    .Y(_168_)
  );
  NAND _354_ (
    .A(_168_),
    .B(_167_),
    .Y(_002_[8])
  );
  NAND _355_ (
    .A(bus0[9]),
    .B(counter0[1]),
    .Y(_169_)
  );
  NAND _356_ (
    .A(data_out[9]),
    .B(_006_),
    .Y(_170_)
  );
  NAND _357_ (
    .A(_170_),
    .B(_169_),
    .Y(_002_[9])
  );
  NAND _358_ (
    .A(bus0[10]),
    .B(counter0[1]),
    .Y(_171_)
  );
  NAND _359_ (
    .A(data_out[10]),
    .B(_006_),
    .Y(_172_)
  );
  NAND _360_ (
    .A(_172_),
    .B(_171_),
    .Y(_002_[10])
  );
  NAND _361_ (
    .A(bus0[11]),
    .B(counter0[1]),
    .Y(_173_)
  );
  NAND _362_ (
    .A(data_out[11]),
    .B(_006_),
    .Y(_174_)
  );
  NAND _363_ (
    .A(_174_),
    .B(_173_),
    .Y(_002_[11])
  );
  NAND _364_ (
    .A(bus0[12]),
    .B(counter0[1]),
    .Y(_175_)
  );
  NAND _365_ (
    .A(data_out[12]),
    .B(_006_),
    .Y(_176_)
  );
  NAND _366_ (
    .A(_176_),
    .B(_175_),
    .Y(_002_[12])
  );
  NAND _367_ (
    .A(bus0[13]),
    .B(counter0[1]),
    .Y(_177_)
  );
  NAND _368_ (
    .A(data_out[13]),
    .B(_006_),
    .Y(_178_)
  );
  NAND _369_ (
    .A(_178_),
    .B(_177_),
    .Y(_002_[13])
  );
  NAND _370_ (
    .A(bus0[14]),
    .B(counter0[1]),
    .Y(_179_)
  );
  NAND _371_ (
    .A(data_out[14]),
    .B(_006_),
    .Y(_180_)
  );
  NAND _372_ (
    .A(_180_),
    .B(_179_),
    .Y(_002_[14])
  );
  NAND _373_ (
    .A(bus0[15]),
    .B(counter0[1]),
    .Y(_181_)
  );
  NAND _374_ (
    .A(data_out[15]),
    .B(_006_),
    .Y(_182_)
  );
  NAND _375_ (
    .A(_182_),
    .B(_181_),
    .Y(_002_[15])
  );
  NAND _376_ (
    .A(bus0[16]),
    .B(counter0[1]),
    .Y(_183_)
  );
  NAND _377_ (
    .A(data_out[16]),
    .B(_006_),
    .Y(_184_)
  );
  NAND _378_ (
    .A(_184_),
    .B(_183_),
    .Y(_002_[16])
  );
  NAND _379_ (
    .A(bus0[17]),
    .B(counter0[1]),
    .Y(_185_)
  );
  NAND _380_ (
    .A(data_out[17]),
    .B(_006_),
    .Y(_186_)
  );
  NAND _381_ (
    .A(_186_),
    .B(_185_),
    .Y(_002_[17])
  );
  NAND _382_ (
    .A(bus0[18]),
    .B(counter0[1]),
    .Y(_187_)
  );
  NAND _383_ (
    .A(data_out[18]),
    .B(_006_),
    .Y(_188_)
  );
  NAND _384_ (
    .A(_188_),
    .B(_187_),
    .Y(_002_[18])
  );
  NAND _385_ (
    .A(bus0[19]),
    .B(counter0[1]),
    .Y(_189_)
  );
  NAND _386_ (
    .A(data_out[19]),
    .B(_006_),
    .Y(_190_)
  );
  NAND _387_ (
    .A(_190_),
    .B(_189_),
    .Y(_002_[19])
  );
  NAND _388_ (
    .A(bus0[20]),
    .B(counter0[1]),
    .Y(_191_)
  );
  NAND _389_ (
    .A(data_out[20]),
    .B(_006_),
    .Y(_192_)
  );
  NAND _390_ (
    .A(_192_),
    .B(_191_),
    .Y(_002_[20])
  );
  NAND _391_ (
    .A(bus0[21]),
    .B(counter0[1]),
    .Y(_193_)
  );
  NAND _392_ (
    .A(data_out[21]),
    .B(_006_),
    .Y(_194_)
  );
  NAND _393_ (
    .A(_194_),
    .B(_193_),
    .Y(_002_[21])
  );
  NAND _394_ (
    .A(bus0[22]),
    .B(counter0[1]),
    .Y(_195_)
  );
  NAND _395_ (
    .A(data_out[22]),
    .B(_006_),
    .Y(_196_)
  );
  NAND _396_ (
    .A(_196_),
    .B(_195_),
    .Y(_002_[22])
  );
  NAND _397_ (
    .A(bus0[23]),
    .B(counter0[1]),
    .Y(_197_)
  );
  NAND _398_ (
    .A(data_out[23]),
    .B(_006_),
    .Y(_198_)
  );
  NAND _399_ (
    .A(_198_),
    .B(_197_),
    .Y(_002_[23])
  );
  NAND _400_ (
    .A(bus0[24]),
    .B(counter0[1]),
    .Y(_199_)
  );
  NAND _401_ (
    .A(data_out[24]),
    .B(_006_),
    .Y(_200_)
  );
  NAND _402_ (
    .A(_200_),
    .B(_199_),
    .Y(_002_[24])
  );
  NAND _403_ (
    .A(bus0[25]),
    .B(counter0[1]),
    .Y(_201_)
  );
  NAND _404_ (
    .A(data_out[25]),
    .B(_006_),
    .Y(_202_)
  );
  NAND _405_ (
    .A(_202_),
    .B(_201_),
    .Y(_002_[25])
  );
  NAND _406_ (
    .A(bus0[26]),
    .B(counter0[1]),
    .Y(_203_)
  );
  NAND _407_ (
    .A(data_out[26]),
    .B(_006_),
    .Y(_204_)
  );
  NAND _408_ (
    .A(_204_),
    .B(_203_),
    .Y(_002_[26])
  );
  NAND _409_ (
    .A(bus0[27]),
    .B(counter0[1]),
    .Y(_205_)
  );
  NAND _410_ (
    .A(data_out[27]),
    .B(_006_),
    .Y(_206_)
  );
  NAND _411_ (
    .A(_206_),
    .B(_205_),
    .Y(_002_[27])
  );
  NAND _412_ (
    .A(bus0[28]),
    .B(counter0[1]),
    .Y(_207_)
  );
  NAND _413_ (
    .A(data_out[28]),
    .B(_006_),
    .Y(_208_)
  );
  NAND _414_ (
    .A(_208_),
    .B(_207_),
    .Y(_002_[28])
  );
  NAND _415_ (
    .A(bus0[29]),
    .B(counter0[1]),
    .Y(_209_)
  );
  NAND _416_ (
    .A(data_out[29]),
    .B(_006_),
    .Y(_210_)
  );
  NAND _417_ (
    .A(_210_),
    .B(_209_),
    .Y(_002_[29])
  );
  NAND _418_ (
    .A(bus0[30]),
    .B(counter0[1]),
    .Y(_211_)
  );
  NAND _419_ (
    .A(data_out[30]),
    .B(_006_),
    .Y(_212_)
  );
  NAND _420_ (
    .A(_212_),
    .B(_211_),
    .Y(_002_[30])
  );
  NAND _421_ (
    .A(bus0[31]),
    .B(counter0[1]),
    .Y(_213_)
  );
  NAND _422_ (
    .A(data_out[31]),
    .B(_006_),
    .Y(_214_)
  );
  NAND _423_ (
    .A(_214_),
    .B(_213_),
    .Y(_002_[31])
  );
  NOT _424_ (
    .A(counter0[0]),
    .Y(_215_)
  );
  NOR _425_ (
    .A(_016_),
    .B(_215_),
    .Y(_122_)
  );
  NAND _426_ (
    .A(_104_),
    .B(_060_),
    .Y(_001_[1])
  );
  NOT _427_ (
    .A(reset_L),
    .Y(_007_)
  );
  NOT _428_ (
    .A(reset_L),
    .Y(_009_)
  );
  NOT _429_ (
    .A(reset_L),
    .Y(_010_)
  );
  NOT _430_ (
    .A(reset_L),
    .Y(_012_)
  );
  NOT _431_ (
    .A(reset_L),
    .Y(_013_)
  );
  NOT _432_ (
    .A(reset_L),
    .Y(_015_)
  );
  NOT _433_ (
    .A(reset_L),
    .Y(_017_)
  );
  NOT _434_ (
    .A(reset_L),
    .Y(_019_)
  );
  NOT _435_ (
    .A(reset_L),
    .Y(_020_)
  );
  NOT _436_ (
    .A(reset_L),
    .Y(_022_)
  );
  NOT _437_ (
    .A(reset_L),
    .Y(_024_)
  );
  NOT _438_ (
    .A(reset_L),
    .Y(_025_)
  );
  NOT _439_ (
    .A(reset_L),
    .Y(_027_)
  );
  NOT _440_ (
    .A(reset_L),
    .Y(_029_)
  );
  NOT _441_ (
    .A(reset_L),
    .Y(_030_)
  );
  NOT _442_ (
    .A(reset_L),
    .Y(_032_)
  );
  NOT _443_ (
    .A(reset_L),
    .Y(_034_)
  );
  NOT _444_ (
    .A(reset_L),
    .Y(_035_)
  );
  NOT _445_ (
    .A(reset_L),
    .Y(_037_)
  );
  NOT _446_ (
    .A(reset_L),
    .Y(_039_)
  );
  NOT _447_ (
    .A(reset_L),
    .Y(_040_)
  );
  NOT _448_ (
    .A(reset_L),
    .Y(_042_)
  );
  NOT _449_ (
    .A(reset_L),
    .Y(_044_)
  );
  NOT _450_ (
    .A(reset_L),
    .Y(_045_)
  );
  NOT _451_ (
    .A(reset_L),
    .Y(_047_)
  );
  NOT _452_ (
    .A(reset_L),
    .Y(_049_)
  );
  NOT _453_ (
    .A(reset_L),
    .Y(_050_)
  );
  NOT _454_ (
    .A(reset_L),
    .Y(_052_)
  );
  NOT _455_ (
    .A(reset_L),
    .Y(_054_)
  );
  NOT _456_ (
    .A(reset_L),
    .Y(_055_)
  );
  NOT _457_ (
    .A(reset_L),
    .Y(_057_)
  );
  NOT _458_ (
    .A(reset_L),
    .Y(_059_)
  );
  NOT _459_ (
    .A(reset_L),
    .Y(_061_)
  );
  NOT _460_ (
    .A(reset_L),
    .Y(_063_)
  );
  NOT _461_ (
    .A(reset_L),
    .Y(_064_)
  );
  NOT _462_ (
    .A(reset_L),
    .Y(_066_)
  );
  NOT _463_ (
    .A(reset_L),
    .Y(_068_)
  );
  NOT _464_ (
    .A(reset_L),
    .Y(_069_)
  );
  NOT _465_ (
    .A(reset_L),
    .Y(_071_)
  );
  NOT _466_ (
    .A(reset_L),
    .Y(_073_)
  );
  NOT _467_ (
    .A(reset_L),
    .Y(_074_)
  );
  NOT _468_ (
    .A(reset_L),
    .Y(_076_)
  );
  NOT _469_ (
    .A(reset_L),
    .Y(_078_)
  );
  NOT _470_ (
    .A(reset_L),
    .Y(_079_)
  );
  NOT _471_ (
    .A(reset_L),
    .Y(_081_)
  );
  NOT _472_ (
    .A(reset_L),
    .Y(_083_)
  );
  NOT _473_ (
    .A(reset_L),
    .Y(_084_)
  );
  NOT _474_ (
    .A(reset_L),
    .Y(_086_)
  );
  NOT _475_ (
    .A(reset_L),
    .Y(_088_)
  );
  NOT _476_ (
    .A(reset_L),
    .Y(_089_)
  );
  NOT _477_ (
    .A(reset_L),
    .Y(_091_)
  );
  NOT _478_ (
    .A(reset_L),
    .Y(_093_)
  );
  NOT _479_ (
    .A(reset_L),
    .Y(_094_)
  );
  NOT _480_ (
    .A(reset_L),
    .Y(_096_)
  );
  NOT _481_ (
    .A(reset_L),
    .Y(_098_)
  );
  NOT _482_ (
    .A(reset_L),
    .Y(_099_)
  );
  NOT _483_ (
    .A(reset_L),
    .Y(_101_)
  );
  NOT _484_ (
    .A(reset_L),
    .Y(_103_)
  );
  NOT _485_ (
    .A(reset_L),
    .Y(_105_)
  );
  NOT _486_ (
    .A(reset_L),
    .Y(_107_)
  );
  NOT _487_ (
    .A(reset_L),
    .Y(_108_)
  );
  NOT _488_ (
    .A(reset_L),
    .Y(_110_)
  );
  NOT _489_ (
    .A(reset_L),
    .Y(_112_)
  );
  NOT _490_ (
    .A(reset_L),
    .Y(_113_)
  );
  NOT _491_ (
    .A(reset_L),
    .Y(_115_)
  );
  NOT _492_ (
    .A(reset_L),
    .Y(_117_)
  );
  NOT _493_ (
    .A(reset_L),
    .Y(_118_)
  );
  NOT _494_ (
    .A(reset_L),
    .Y(_120_)
  );
  DFFSR _495_ (
    .C(clockS4),
    .D(_005_),
    .Q(counter0[0]),
    .R(1'b0),
    .S(_007_)
  );
  DFFSR _496_ (
    .C(clockS4),
    .D(_122_),
    .Q(counter0[1]),
    .R(_009_),
    .S(1'b0)
  );
  DFFSR _497_ (
    .C(clockS4),
    .D(_002_[0]),
    .Q(data_out[0]),
    .R(_010_),
    .S(1'b0)
  );
  DFFSR _498_ (
    .C(clockS4),
    .D(_002_[1]),
    .Q(data_out[1]),
    .R(_012_),
    .S(1'b0)
  );
  DFFSR _499_ (
    .C(clockS4),
    .D(_002_[2]),
    .Q(data_out[2]),
    .R(_013_),
    .S(1'b0)
  );
  DFFSR _500_ (
    .C(clockS4),
    .D(_002_[3]),
    .Q(data_out[3]),
    .R(_015_),
    .S(1'b0)
  );
  DFFSR _501_ (
    .C(clockS4),
    .D(_002_[4]),
    .Q(data_out[4]),
    .R(_017_),
    .S(1'b0)
  );
  DFFSR _502_ (
    .C(clockS4),
    .D(_002_[5]),
    .Q(data_out[5]),
    .R(_019_),
    .S(1'b0)
  );
  DFFSR _503_ (
    .C(clockS4),
    .D(_002_[6]),
    .Q(data_out[6]),
    .R(_020_),
    .S(1'b0)
  );
  DFFSR _504_ (
    .C(clockS4),
    .D(_002_[7]),
    .Q(data_out[7]),
    .R(_022_),
    .S(1'b0)
  );
  DFFSR _505_ (
    .C(clockS4),
    .D(_002_[8]),
    .Q(data_out[8]),
    .R(_024_),
    .S(1'b0)
  );
  DFFSR _506_ (
    .C(clockS4),
    .D(_002_[9]),
    .Q(data_out[9]),
    .R(_025_),
    .S(1'b0)
  );
  DFFSR _507_ (
    .C(clockS4),
    .D(_002_[10]),
    .Q(data_out[10]),
    .R(_027_),
    .S(1'b0)
  );
  DFFSR _508_ (
    .C(clockS4),
    .D(_002_[11]),
    .Q(data_out[11]),
    .R(_029_),
    .S(1'b0)
  );
  DFFSR _509_ (
    .C(clockS4),
    .D(_002_[12]),
    .Q(data_out[12]),
    .R(_030_),
    .S(1'b0)
  );
  DFFSR _510_ (
    .C(clockS4),
    .D(_002_[13]),
    .Q(data_out[13]),
    .R(_032_),
    .S(1'b0)
  );
  DFFSR _511_ (
    .C(clockS4),
    .D(_002_[14]),
    .Q(data_out[14]),
    .R(_034_),
    .S(1'b0)
  );
  DFFSR _512_ (
    .C(clockS4),
    .D(_002_[15]),
    .Q(data_out[15]),
    .R(_035_),
    .S(1'b0)
  );
  DFFSR _513_ (
    .C(clockS4),
    .D(_002_[16]),
    .Q(data_out[16]),
    .R(_037_),
    .S(1'b0)
  );
  DFFSR _514_ (
    .C(clockS4),
    .D(_002_[17]),
    .Q(data_out[17]),
    .R(_039_),
    .S(1'b0)
  );
  DFFSR _515_ (
    .C(clockS4),
    .D(_002_[18]),
    .Q(data_out[18]),
    .R(_040_),
    .S(1'b0)
  );
  DFFSR _516_ (
    .C(clockS4),
    .D(_002_[19]),
    .Q(data_out[19]),
    .R(_042_),
    .S(1'b0)
  );
  DFFSR _517_ (
    .C(clockS4),
    .D(_002_[20]),
    .Q(data_out[20]),
    .R(_044_),
    .S(1'b0)
  );
  DFFSR _518_ (
    .C(clockS4),
    .D(_002_[21]),
    .Q(data_out[21]),
    .R(_045_),
    .S(1'b0)
  );
  DFFSR _519_ (
    .C(clockS4),
    .D(_002_[22]),
    .Q(data_out[22]),
    .R(_047_),
    .S(1'b0)
  );
  DFFSR _520_ (
    .C(clockS4),
    .D(_002_[23]),
    .Q(data_out[23]),
    .R(_049_),
    .S(1'b0)
  );
  DFFSR _521_ (
    .C(clockS4),
    .D(_002_[24]),
    .Q(data_out[24]),
    .R(_050_),
    .S(1'b0)
  );
  DFFSR _522_ (
    .C(clockS4),
    .D(_002_[25]),
    .Q(data_out[25]),
    .R(_052_),
    .S(1'b0)
  );
  DFFSR _523_ (
    .C(clockS4),
    .D(_002_[26]),
    .Q(data_out[26]),
    .R(_054_),
    .S(1'b0)
  );
  DFFSR _524_ (
    .C(clockS4),
    .D(_002_[27]),
    .Q(data_out[27]),
    .R(_055_),
    .S(1'b0)
  );
  DFFSR _525_ (
    .C(clockS4),
    .D(_002_[28]),
    .Q(data_out[28]),
    .R(_057_),
    .S(1'b0)
  );
  DFFSR _526_ (
    .C(clockS4),
    .D(_002_[29]),
    .Q(data_out[29]),
    .R(_059_),
    .S(1'b0)
  );
  DFFSR _527_ (
    .C(clockS4),
    .D(_002_[30]),
    .Q(data_out[30]),
    .R(_061_),
    .S(1'b0)
  );
  DFFSR _528_ (
    .C(clockS4),
    .D(_002_[31]),
    .Q(data_out[31]),
    .R(_063_),
    .S(1'b0)
  );
  DFFSR _529_ (
    .C(clockS4),
    .D(_003_),
    .Q(valid_out),
    .R(_064_),
    .S(1'b0)
  );
  DFFSR _530_ (
    .C(clockS4),
    .D(_001_[0]),
    .Q(counter[0]),
    .R(1'b0),
    .S(_066_)
  );
  DFFSR _531_ (
    .C(clockS4),
    .D(_001_[1]),
    .Q(counter[1]),
    .R(_068_),
    .S(1'b0)
  );
  DFFSR _532_ (
    .C(clockS4),
    .D(_000_[0]),
    .Q(bus0[0]),
    .R(_069_),
    .S(1'b0)
  );
  DFFSR _533_ (
    .C(clockS4),
    .D(_000_[1]),
    .Q(bus0[1]),
    .R(_071_),
    .S(1'b0)
  );
  DFFSR _534_ (
    .C(clockS4),
    .D(_000_[2]),
    .Q(bus0[2]),
    .R(_073_),
    .S(1'b0)
  );
  DFFSR _535_ (
    .C(clockS4),
    .D(_000_[3]),
    .Q(bus0[3]),
    .R(_074_),
    .S(1'b0)
  );
  DFFSR _536_ (
    .C(clockS4),
    .D(_000_[4]),
    .Q(bus0[4]),
    .R(_076_),
    .S(1'b0)
  );
  DFFSR _537_ (
    .C(clockS4),
    .D(_000_[5]),
    .Q(bus0[5]),
    .R(_078_),
    .S(1'b0)
  );
  DFFSR _538_ (
    .C(clockS4),
    .D(_000_[6]),
    .Q(bus0[6]),
    .R(_079_),
    .S(1'b0)
  );
  DFFSR _539_ (
    .C(clockS4),
    .D(_000_[7]),
    .Q(bus0[7]),
    .R(_081_),
    .S(1'b0)
  );
  DFFSR _540_ (
    .C(clockS4),
    .D(_000_[8]),
    .Q(bus0[8]),
    .R(_083_),
    .S(1'b0)
  );
  DFFSR _541_ (
    .C(clockS4),
    .D(_000_[9]),
    .Q(bus0[9]),
    .R(_084_),
    .S(1'b0)
  );
  DFFSR _542_ (
    .C(clockS4),
    .D(_000_[10]),
    .Q(bus0[10]),
    .R(_086_),
    .S(1'b0)
  );
  DFFSR _543_ (
    .C(clockS4),
    .D(_000_[11]),
    .Q(bus0[11]),
    .R(_088_),
    .S(1'b0)
  );
  DFFSR _544_ (
    .C(clockS4),
    .D(_000_[12]),
    .Q(bus0[12]),
    .R(_089_),
    .S(1'b0)
  );
  DFFSR _545_ (
    .C(clockS4),
    .D(_000_[13]),
    .Q(bus0[13]),
    .R(_091_),
    .S(1'b0)
  );
  DFFSR _546_ (
    .C(clockS4),
    .D(_000_[14]),
    .Q(bus0[14]),
    .R(_093_),
    .S(1'b0)
  );
  DFFSR _547_ (
    .C(clockS4),
    .D(_000_[15]),
    .Q(bus0[15]),
    .R(_094_),
    .S(1'b0)
  );
  DFFSR _548_ (
    .C(clockS4),
    .D(_000_[16]),
    .Q(bus0[16]),
    .R(_096_),
    .S(1'b0)
  );
  DFFSR _549_ (
    .C(clockS4),
    .D(_000_[17]),
    .Q(bus0[17]),
    .R(_098_),
    .S(1'b0)
  );
  DFFSR _550_ (
    .C(clockS4),
    .D(_000_[18]),
    .Q(bus0[18]),
    .R(_099_),
    .S(1'b0)
  );
  DFFSR _551_ (
    .C(clockS4),
    .D(_000_[19]),
    .Q(bus0[19]),
    .R(_101_),
    .S(1'b0)
  );
  DFFSR _552_ (
    .C(clockS4),
    .D(_000_[20]),
    .Q(bus0[20]),
    .R(_103_),
    .S(1'b0)
  );
  DFFSR _553_ (
    .C(clockS4),
    .D(_000_[21]),
    .Q(bus0[21]),
    .R(_105_),
    .S(1'b0)
  );
  DFFSR _554_ (
    .C(clockS4),
    .D(_000_[22]),
    .Q(bus0[22]),
    .R(_107_),
    .S(1'b0)
  );
  DFFSR _555_ (
    .C(clockS4),
    .D(_000_[23]),
    .Q(bus0[23]),
    .R(_108_),
    .S(1'b0)
  );
  DFFSR _556_ (
    .C(clockS4),
    .D(_000_[24]),
    .Q(bus0[24]),
    .R(_110_),
    .S(1'b0)
  );
  DFFSR _557_ (
    .C(clockS4),
    .D(_000_[25]),
    .Q(bus0[25]),
    .R(_112_),
    .S(1'b0)
  );
  DFFSR _558_ (
    .C(clockS4),
    .D(_000_[26]),
    .Q(bus0[26]),
    .R(_113_),
    .S(1'b0)
  );
  DFFSR _559_ (
    .C(clockS4),
    .D(_000_[27]),
    .Q(bus0[27]),
    .R(_115_),
    .S(1'b0)
  );
  DFFSR _560_ (
    .C(clockS4),
    .D(_000_[28]),
    .Q(bus0[28]),
    .R(_117_),
    .S(1'b0)
  );
  DFFSR _561_ (
    .C(clockS4),
    .D(_000_[29]),
    .Q(bus0[29]),
    .R(_118_),
    .S(1'b0)
  );
  DFFSR _562_ (
    .C(clockS4),
    .D(_000_[30]),
    .Q(bus0[30]),
    .R(_120_),
    .S(1'b0)
  );
  DFFSR _563_ (
    .C(clockS4),
    .D(_000_[31]),
    .Q(bus0[31]),
    .R(_004_),
    .S(1'b0)
  );
endmodule

(* src = "clockS.v:1" *)
module clockS(clockS32, reset_L, clockS4, clockS2, clockS1);
  (* src = "clockS.v:7" *)
  wire _00_;
  (* src = "clockS.v:7" *)
  wire _01_;
  (* src = "clockS.v:7" *)
  wire _02_;
  (* src = "clockS.v:7" *)
  wire _03_;
  (* src = "clockS.v:7" *)
  wire _04_;
  (* src = "clockS.v:7" *)
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  (* src = "clockS.v:3" *)
  output clockS1;
  (* src = "clockS.v:3" *)
  output clockS2;
  (* src = "clockS.v:2" *)
  input clockS32;
  (* src = "clockS.v:3" *)
  output clockS4;
  (* src = "clockS.v:6" *)
  wire counter0;
  (* src = "clockS.v:6" *)
  wire counter1;
  (* src = "clockS.v:6" *)
  wire counter2;
  (* src = "clockS.v:2" *)
  input reset_L;
  NOT _30_ (
    .A(reset_L),
    .Y(_06_)
  );
  NOT _31_ (
    .A(clockS4),
    .Y(_07_)
  );
  NOR _32_ (
    .A(counter0),
    .B(counter1),
    .Y(_08_)
  );
  NAND _33_ (
    .A(_08_),
    .B(_07_),
    .Y(_09_)
  );
  NAND _34_ (
    .A(_09_),
    .B(counter2),
    .Y(_10_)
  );
  NOT _35_ (
    .A(counter2),
    .Y(_11_)
  );
  NOT _36_ (
    .A(counter1),
    .Y(_12_)
  );
  NOT _37_ (
    .A(counter0),
    .Y(_03_)
  );
  NAND _38_ (
    .A(_03_),
    .B(_12_),
    .Y(_15_)
  );
  NOR _39_ (
    .A(_15_),
    .B(clockS4),
    .Y(_17_)
  );
  NAND _40_ (
    .A(_17_),
    .B(_11_),
    .Y(_19_)
  );
  NAND _41_ (
    .A(_19_),
    .B(_10_),
    .Y(_05_)
  );
  NAND _42_ (
    .A(counter0),
    .B(counter1),
    .Y(_21_)
  );
  NAND _43_ (
    .A(_21_),
    .B(_15_),
    .Y(_04_)
  );
  NOR _44_ (
    .A(_09_),
    .B(counter2),
    .Y(_22_)
  );
  NOR _45_ (
    .A(_22_),
    .B(clockS1),
    .Y(_23_)
  );
  NOT _46_ (
    .A(clockS1),
    .Y(_24_)
  );
  NOR _47_ (
    .A(_19_),
    .B(_24_),
    .Y(_25_)
  );
  NOR _48_ (
    .A(_25_),
    .B(_23_),
    .Y(_00_)
  );
  NAND _49_ (
    .A(_09_),
    .B(clockS2),
    .Y(_26_)
  );
  NOT _50_ (
    .A(clockS2),
    .Y(_27_)
  );
  NAND _51_ (
    .A(_17_),
    .B(_27_),
    .Y(_28_)
  );
  NAND _52_ (
    .A(_28_),
    .B(_26_),
    .Y(_01_)
  );
  NAND _53_ (
    .A(_15_),
    .B(clockS4),
    .Y(_29_)
  );
  NAND _54_ (
    .A(_29_),
    .B(_09_),
    .Y(_02_)
  );
  NOT _55_ (
    .A(reset_L),
    .Y(_13_)
  );
  NOT _56_ (
    .A(reset_L),
    .Y(_14_)
  );
  NOT _57_ (
    .A(reset_L),
    .Y(_16_)
  );
  NOT _58_ (
    .A(reset_L),
    .Y(_18_)
  );
  NOT _59_ (
    .A(reset_L),
    .Y(_20_)
  );
  DFFSR _60_ (
    .C(clockS32),
    .D(_02_),
    .Q(clockS4),
    .R(_13_),
    .S(1'b0)
  );
  DFFSR _61_ (
    .C(clockS32),
    .D(_01_),
    .Q(clockS2),
    .R(_14_),
    .S(1'b0)
  );
  DFFSR _62_ (
    .C(clockS32),
    .D(_00_),
    .Q(clockS1),
    .R(_16_),
    .S(1'b0)
  );
  DFFSR _63_ (
    .C(clockS32),
    .D(_03_),
    .Q(counter0),
    .R(_18_),
    .S(1'b0)
  );
  DFFSR _64_ (
    .C(clockS32),
    .D(_04_),
    .Q(counter1),
    .R(_20_),
    .S(1'b0)
  );
  DFFSR _65_ (
    .C(clockS32),
    .D(_05_),
    .Q(counter2),
    .R(_06_),
    .S(1'b0)
  );
endmodule

(* src = "paralelo_serieS.v:1" *)
module paralelo_serieS(data_in, data2sent, data_out, counterBC, valid, clockS32, clockS4, reset_L);
  (* src = "paralelo_serieS.v:9" *)
  wire [15:0] _000_;
  (* src = "paralelo_serieS.v:9" *)
  wire [7:0] _001_;
  (* src = "paralelo_serieS.v:9" *)
  wire _002_;
  (* src = "paralelo_serieS.v:9" *)
  wire [2:0] _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  (* src = "paralelo_serieS.v:6" *)
  input clockS32;
  (* src = "paralelo_serieS.v:6" *)
  input clockS4;
  (* src = "paralelo_serieS.v:5" *)
  output [15:0] counterBC;
  (* src = "paralelo_serieS.v:3" *)
  output [7:0] data2sent;
  (* src = "paralelo_serieS.v:2" *)
  input [7:0] data_in;
  (* src = "paralelo_serieS.v:4" *)
  output data_out;
  (* src = "paralelo_serieS.v:6" *)
  input reset_L;
  (* src = "paralelo_serieS.v:8" *)
  wire [2:0] select;
  (* src = "paralelo_serieS.v:6" *)
  input valid;
  NOT _167_ (
    .A(reset_L),
    .Y(_004_)
  );
  NOT _168_ (
    .A(select[0]),
    .Y(_003_[0])
  );
  NAND _169_ (
    .A(valid),
    .B(data_in[0]),
    .Y(_161_)
  );
  NOT _170_ (
    .A(_161_),
    .Y(_001_[0])
  );
  NOT _171_ (
    .A(valid),
    .Y(_162_)
  );
  NOT _172_ (
    .A(data_in[1]),
    .Y(_163_)
  );
  NOR _173_ (
    .A(_163_),
    .B(_162_),
    .Y(_001_[1])
  );
  NOT _174_ (
    .A(data_in[2]),
    .Y(_164_)
  );
  NAND _175_ (
    .A(_164_),
    .B(valid),
    .Y(_001_[2])
  );
  NOT _176_ (
    .A(data_in[3]),
    .Y(_165_)
  );
  NAND _177_ (
    .A(_165_),
    .B(valid),
    .Y(_001_[3])
  );
  NOT _178_ (
    .A(data_in[4]),
    .Y(_166_)
  );
  NAND _179_ (
    .A(_166_),
    .B(valid),
    .Y(_001_[4])
  );
  NOT _180_ (
    .A(data_in[5]),
    .Y(_005_)
  );
  NAND _181_ (
    .A(_005_),
    .B(valid),
    .Y(_001_[5])
  );
  NOT _182_ (
    .A(data_in[6]),
    .Y(_006_)
  );
  NOR _183_ (
    .A(_006_),
    .B(_162_),
    .Y(_001_[6])
  );
  NOT _184_ (
    .A(data_in[7]),
    .Y(_007_)
  );
  NAND _185_ (
    .A(_007_),
    .B(valid),
    .Y(_001_[7])
  );
  NOT _186_ (
    .A(counterBC[0]),
    .Y(_008_)
  );
  NAND _187_ (
    .A(select[1]),
    .B(select[2]),
    .Y(_009_)
  );
  NOR _188_ (
    .A(_009_),
    .B(_003_[0]),
    .Y(_010_)
  );
  NAND _189_ (
    .A(_010_),
    .B(_162_),
    .Y(_011_)
  );
  NOR _190_ (
    .A(_011_),
    .B(_008_),
    .Y(_012_)
  );
  NOT _191_ (
    .A(_011_),
    .Y(_013_)
  );
  NOR _192_ (
    .A(_013_),
    .B(counterBC[0]),
    .Y(_014_)
  );
  NOR _193_ (
    .A(_014_),
    .B(_012_),
    .Y(_000_[0])
  );
  NOR _194_ (
    .A(_012_),
    .B(counterBC[1]),
    .Y(_015_)
  );
  NOT _195_ (
    .A(counterBC[1]),
    .Y(_016_)
  );
  NOR _196_ (
    .A(_016_),
    .B(_008_),
    .Y(_017_)
  );
  NOT _197_ (
    .A(_017_),
    .Y(_018_)
  );
  NOR _198_ (
    .A(_018_),
    .B(_011_),
    .Y(_019_)
  );
  NOR _199_ (
    .A(_019_),
    .B(_015_),
    .Y(_000_[1])
  );
  NOT _200_ (
    .A(counterBC[2]),
    .Y(_020_)
  );
  NOT _201_ (
    .A(_019_),
    .Y(_021_)
  );
  NOR _202_ (
    .A(_021_),
    .B(_020_),
    .Y(_022_)
  );
  NOR _203_ (
    .A(_019_),
    .B(counterBC[2]),
    .Y(_023_)
  );
  NOR _204_ (
    .A(_023_),
    .B(_022_),
    .Y(_000_[2])
  );
  NOT _205_ (
    .A(counterBC[3]),
    .Y(_024_)
  );
  NOR _206_ (
    .A(_024_),
    .B(_020_),
    .Y(_025_)
  );
  NAND _207_ (
    .A(_025_),
    .B(_017_),
    .Y(_026_)
  );
  NOR _208_ (
    .A(_026_),
    .B(_011_),
    .Y(_027_)
  );
  NOR _209_ (
    .A(_022_),
    .B(counterBC[3]),
    .Y(_028_)
  );
  NOR _210_ (
    .A(_028_),
    .B(_027_),
    .Y(_000_[3])
  );
  NOR _211_ (
    .A(_027_),
    .B(counterBC[4]),
    .Y(_029_)
  );
  NAND _212_ (
    .A(_027_),
    .B(counterBC[4]),
    .Y(_030_)
  );
  NOT _213_ (
    .A(_030_),
    .Y(_031_)
  );
  NOR _214_ (
    .A(_031_),
    .B(_029_),
    .Y(_000_[4])
  );
  NOR _215_ (
    .A(_031_),
    .B(counterBC[5]),
    .Y(_032_)
  );
  NOT _216_ (
    .A(counterBC[5]),
    .Y(_033_)
  );
  NOR _217_ (
    .A(_030_),
    .B(_033_),
    .Y(_034_)
  );
  NOR _218_ (
    .A(_034_),
    .B(_032_),
    .Y(_000_[5])
  );
  NOR _219_ (
    .A(_034_),
    .B(counterBC[6]),
    .Y(_035_)
  );
  NOT _220_ (
    .A(_027_),
    .Y(_036_)
  );
  NAND _221_ (
    .A(counterBC[5]),
    .B(counterBC[4]),
    .Y(_037_)
  );
  NOR _222_ (
    .A(_037_),
    .B(_036_),
    .Y(_038_)
  );
  NAND _223_ (
    .A(_038_),
    .B(counterBC[6]),
    .Y(_039_)
  );
  NOT _224_ (
    .A(_039_),
    .Y(_041_)
  );
  NOR _225_ (
    .A(_041_),
    .B(_035_),
    .Y(_000_[6])
  );
  NOR _226_ (
    .A(_041_),
    .B(counterBC[7]),
    .Y(_044_)
  );
  NOT _227_ (
    .A(counterBC[7]),
    .Y(_046_)
  );
  NOR _228_ (
    .A(_039_),
    .B(_046_),
    .Y(_048_)
  );
  NOR _229_ (
    .A(_048_),
    .B(_044_),
    .Y(_000_[7])
  );
  NOR _230_ (
    .A(_048_),
    .B(counterBC[8]),
    .Y(_051_)
  );
  NOT _231_ (
    .A(counterBC[8]),
    .Y(_053_)
  );
  NOT _232_ (
    .A(counterBC[6]),
    .Y(_055_)
  );
  NOR _233_ (
    .A(_046_),
    .B(_055_),
    .Y(_057_)
  );
  NAND _234_ (
    .A(_057_),
    .B(_034_),
    .Y(_059_)
  );
  NOR _235_ (
    .A(_059_),
    .B(_053_),
    .Y(_061_)
  );
  NOR _236_ (
    .A(_061_),
    .B(_051_),
    .Y(_000_[8])
  );
  NOT _237_ (
    .A(_061_),
    .Y(_064_)
  );
  NAND _238_ (
    .A(_064_),
    .B(counterBC[9]),
    .Y(_066_)
  );
  NOT _239_ (
    .A(counterBC[9]),
    .Y(_068_)
  );
  NAND _240_ (
    .A(_061_),
    .B(_068_),
    .Y(_070_)
  );
  NAND _241_ (
    .A(_070_),
    .B(_066_),
    .Y(_000_[9])
  );
  NOR _242_ (
    .A(_068_),
    .B(_053_),
    .Y(_073_)
  );
  NAND _243_ (
    .A(_073_),
    .B(_057_),
    .Y(_075_)
  );
  NOR _244_ (
    .A(_075_),
    .B(_037_),
    .Y(_077_)
  );
  NAND _245_ (
    .A(_077_),
    .B(_027_),
    .Y(_079_)
  );
  NOT _246_ (
    .A(_079_),
    .Y(_081_)
  );
  NOR _247_ (
    .A(_081_),
    .B(counterBC[10]),
    .Y(_083_)
  );
  NOT _248_ (
    .A(counterBC[10]),
    .Y(_085_)
  );
  NOR _249_ (
    .A(_079_),
    .B(_085_),
    .Y(_087_)
  );
  NOR _250_ (
    .A(_087_),
    .B(_083_),
    .Y(_000_[10])
  );
  NOR _251_ (
    .A(_087_),
    .B(counterBC[11]),
    .Y(_089_)
  );
  NAND _252_ (
    .A(_087_),
    .B(counterBC[11]),
    .Y(_090_)
  );
  NOT _253_ (
    .A(_090_),
    .Y(_091_)
  );
  NOR _254_ (
    .A(_091_),
    .B(_089_),
    .Y(_000_[11])
  );
  NOR _255_ (
    .A(_091_),
    .B(counterBC[12]),
    .Y(_092_)
  );
  NOT _256_ (
    .A(counterBC[12]),
    .Y(_093_)
  );
  NOR _257_ (
    .A(_090_),
    .B(_093_),
    .Y(_094_)
  );
  NOR _258_ (
    .A(_094_),
    .B(_092_),
    .Y(_000_[12])
  );
  NOR _259_ (
    .A(_094_),
    .B(counterBC[13]),
    .Y(_095_)
  );
  NOT _260_ (
    .A(counterBC[13]),
    .Y(_096_)
  );
  NOT _261_ (
    .A(counterBC[11]),
    .Y(_097_)
  );
  NOR _262_ (
    .A(_097_),
    .B(_085_),
    .Y(_098_)
  );
  NAND _263_ (
    .A(counterBC[4]),
    .B(counterBC[3]),
    .Y(_099_)
  );
  NOR _264_ (
    .A(_099_),
    .B(_033_),
    .Y(_100_)
  );
  NOT _265_ (
    .A(_100_),
    .Y(_101_)
  );
  NAND _266_ (
    .A(counterBC[7]),
    .B(counterBC[6]),
    .Y(_102_)
  );
  NOR _267_ (
    .A(_102_),
    .B(_016_),
    .Y(_103_)
  );
  NAND _268_ (
    .A(counterBC[2]),
    .B(counterBC[0]),
    .Y(_104_)
  );
  NOR _269_ (
    .A(_104_),
    .B(_068_),
    .Y(_105_)
  );
  NAND _270_ (
    .A(_105_),
    .B(_103_),
    .Y(_106_)
  );
  NOR _271_ (
    .A(_106_),
    .B(_101_),
    .Y(_107_)
  );
  NOR _272_ (
    .A(_011_),
    .B(_053_),
    .Y(_108_)
  );
  NAND _273_ (
    .A(_108_),
    .B(_107_),
    .Y(_109_)
  );
  NOR _274_ (
    .A(_109_),
    .B(_093_),
    .Y(_110_)
  );
  NAND _275_ (
    .A(_110_),
    .B(_098_),
    .Y(_111_)
  );
  NOR _276_ (
    .A(_111_),
    .B(_096_),
    .Y(_112_)
  );
  NOR _277_ (
    .A(_112_),
    .B(_095_),
    .Y(_000_[13])
  );
  NOR _278_ (
    .A(_112_),
    .B(counterBC[14]),
    .Y(_113_)
  );
  NOT _279_ (
    .A(counterBC[14]),
    .Y(_114_)
  );
  NAND _280_ (
    .A(_057_),
    .B(counterBC[8]),
    .Y(_115_)
  );
  NAND _281_ (
    .A(_017_),
    .B(counterBC[2]),
    .Y(_116_)
  );
  NOR _282_ (
    .A(_116_),
    .B(_115_),
    .Y(_117_)
  );
  NAND _283_ (
    .A(_100_),
    .B(counterBC[9]),
    .Y(_118_)
  );
  NOR _284_ (
    .A(_118_),
    .B(_011_),
    .Y(_119_)
  );
  NAND _285_ (
    .A(_119_),
    .B(_117_),
    .Y(_120_)
  );
  NOR _286_ (
    .A(_120_),
    .B(_085_),
    .Y(_121_)
  );
  NAND _287_ (
    .A(_121_),
    .B(counterBC[11]),
    .Y(_122_)
  );
  NOR _288_ (
    .A(_122_),
    .B(_093_),
    .Y(_123_)
  );
  NAND _289_ (
    .A(_123_),
    .B(counterBC[13]),
    .Y(_124_)
  );
  NOR _290_ (
    .A(_124_),
    .B(_114_),
    .Y(_125_)
  );
  NOR _291_ (
    .A(_125_),
    .B(_113_),
    .Y(_000_[14])
  );
  NAND _292_ (
    .A(_112_),
    .B(counterBC[14]),
    .Y(_126_)
  );
  NAND _293_ (
    .A(_126_),
    .B(counterBC[15]),
    .Y(_127_)
  );
  NOT _294_ (
    .A(counterBC[15]),
    .Y(_128_)
  );
  NAND _295_ (
    .A(_125_),
    .B(_128_),
    .Y(_129_)
  );
  NAND _296_ (
    .A(_129_),
    .B(_127_),
    .Y(_000_[15])
  );
  NOT _297_ (
    .A(select[1]),
    .Y(_130_)
  );
  NOR _298_ (
    .A(_130_),
    .B(select[0]),
    .Y(_131_)
  );
  NOT _299_ (
    .A(_131_),
    .Y(_132_)
  );
  NOR _300_ (
    .A(_132_),
    .B(_005_),
    .Y(_133_)
  );
  NOR _301_ (
    .A(select[1]),
    .B(select[0]),
    .Y(_134_)
  );
  NAND _302_ (
    .A(_134_),
    .B(data_in[7]),
    .Y(_135_)
  );
  NOR _303_ (
    .A(select[1]),
    .B(_003_[0]),
    .Y(_136_)
  );
  NAND _304_ (
    .A(_136_),
    .B(data_in[6]),
    .Y(_137_)
  );
  NAND _305_ (
    .A(_137_),
    .B(_135_),
    .Y(_138_)
  );
  NOR _306_ (
    .A(_138_),
    .B(_133_),
    .Y(_139_)
  );
  NOR _307_ (
    .A(_130_),
    .B(_003_[0]),
    .Y(_140_)
  );
  NOT _308_ (
    .A(_140_),
    .Y(_141_)
  );
  NOR _309_ (
    .A(_141_),
    .B(_166_),
    .Y(_142_)
  );
  NOR _310_ (
    .A(_142_),
    .B(select[2]),
    .Y(_143_)
  );
  NAND _311_ (
    .A(_143_),
    .B(_139_),
    .Y(_144_)
  );
  NAND _312_ (
    .A(_131_),
    .B(data_in[1]),
    .Y(_145_)
  );
  NAND _313_ (
    .A(_136_),
    .B(data_in[2]),
    .Y(_146_)
  );
  NAND _314_ (
    .A(_146_),
    .B(_145_),
    .Y(_147_)
  );
  NAND _315_ (
    .A(_134_),
    .B(data_in[3]),
    .Y(_148_)
  );
  NAND _316_ (
    .A(_148_),
    .B(select[2]),
    .Y(_149_)
  );
  NOR _317_ (
    .A(_149_),
    .B(_147_),
    .Y(_150_)
  );
  NOR _318_ (
    .A(_150_),
    .B(_162_),
    .Y(_151_)
  );
  NAND _319_ (
    .A(_151_),
    .B(_144_),
    .Y(_152_)
  );
  NOT _320_ (
    .A(_010_),
    .Y(_153_)
  );
  NOR _321_ (
    .A(_153_),
    .B(_161_),
    .Y(_154_)
  );
  NOT _322_ (
    .A(_136_),
    .Y(_155_)
  );
  NOR _323_ (
    .A(_155_),
    .B(select[2]),
    .Y(_156_)
  );
  NAND _324_ (
    .A(_009_),
    .B(_162_),
    .Y(_157_)
  );
  NOR _325_ (
    .A(_157_),
    .B(_156_),
    .Y(_158_)
  );
  NOR _326_ (
    .A(_158_),
    .B(_154_),
    .Y(_159_)
  );
  NAND _327_ (
    .A(_159_),
    .B(_152_),
    .Y(_002_)
  );
  NAND _328_ (
    .A(_132_),
    .B(_155_),
    .Y(_003_[1])
  );
  NOR _329_ (
    .A(_140_),
    .B(select[2]),
    .Y(_160_)
  );
  NOR _330_ (
    .A(_160_),
    .B(_010_),
    .Y(_003_[2])
  );
  NOT _331_ (
    .A(reset_L),
    .Y(_040_)
  );
  NOT _332_ (
    .A(reset_L),
    .Y(_042_)
  );
  NOT _333_ (
    .A(reset_L),
    .Y(_043_)
  );
  NOT _334_ (
    .A(reset_L),
    .Y(_045_)
  );
  NOT _335_ (
    .A(reset_L),
    .Y(_047_)
  );
  NOT _336_ (
    .A(reset_L),
    .Y(_049_)
  );
  NOT _337_ (
    .A(reset_L),
    .Y(_050_)
  );
  NOT _338_ (
    .A(reset_L),
    .Y(_052_)
  );
  NOT _339_ (
    .A(reset_L),
    .Y(_054_)
  );
  NOT _340_ (
    .A(reset_L),
    .Y(_056_)
  );
  NOT _341_ (
    .A(reset_L),
    .Y(_058_)
  );
  NOT _342_ (
    .A(reset_L),
    .Y(_060_)
  );
  NOT _343_ (
    .A(reset_L),
    .Y(_062_)
  );
  NOT _344_ (
    .A(reset_L),
    .Y(_063_)
  );
  NOT _345_ (
    .A(reset_L),
    .Y(_065_)
  );
  NOT _346_ (
    .A(reset_L),
    .Y(_067_)
  );
  NOT _347_ (
    .A(reset_L),
    .Y(_069_)
  );
  NOT _348_ (
    .A(reset_L),
    .Y(_071_)
  );
  NOT _349_ (
    .A(reset_L),
    .Y(_072_)
  );
  NOT _350_ (
    .A(reset_L),
    .Y(_074_)
  );
  NOT _351_ (
    .A(reset_L),
    .Y(_076_)
  );
  NOT _352_ (
    .A(reset_L),
    .Y(_078_)
  );
  NOT _353_ (
    .A(reset_L),
    .Y(_080_)
  );
  NOT _354_ (
    .A(reset_L),
    .Y(_082_)
  );
  NOT _355_ (
    .A(reset_L),
    .Y(_084_)
  );
  NOT _356_ (
    .A(reset_L),
    .Y(_086_)
  );
  NOT _357_ (
    .A(reset_L),
    .Y(_088_)
  );
  DFFSR _358_ (
    .C(clockS32),
    .D(_002_),
    .Q(data_out),
    .R(_040_),
    .S(1'b0)
  );
  DFFSR _359_ (
    .C(clockS32),
    .D(_000_[0]),
    .Q(counterBC[0]),
    .R(_042_),
    .S(1'b0)
  );
  DFFSR _360_ (
    .C(clockS32),
    .D(_000_[1]),
    .Q(counterBC[1]),
    .R(_043_),
    .S(1'b0)
  );
  DFFSR _361_ (
    .C(clockS32),
    .D(_000_[2]),
    .Q(counterBC[2]),
    .R(_045_),
    .S(1'b0)
  );
  DFFSR _362_ (
    .C(clockS32),
    .D(_000_[3]),
    .Q(counterBC[3]),
    .R(_047_),
    .S(1'b0)
  );
  DFFSR _363_ (
    .C(clockS32),
    .D(_000_[4]),
    .Q(counterBC[4]),
    .R(_049_),
    .S(1'b0)
  );
  DFFSR _364_ (
    .C(clockS32),
    .D(_000_[5]),
    .Q(counterBC[5]),
    .R(_050_),
    .S(1'b0)
  );
  DFFSR _365_ (
    .C(clockS32),
    .D(_000_[6]),
    .Q(counterBC[6]),
    .R(_052_),
    .S(1'b0)
  );
  DFFSR _366_ (
    .C(clockS32),
    .D(_000_[7]),
    .Q(counterBC[7]),
    .R(_054_),
    .S(1'b0)
  );
  DFFSR _367_ (
    .C(clockS32),
    .D(_000_[8]),
    .Q(counterBC[8]),
    .R(_056_),
    .S(1'b0)
  );
  DFFSR _368_ (
    .C(clockS32),
    .D(_000_[9]),
    .Q(counterBC[9]),
    .R(_058_),
    .S(1'b0)
  );
  DFFSR _369_ (
    .C(clockS32),
    .D(_000_[10]),
    .Q(counterBC[10]),
    .R(_060_),
    .S(1'b0)
  );
  DFFSR _370_ (
    .C(clockS32),
    .D(_000_[11]),
    .Q(counterBC[11]),
    .R(_062_),
    .S(1'b0)
  );
  DFFSR _371_ (
    .C(clockS32),
    .D(_000_[12]),
    .Q(counterBC[12]),
    .R(_063_),
    .S(1'b0)
  );
  DFFSR _372_ (
    .C(clockS32),
    .D(_000_[13]),
    .Q(counterBC[13]),
    .R(_065_),
    .S(1'b0)
  );
  DFFSR _373_ (
    .C(clockS32),
    .D(_000_[14]),
    .Q(counterBC[14]),
    .R(_067_),
    .S(1'b0)
  );
  DFFSR _374_ (
    .C(clockS32),
    .D(_000_[15]),
    .Q(counterBC[15]),
    .R(_069_),
    .S(1'b0)
  );
  DFFSR _375_ (
    .C(clockS32),
    .D(_003_[0]),
    .Q(select[0]),
    .R(_071_),
    .S(1'b0)
  );
  DFFSR _376_ (
    .C(clockS32),
    .D(_003_[1]),
    .Q(select[1]),
    .R(_072_),
    .S(1'b0)
  );
  DFFSR _377_ (
    .C(clockS32),
    .D(_003_[2]),
    .Q(select[2]),
    .R(_074_),
    .S(1'b0)
  );
  DFFSR _378_ (
    .C(clockS32),
    .D(_001_[0]),
    .Q(data2sent[0]),
    .R(_076_),
    .S(1'b0)
  );
  DFFSR _379_ (
    .C(clockS32),
    .D(_001_[1]),
    .Q(data2sent[1]),
    .R(_078_),
    .S(1'b0)
  );
  DFFSR _380_ (
    .C(clockS32),
    .D(_001_[2]),
    .Q(data2sent[2]),
    .R(_080_),
    .S(1'b0)
  );
  DFFSR _381_ (
    .C(clockS32),
    .D(_001_[3]),
    .Q(data2sent[3]),
    .R(_082_),
    .S(1'b0)
  );
  DFFSR _382_ (
    .C(clockS32),
    .D(_001_[4]),
    .Q(data2sent[4]),
    .R(_084_),
    .S(1'b0)
  );
  DFFSR _383_ (
    .C(clockS32),
    .D(_001_[5]),
    .Q(data2sent[5]),
    .R(_086_),
    .S(1'b0)
  );
  DFFSR _384_ (
    .C(clockS32),
    .D(_001_[6]),
    .Q(data2sent[6]),
    .R(_088_),
    .S(1'b0)
  );
  DFFSR _385_ (
    .C(clockS32),
    .D(_001_[7]),
    .Q(data2sent[7]),
    .R(_004_),
    .S(1'b0)
  );
endmodule

(* top =  1  *)
(* src = "phyS.v:9" *)
module phyS(clockS32, reset_L, data_in, valid, data_out, v4, clockS1, clockS2, clockS4);
  (* src = "phyS.v:17" *)
  output clockS1;
  (* src = "phyS.v:17" *)
  output clockS2;
  (* src = "phyS.v:10" *)
  input clockS32;
  (* src = "phyS.v:17" *)
  output clockS4;
  (* src = "phyS.v:12" *)
  input [31:0] data_in;
  (* src = "phyS.v:15" *)
  output [31:0] data_out;
  (* src = "phyS.v:25" *)
  wire data_out0;
  (* src = "phyS.v:25" *)
  wire data_out1;
  (* src = "phyS.v:11" *)
  input reset_L;
  (* src = "phyS.v:16" *)
  output v4;
  (* src = "phyS.v:13" *)
  input valid;
  (* src = "phyS.v:53" *)
  phyS_rx RX (
    .clockS1(clockS1),
    .clockS2(clockS2),
    .clockS32(clockS32),
    .clockS4(clockS4),
    .data_out(data_out),
    .data_out0(data_out0),
    .data_out1(data_out1),
    .reset_L(reset_L),
    .v4(v4)
  );
  (* src = "phyS.v:39" *)
  phyS_tx TX (
    .clockS1(clockS1),
    .clockS2(clockS2),
    .clockS32(clockS32),
    .clockS4(clockS4),
    .data_in(data_in),
    .data_out0(data_out0),
    .data_out1(data_out1),
    .reset_L(reset_L),
    .valid(valid)
  );
  (* src = "phyS.v:29" *)
  clockS clk0 (
    .clockS1(clockS1),
    .clockS2(clockS2),
    .clockS32(clockS32),
    .clockS4(clockS4),
    .reset_L(reset_L)
  );
endmodule

(* src = "phyS_rx.v:9" *)
module phyS_rx(reset_L, clockS1, clockS2, clockS4, clockS32, data_out1, data_out0, data_out, v4);
  (* src = "phyS_rx.v:11" *)
  input clockS1;
  (* src = "phyS_rx.v:12" *)
  input clockS2;
  (* src = "phyS_rx.v:14" *)
  input clockS32;
  (* src = "phyS_rx.v:13" *)
  input clockS4;
  (* src = "phyS_rx.v:25" *)
  output [31:0] data_out;
  (* src = "phyS_rx.v:20" *)
  input data_out0;
  (* src = "phyS_rx.v:15" *)
  input data_out1;
  (* src = "phyS_rx.v:33" *)
  wire reset1;
  (* src = "phyS_rx.v:33" *)
  wire reset2;
  (* src = "phyS_rx.v:10" *)
  input reset_L;
  (* src = "phyS_rx.v:30" *)
  wire [31:0] ulane0;
  (* src = "phyS_rx.v:30" *)
  wire [31:0] ulane1;
  (* src = "phyS_rx.v:32" *)
  wire v0;
  (* src = "phyS_rx.v:32" *)
  wire v1;
  (* src = "phyS_rx.v:32" *)
  wire v2;
  (* src = "phyS_rx.v:32" *)
  wire v3;
  (* src = "phyS_rx.v:27" *)
  output v4;
  (* src = "phyS_rx.v:31" *)
  wire [7:0] w0;
  (* src = "phyS_rx.v:31" *)
  wire [7:0] w1;
  DFF _0_ (
    .C(clockS32),
    .D(reset_L),
    .Q(reset1)
  );
  DFF _1_ (
    .C(clockS32),
    .D(reset1),
    .Q(reset2)
  );
  (* src = "phyS_rx.v:65" *)
  c8b_32bS Linea0_8b_32 (
    .clockS1(clockS1),
    .clockS4(clockS4),
    .data_in(w0),
    .data_out(ulane0),
    .reset_L(reset_L),
    .valid(v0),
    .valid_out(v2)
  );
  (* src = "phyS_rx.v:74" *)
  c8b_32bS2 Linea1_8b_32 (
    .clockS1(clockS1),
    .clockS4(clockS4),
    .data_in(w1),
    .data_out(ulane1),
    .reset_L(reset_L),
    .valid(v1),
    .valid_out(v3)
  );
  (* src = "phyS_rx.v:45" *)
  serial_paraleloS1 serie_paralelo_linea0 (
    .clockS32(clockS32),
    .clockS4(clockS4),
    .data_in(data_out0),
    .data_out(w0),
    .reset_L(reset_L),
    .valid_out(v0)
  );
  (* src = "phyS_rx.v:55" *)
  serial_paraleloS2 serie_paralelo_linea1 (
    .clockS32(clockS32),
    .clockS4(clockS4),
    .data_in(data_out1),
    .data_out(w1),
    .reset_L(reset_L),
    .valid_out(v1)
  );
  (* src = "phyS_rx.v:83" *)
  un_byte_stripingS unbyte_strippingS (
    .clk_2f(clockS2),
    .clk_f(clockS1),
    .data_out(data_out),
    .lane_0(ulane0),
    .lane_1(ulane1),
    .reset_L(reset2),
    .valid_0(v2),
    .valid_1(v3),
    .valid_out(v4)
  );
endmodule

(* src = "phyS_tx.v:7" *)
module phyS_tx(data_in, valid, reset_L, clockS1, clockS2, clockS4, clockS32, data_out1, data_out0);
  (* src = "phyS_tx.v:10" *)
  input clockS1;
  (* src = "phyS_tx.v:11" *)
  input clockS2;
  (* src = "phyS_tx.v:13" *)
  input clockS32;
  (* src = "phyS_tx.v:12" *)
  input clockS4;
  (* src = "phyS_tx.v:29" *)
  (* unused_bits = "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15" *)
  wire [15:0] counterBC1;
  (* src = "phyS_tx.v:29" *)
  (* unused_bits = "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15" *)
  wire [15:0] counterBC2;
  (* src = "phyS_tx.v:70" *)
  (* unused_bits = "0" *)
  wire data2sent0;
  (* src = "phyS_tx.v:80" *)
  (* unused_bits = "0" *)
  wire data2sent1;
  (* src = "phyS_tx.v:7" *)
  input [31:0] data_in;
  (* src = "phyS_tx.v:18" *)
  output data_out0;
  (* src = "phyS_tx.v:14" *)
  output data_out1;
  (* src = "phyS_tx.v:27" *)
  wire [31:0] lane_0;
  (* src = "phyS_tx.v:27" *)
  wire [31:0] lane_1;
  (* src = "phyS_tx.v:28" *)
  wire [7:0] lane_2;
  (* src = "phyS_tx.v:28" *)
  wire [7:0] lane_3;
  (* src = "phyS_tx.v:9" *)
  input reset_L;
  (* src = "phyS_tx.v:8" *)
  input valid;
  (* src = "phyS_tx.v:26" *)
  wire valid0;
  (* src = "phyS_tx.v:26" *)
  wire valid1;
  (* src = "phyS_tx.v:26" *)
  wire valid2;
  (* src = "phyS_tx.v:26" *)
  wire valid3;
  (* src = "phyS_tx.v:34" *)
  byte_strippingS byte_strippingS (
    .clockS1(clockS1),
    .clockS2(clockS2),
    .clockS4(clockS4),
    .data_in(data_in),
    .lane_0(lane_0),
    .lane_1(lane_1),
    .reset_L(reset_L),
    .valid(valid),
    .valid0(valid0),
    .valid1(valid1)
  );
  (* src = "phyS_tx.v:48" *)
  c32b_8bS linea0_32_8 (
    .clockS1(clockS1),
    .clockS4(clockS4),
    .data_in(lane_0),
    .data_out(lane_2),
    .reset_L(reset_L),
    .valid_in(valid0),
    .valid_out(valid2)
  );
  (* src = "phyS_tx.v:57" *)
  c32b_8bS0S linea1_32_8 (
    .clockS1(clockS1),
    .clockS4(clockS4),
    .data_in(lane_1),
    .data_out(lane_3),
    .reset_L(reset_L),
    .valid_in(valid1),
    .valid_out(valid3)
  );
  (* src = "phyS_tx.v:67" *)
  paralelo_serieS paralelo_serieS_linea0 (
    .clockS32(clockS32),
    .clockS4(clockS4),
    .counterBC(counterBC1),
    .data2sent(data2sent0),
    .data_in(lane_2),
    .data_out(data_out0),
    .reset_L(reset_L),
    .valid(valid2)
  );
  (* src = "phyS_tx.v:78" *)
  paralelo_serieS paralelo_serieS_linea1 (
    .clockS32(clockS32),
    .clockS4(clockS4),
    .counterBC(counterBC2),
    .data2sent(data2sent1),
    .data_in(lane_3),
    .data_out(data_out1),
    .reset_L(reset_L),
    .valid(valid3)
  );
endmodule

(* src = "serial_paraleloS1.v:1" *)
module serial_paraleloS1(data_in, clockS32, clockS4, reset_L, data_out, valid_out);
  (* src = "serial_paraleloS1.v:10" *)
  wire _000_;
  (* src = "serial_paraleloS1.v:10" *)
  wire [7:0] _001_;
  (* src = "serial_paraleloS1.v:10" *)
  wire _002_;
  (* src = "serial_paraleloS1.v:10" *)
  wire [1:0] _003_;
  (* src = "serial_paraleloS1.v:10" *)
  wire [2:0] _004_;
  (* src = "serial_paraleloS1.v:10" *)
  wire [7:0] _005_;
  (* src = "serial_paraleloS1.v:10" *)
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  (* src = "serial_paraleloS1.v:9" *)
  wire active;
  (* src = "serial_paraleloS1.v:6" *)
  wire [7:0] bus;
  (* src = "serial_paraleloS1.v:2" *)
  input clockS32;
  (* src = "serial_paraleloS1.v:2" *)
  input clockS4;
  (* src = "serial_paraleloS1.v:7" *)
  wire [2:0] counter;
  (* src = "serial_paraleloS1.v:9" *)
  wire counter0;
  (* src = "serial_paraleloS1.v:8" *)
  wire [1:0] counterBC;
  (* src = "serial_paraleloS1.v:2" *)
  input data_in;
  (* src = "serial_paraleloS1.v:3" *)
  output [7:0] data_out;
  (* src = "serial_paraleloS1.v:2" *)
  input reset_L;
  (* src = "serial_paraleloS1.v:4" *)
  output valid_out;
  NOT _130_ (
    .A(counter[2]),
    .Y(_087_)
  );
  NOT _131_ (
    .A(counter[0]),
    .Y(_088_)
  );
  NAND _132_ (
    .A(counter[1]),
    .B(_088_),
    .Y(_089_)
  );
  NOR _133_ (
    .A(_089_),
    .B(_087_),
    .Y(_090_)
  );
  NOR _134_ (
    .A(_090_),
    .B(bus[1]),
    .Y(_091_)
  );
  NOT _135_ (
    .A(data_in),
    .Y(_092_)
  );
  NAND _136_ (
    .A(_090_),
    .B(_092_),
    .Y(_093_)
  );
  NAND _137_ (
    .A(_093_),
    .B(reset_L),
    .Y(_094_)
  );
  NOR _138_ (
    .A(_094_),
    .B(_091_),
    .Y(_001_[1])
  );
  NOT _139_ (
    .A(counter[1]),
    .Y(_095_)
  );
  NOR _140_ (
    .A(_095_),
    .B(_088_),
    .Y(_096_)
  );
  NAND _141_ (
    .A(_096_),
    .B(counter[2]),
    .Y(_097_)
  );
  NOR _142_ (
    .A(_097_),
    .B(data_in),
    .Y(_098_)
  );
  NOT _143_ (
    .A(bus[0]),
    .Y(_099_)
  );
  NAND _144_ (
    .A(_097_),
    .B(_099_),
    .Y(_100_)
  );
  NAND _145_ (
    .A(_100_),
    .B(reset_L),
    .Y(_101_)
  );
  NOR _146_ (
    .A(_101_),
    .B(_098_),
    .Y(_001_[0])
  );
  NAND _147_ (
    .A(_095_),
    .B(counter[0]),
    .Y(_102_)
  );
  NOR _148_ (
    .A(_102_),
    .B(_087_),
    .Y(_103_)
  );
  NAND _149_ (
    .A(_103_),
    .B(data_in),
    .Y(_104_)
  );
  NOT _150_ (
    .A(reset_L),
    .Y(_105_)
  );
  NOT _151_ (
    .A(bus[2]),
    .Y(_106_)
  );
  NOR _152_ (
    .A(_103_),
    .B(_106_),
    .Y(_107_)
  );
  NOR _153_ (
    .A(_107_),
    .B(_105_),
    .Y(_108_)
  );
  NAND _154_ (
    .A(_108_),
    .B(_104_),
    .Y(_001_[2])
  );
  NOR _155_ (
    .A(counter[1]),
    .B(counter[0]),
    .Y(_109_)
  );
  NAND _156_ (
    .A(_109_),
    .B(counter[2]),
    .Y(_110_)
  );
  NAND _157_ (
    .A(_110_),
    .B(bus[3]),
    .Y(_111_)
  );
  NOR _158_ (
    .A(_110_),
    .B(_092_),
    .Y(_112_)
  );
  NOR _159_ (
    .A(_112_),
    .B(_105_),
    .Y(_113_)
  );
  NAND _160_ (
    .A(_113_),
    .B(_111_),
    .Y(_001_[3])
  );
  NOT _161_ (
    .A(_096_),
    .Y(_114_)
  );
  NOR _162_ (
    .A(_114_),
    .B(counter[2]),
    .Y(_115_)
  );
  NAND _163_ (
    .A(_115_),
    .B(_092_),
    .Y(_116_)
  );
  NOT _164_ (
    .A(bus[4]),
    .Y(_117_)
  );
  NOT _165_ (
    .A(_115_),
    .Y(_118_)
  );
  NAND _166_ (
    .A(_118_),
    .B(_117_),
    .Y(_119_)
  );
  NAND _167_ (
    .A(_119_),
    .B(_116_),
    .Y(_120_)
  );
  NAND _168_ (
    .A(_120_),
    .B(reset_L),
    .Y(_001_[4])
  );
  NOR _169_ (
    .A(_089_),
    .B(counter[2]),
    .Y(_121_)
  );
  NAND _170_ (
    .A(_121_),
    .B(data_in),
    .Y(_122_)
  );
  NOT _171_ (
    .A(bus[5]),
    .Y(_123_)
  );
  NOR _172_ (
    .A(_121_),
    .B(_123_),
    .Y(_124_)
  );
  NOR _173_ (
    .A(_124_),
    .B(_105_),
    .Y(_125_)
  );
  NAND _174_ (
    .A(_125_),
    .B(_122_),
    .Y(_001_[5])
  );
  NOR _175_ (
    .A(_102_),
    .B(counter[2]),
    .Y(_126_)
  );
  NOR _176_ (
    .A(_126_),
    .B(bus[6]),
    .Y(_127_)
  );
  NAND _177_ (
    .A(_126_),
    .B(_092_),
    .Y(_128_)
  );
  NAND _178_ (
    .A(_128_),
    .B(reset_L),
    .Y(_129_)
  );
  NOR _179_ (
    .A(_129_),
    .B(_127_),
    .Y(_001_[6])
  );
  NOT _180_ (
    .A(bus[7]),
    .Y(_007_)
  );
  NAND _181_ (
    .A(_109_),
    .B(_087_),
    .Y(_008_)
  );
  NAND _182_ (
    .A(_008_),
    .B(_007_),
    .Y(_009_)
  );
  NOT _183_ (
    .A(_008_),
    .Y(_010_)
  );
  NAND _184_ (
    .A(_010_),
    .B(_092_),
    .Y(_011_)
  );
  NAND _185_ (
    .A(_011_),
    .B(_009_),
    .Y(_012_)
  );
  NAND _186_ (
    .A(_012_),
    .B(reset_L),
    .Y(_001_[7])
  );
  NOT _187_ (
    .A(counterBC[0]),
    .Y(_013_)
  );
  NOT _188_ (
    .A(bus[3]),
    .Y(_014_)
  );
  NOR _189_ (
    .A(_117_),
    .B(_014_),
    .Y(_015_)
  );
  NOR _190_ (
    .A(_007_),
    .B(_123_),
    .Y(_016_)
  );
  NAND _191_ (
    .A(_016_),
    .B(_015_),
    .Y(_017_)
  );
  NOR _192_ (
    .A(bus[1]),
    .B(bus[0]),
    .Y(_018_)
  );
  NOR _193_ (
    .A(_106_),
    .B(bus[6]),
    .Y(_019_)
  );
  NAND _194_ (
    .A(_019_),
    .B(_018_),
    .Y(_020_)
  );
  NOR _195_ (
    .A(_020_),
    .B(_017_),
    .Y(_021_)
  );
  NAND _196_ (
    .A(_021_),
    .B(counter0),
    .Y(_022_)
  );
  NOR _197_ (
    .A(_022_),
    .B(_013_),
    .Y(_023_)
  );
  NAND _198_ (
    .A(_022_),
    .B(_013_),
    .Y(_024_)
  );
  NAND _199_ (
    .A(_024_),
    .B(reset_L),
    .Y(_025_)
  );
  NOR _200_ (
    .A(_025_),
    .B(_023_),
    .Y(_003_[0])
  );
  NAND _201_ (
    .A(_023_),
    .B(counterBC[1]),
    .Y(_026_)
  );
  NOT _202_ (
    .A(counterBC[1]),
    .Y(_027_)
  );
  NOT _203_ (
    .A(counter0),
    .Y(_028_)
  );
  NAND _204_ (
    .A(bus[4]),
    .B(bus[3]),
    .Y(_029_)
  );
  NAND _205_ (
    .A(bus[7]),
    .B(bus[5]),
    .Y(_030_)
  );
  NOR _206_ (
    .A(_030_),
    .B(_029_),
    .Y(_031_)
  );
  NOT _207_ (
    .A(bus[1]),
    .Y(_032_)
  );
  NAND _208_ (
    .A(_032_),
    .B(_099_),
    .Y(_033_)
  );
  NOT _209_ (
    .A(bus[6]),
    .Y(_034_)
  );
  NAND _210_ (
    .A(bus[2]),
    .B(_034_),
    .Y(_035_)
  );
  NOR _211_ (
    .A(_035_),
    .B(_033_),
    .Y(_036_)
  );
  NAND _212_ (
    .A(_036_),
    .B(_031_),
    .Y(_037_)
  );
  NOR _213_ (
    .A(_037_),
    .B(_028_),
    .Y(_038_)
  );
  NAND _214_ (
    .A(_038_),
    .B(counterBC[0]),
    .Y(_039_)
  );
  NAND _215_ (
    .A(_039_),
    .B(_027_),
    .Y(_040_)
  );
  NAND _216_ (
    .A(_040_),
    .B(_026_),
    .Y(_041_)
  );
  NOR _217_ (
    .A(_041_),
    .B(_105_),
    .Y(_003_[1])
  );
  NAND _218_ (
    .A(reset_L),
    .B(counter[0]),
    .Y(_004_[0])
  );
  NOT _219_ (
    .A(_089_),
    .Y(_042_)
  );
  NOR _220_ (
    .A(_042_),
    .B(_105_),
    .Y(_043_)
  );
  NAND _221_ (
    .A(_043_),
    .B(_102_),
    .Y(_004_[1])
  );
  NAND _222_ (
    .A(_114_),
    .B(counter[2]),
    .Y(_044_)
  );
  NOR _223_ (
    .A(_115_),
    .B(_105_),
    .Y(_045_)
  );
  NAND _224_ (
    .A(_045_),
    .B(_044_),
    .Y(_004_[2])
  );
  NAND _225_ (
    .A(_027_),
    .B(_013_),
    .Y(_046_)
  );
  NAND _226_ (
    .A(_037_),
    .B(reset_L),
    .Y(_047_)
  );
  NOR _227_ (
    .A(_047_),
    .B(_046_),
    .Y(_000_)
  );
  NAND _228_ (
    .A(active),
    .B(counter0),
    .Y(_048_)
  );
  NOT _229_ (
    .A(_048_),
    .Y(_049_)
  );
  NOR _230_ (
    .A(_049_),
    .B(valid_out),
    .Y(_050_)
  );
  NAND _231_ (
    .A(_046_),
    .B(active),
    .Y(_051_)
  );
  NAND _232_ (
    .A(_051_),
    .B(_038_),
    .Y(_052_)
  );
  NAND _233_ (
    .A(_052_),
    .B(reset_L),
    .Y(_053_)
  );
  NOR _234_ (
    .A(_053_),
    .B(_050_),
    .Y(_006_)
  );
  NAND _235_ (
    .A(_049_),
    .B(_099_),
    .Y(_054_)
  );
  NOT _236_ (
    .A(data_out[0]),
    .Y(_055_)
  );
  NAND _237_ (
    .A(_048_),
    .B(_055_),
    .Y(_056_)
  );
  NAND _238_ (
    .A(_056_),
    .B(_054_),
    .Y(_057_)
  );
  NOR _239_ (
    .A(_057_),
    .B(_053_),
    .Y(_005_[0])
  );
  NAND _240_ (
    .A(_049_),
    .B(_032_),
    .Y(_058_)
  );
  NOT _241_ (
    .A(data_out[1]),
    .Y(_059_)
  );
  NAND _242_ (
    .A(_048_),
    .B(_059_),
    .Y(_060_)
  );
  NAND _243_ (
    .A(_060_),
    .B(_058_),
    .Y(_061_)
  );
  NOR _244_ (
    .A(_061_),
    .B(_053_),
    .Y(_005_[1])
  );
  NAND _245_ (
    .A(_049_),
    .B(_106_),
    .Y(_062_)
  );
  NOT _246_ (
    .A(data_out[2]),
    .Y(_063_)
  );
  NAND _247_ (
    .A(_048_),
    .B(_063_),
    .Y(_064_)
  );
  NAND _248_ (
    .A(_064_),
    .B(_062_),
    .Y(_065_)
  );
  NOR _249_ (
    .A(_065_),
    .B(_053_),
    .Y(_005_[2])
  );
  NAND _250_ (
    .A(_049_),
    .B(_014_),
    .Y(_066_)
  );
  NOT _251_ (
    .A(data_out[3]),
    .Y(_067_)
  );
  NAND _252_ (
    .A(_048_),
    .B(_067_),
    .Y(_068_)
  );
  NAND _253_ (
    .A(_068_),
    .B(_066_),
    .Y(_069_)
  );
  NOR _254_ (
    .A(_069_),
    .B(_053_),
    .Y(_005_[3])
  );
  NAND _255_ (
    .A(_049_),
    .B(_117_),
    .Y(_070_)
  );
  NOT _256_ (
    .A(data_out[4]),
    .Y(_071_)
  );
  NAND _257_ (
    .A(_048_),
    .B(_071_),
    .Y(_072_)
  );
  NAND _258_ (
    .A(_072_),
    .B(_070_),
    .Y(_073_)
  );
  NOR _259_ (
    .A(_073_),
    .B(_053_),
    .Y(_005_[4])
  );
  NAND _260_ (
    .A(_049_),
    .B(_123_),
    .Y(_074_)
  );
  NOT _261_ (
    .A(data_out[5]),
    .Y(_075_)
  );
  NAND _262_ (
    .A(_048_),
    .B(_075_),
    .Y(_076_)
  );
  NAND _263_ (
    .A(_076_),
    .B(_074_),
    .Y(_077_)
  );
  NOR _264_ (
    .A(_077_),
    .B(_053_),
    .Y(_005_[5])
  );
  NAND _265_ (
    .A(_049_),
    .B(_034_),
    .Y(_078_)
  );
  NOT _266_ (
    .A(data_out[6]),
    .Y(_079_)
  );
  NAND _267_ (
    .A(_048_),
    .B(_079_),
    .Y(_080_)
  );
  NAND _268_ (
    .A(_080_),
    .B(_078_),
    .Y(_081_)
  );
  NOR _269_ (
    .A(_081_),
    .B(_053_),
    .Y(_005_[6])
  );
  NAND _270_ (
    .A(_049_),
    .B(_007_),
    .Y(_082_)
  );
  NOT _271_ (
    .A(data_out[7]),
    .Y(_083_)
  );
  NAND _272_ (
    .A(_048_),
    .B(_083_),
    .Y(_084_)
  );
  NAND _273_ (
    .A(_084_),
    .B(_082_),
    .Y(_085_)
  );
  NOR _274_ (
    .A(_085_),
    .B(_053_),
    .Y(_005_[7])
  );
  NAND _275_ (
    .A(_028_),
    .B(reset_L),
    .Y(_086_)
  );
  NOR _276_ (
    .A(_086_),
    .B(_008_),
    .Y(_002_)
  );
  DFF _277_ (
    .C(clockS32),
    .D(_002_),
    .Q(counter0)
  );
  DFF _278_ (
    .C(clockS32),
    .D(_005_[0]),
    .Q(data_out[0])
  );
  DFF _279_ (
    .C(clockS32),
    .D(_005_[1]),
    .Q(data_out[1])
  );
  DFF _280_ (
    .C(clockS32),
    .D(_005_[2]),
    .Q(data_out[2])
  );
  DFF _281_ (
    .C(clockS32),
    .D(_005_[3]),
    .Q(data_out[3])
  );
  DFF _282_ (
    .C(clockS32),
    .D(_005_[4]),
    .Q(data_out[4])
  );
  DFF _283_ (
    .C(clockS32),
    .D(_005_[5]),
    .Q(data_out[5])
  );
  DFF _284_ (
    .C(clockS32),
    .D(_005_[6]),
    .Q(data_out[6])
  );
  DFF _285_ (
    .C(clockS32),
    .D(_005_[7]),
    .Q(data_out[7])
  );
  DFF _286_ (
    .C(clockS32),
    .D(_006_),
    .Q(valid_out)
  );
  DFF _287_ (
    .C(clockS32),
    .D(_001_[0]),
    .Q(bus[0])
  );
  DFF _288_ (
    .C(clockS32),
    .D(_001_[1]),
    .Q(bus[1])
  );
  DFF _289_ (
    .C(clockS32),
    .D(_001_[2]),
    .Q(bus[2])
  );
  DFF _290_ (
    .C(clockS32),
    .D(_001_[3]),
    .Q(bus[3])
  );
  DFF _291_ (
    .C(clockS32),
    .D(_001_[4]),
    .Q(bus[4])
  );
  DFF _292_ (
    .C(clockS32),
    .D(_001_[5]),
    .Q(bus[5])
  );
  DFF _293_ (
    .C(clockS32),
    .D(_001_[6]),
    .Q(bus[6])
  );
  DFF _294_ (
    .C(clockS32),
    .D(_001_[7]),
    .Q(bus[7])
  );
  DFF _295_ (
    .C(clockS32),
    .D(_004_[0]),
    .Q(counter[0])
  );
  DFF _296_ (
    .C(clockS32),
    .D(_004_[1]),
    .Q(counter[1])
  );
  DFF _297_ (
    .C(clockS32),
    .D(_004_[2]),
    .Q(counter[2])
  );
  DFF _298_ (
    .C(clockS32),
    .D(_003_[0]),
    .Q(counterBC[0])
  );
  DFF _299_ (
    .C(clockS32),
    .D(_003_[1]),
    .Q(counterBC[1])
  );
  DFF _300_ (
    .C(clockS32),
    .D(_000_),
    .Q(active)
  );
endmodule

(* src = "serial_paraleloS2.v:1" *)
module serial_paraleloS2(data_in, clockS32, clockS4, reset_L, data_out, valid_out);
  (* src = "serial_paraleloS2.v:10" *)
  wire _000_;
  (* src = "serial_paraleloS2.v:10" *)
  wire [7:0] _001_;
  (* src = "serial_paraleloS2.v:10" *)
  wire _002_;
  (* src = "serial_paraleloS2.v:10" *)
  wire [1:0] _003_;
  (* src = "serial_paraleloS2.v:10" *)
  wire [2:0] _004_;
  (* src = "serial_paraleloS2.v:10" *)
  wire [7:0] _005_;
  (* src = "serial_paraleloS2.v:10" *)
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  (* src = "serial_paraleloS2.v:9" *)
  wire active;
  (* src = "serial_paraleloS2.v:6" *)
  wire [7:0] bus;
  (* src = "serial_paraleloS2.v:2" *)
  input clockS32;
  (* src = "serial_paraleloS2.v:2" *)
  input clockS4;
  (* src = "serial_paraleloS2.v:7" *)
  wire [2:0] counter;
  (* src = "serial_paraleloS2.v:9" *)
  wire counter0;
  (* src = "serial_paraleloS2.v:8" *)
  wire [1:0] counterBC;
  (* src = "serial_paraleloS2.v:2" *)
  input data_in;
  (* src = "serial_paraleloS2.v:3" *)
  output [7:0] data_out;
  (* src = "serial_paraleloS2.v:2" *)
  input reset_L;
  (* src = "serial_paraleloS2.v:4" *)
  output valid_out;
  NOT _116_ (
    .A(counter[2]),
    .Y(_073_)
  );
  NOT _117_ (
    .A(counter[0]),
    .Y(_074_)
  );
  NAND _118_ (
    .A(counter[1]),
    .B(_074_),
    .Y(_075_)
  );
  NOR _119_ (
    .A(_075_),
    .B(_073_),
    .Y(_076_)
  );
  NOR _120_ (
    .A(_076_),
    .B(bus[1]),
    .Y(_077_)
  );
  NOT _121_ (
    .A(data_in),
    .Y(_078_)
  );
  NAND _122_ (
    .A(_076_),
    .B(_078_),
    .Y(_079_)
  );
  NAND _123_ (
    .A(_079_),
    .B(reset_L),
    .Y(_080_)
  );
  NOR _124_ (
    .A(_080_),
    .B(_077_),
    .Y(_001_[1])
  );
  NOT _125_ (
    .A(counter[1]),
    .Y(_081_)
  );
  NOR _126_ (
    .A(_081_),
    .B(_074_),
    .Y(_082_)
  );
  NAND _127_ (
    .A(_082_),
    .B(counter[2]),
    .Y(_083_)
  );
  NOR _128_ (
    .A(_083_),
    .B(data_in),
    .Y(_084_)
  );
  NOT _129_ (
    .A(bus[0]),
    .Y(_085_)
  );
  NAND _130_ (
    .A(_083_),
    .B(_085_),
    .Y(_086_)
  );
  NAND _131_ (
    .A(_086_),
    .B(reset_L),
    .Y(_087_)
  );
  NOR _132_ (
    .A(_087_),
    .B(_084_),
    .Y(_001_[0])
  );
  NAND _133_ (
    .A(_081_),
    .B(counter[0]),
    .Y(_088_)
  );
  NOR _134_ (
    .A(_088_),
    .B(_073_),
    .Y(_089_)
  );
  NAND _135_ (
    .A(_089_),
    .B(data_in),
    .Y(_090_)
  );
  NOT _136_ (
    .A(reset_L),
    .Y(_091_)
  );
  NOT _137_ (
    .A(bus[2]),
    .Y(_092_)
  );
  NOR _138_ (
    .A(_089_),
    .B(_092_),
    .Y(_093_)
  );
  NOR _139_ (
    .A(_093_),
    .B(_091_),
    .Y(_094_)
  );
  NAND _140_ (
    .A(_094_),
    .B(_090_),
    .Y(_001_[2])
  );
  NOR _141_ (
    .A(counter[1]),
    .B(counter[0]),
    .Y(_095_)
  );
  NAND _142_ (
    .A(_095_),
    .B(counter[2]),
    .Y(_096_)
  );
  NAND _143_ (
    .A(_096_),
    .B(bus[3]),
    .Y(_097_)
  );
  NOR _144_ (
    .A(_096_),
    .B(_078_),
    .Y(_098_)
  );
  NOR _145_ (
    .A(_098_),
    .B(_091_),
    .Y(_099_)
  );
  NAND _146_ (
    .A(_099_),
    .B(_097_),
    .Y(_001_[3])
  );
  NOT _147_ (
    .A(_082_),
    .Y(_100_)
  );
  NOR _148_ (
    .A(_100_),
    .B(counter[2]),
    .Y(_101_)
  );
  NAND _149_ (
    .A(_101_),
    .B(_078_),
    .Y(_102_)
  );
  NOT _150_ (
    .A(bus[4]),
    .Y(_103_)
  );
  NOT _151_ (
    .A(_101_),
    .Y(_104_)
  );
  NAND _152_ (
    .A(_104_),
    .B(_103_),
    .Y(_105_)
  );
  NAND _153_ (
    .A(_105_),
    .B(_102_),
    .Y(_106_)
  );
  NAND _154_ (
    .A(_106_),
    .B(reset_L),
    .Y(_001_[4])
  );
  NOR _155_ (
    .A(_075_),
    .B(counter[2]),
    .Y(_107_)
  );
  NAND _156_ (
    .A(_107_),
    .B(data_in),
    .Y(_108_)
  );
  NOT _157_ (
    .A(bus[5]),
    .Y(_109_)
  );
  NOR _158_ (
    .A(_107_),
    .B(_109_),
    .Y(_110_)
  );
  NOR _159_ (
    .A(_110_),
    .B(_091_),
    .Y(_111_)
  );
  NAND _160_ (
    .A(_111_),
    .B(_108_),
    .Y(_001_[5])
  );
  NOR _161_ (
    .A(_088_),
    .B(counter[2]),
    .Y(_112_)
  );
  NOR _162_ (
    .A(_112_),
    .B(bus[6]),
    .Y(_113_)
  );
  NAND _163_ (
    .A(_112_),
    .B(_078_),
    .Y(_114_)
  );
  NAND _164_ (
    .A(_114_),
    .B(reset_L),
    .Y(_115_)
  );
  NOR _165_ (
    .A(_115_),
    .B(_113_),
    .Y(_001_[6])
  );
  NOT _166_ (
    .A(bus[7]),
    .Y(_007_)
  );
  NAND _167_ (
    .A(_095_),
    .B(_073_),
    .Y(_008_)
  );
  NAND _168_ (
    .A(_008_),
    .B(_007_),
    .Y(_009_)
  );
  NOT _169_ (
    .A(_008_),
    .Y(_010_)
  );
  NAND _170_ (
    .A(_010_),
    .B(_078_),
    .Y(_011_)
  );
  NAND _171_ (
    .A(_011_),
    .B(_009_),
    .Y(_012_)
  );
  NAND _172_ (
    .A(_012_),
    .B(reset_L),
    .Y(_001_[7])
  );
  NOT _173_ (
    .A(counterBC[0]),
    .Y(_013_)
  );
  NOT _174_ (
    .A(bus[3]),
    .Y(_014_)
  );
  NOR _175_ (
    .A(_103_),
    .B(_014_),
    .Y(_015_)
  );
  NOR _176_ (
    .A(_007_),
    .B(_109_),
    .Y(_016_)
  );
  NAND _177_ (
    .A(_016_),
    .B(_015_),
    .Y(_017_)
  );
  NOR _178_ (
    .A(bus[6]),
    .B(bus[1]),
    .Y(_018_)
  );
  NOR _179_ (
    .A(_092_),
    .B(bus[0]),
    .Y(_019_)
  );
  NAND _180_ (
    .A(_019_),
    .B(_018_),
    .Y(_020_)
  );
  NOR _181_ (
    .A(_020_),
    .B(_017_),
    .Y(_021_)
  );
  NAND _182_ (
    .A(_021_),
    .B(counter0),
    .Y(_022_)
  );
  NOR _183_ (
    .A(_022_),
    .B(_013_),
    .Y(_023_)
  );
  NAND _184_ (
    .A(_022_),
    .B(_013_),
    .Y(_024_)
  );
  NAND _185_ (
    .A(_024_),
    .B(reset_L),
    .Y(_025_)
  );
  NOR _186_ (
    .A(_025_),
    .B(_023_),
    .Y(_003_[0])
  );
  NOT _187_ (
    .A(counterBC[1]),
    .Y(_026_)
  );
  NAND _188_ (
    .A(_023_),
    .B(_026_),
    .Y(_027_)
  );
  NOR _189_ (
    .A(_023_),
    .B(_026_),
    .Y(_028_)
  );
  NOR _190_ (
    .A(_028_),
    .B(_091_),
    .Y(_029_)
  );
  NAND _191_ (
    .A(_029_),
    .B(_027_),
    .Y(_003_[1])
  );
  NAND _192_ (
    .A(reset_L),
    .B(counter[0]),
    .Y(_004_[0])
  );
  NOT _193_ (
    .A(_075_),
    .Y(_030_)
  );
  NOR _194_ (
    .A(_030_),
    .B(_091_),
    .Y(_031_)
  );
  NAND _195_ (
    .A(_031_),
    .B(_088_),
    .Y(_004_[1])
  );
  NAND _196_ (
    .A(_100_),
    .B(counter[2]),
    .Y(_032_)
  );
  NOR _197_ (
    .A(_101_),
    .B(_091_),
    .Y(_033_)
  );
  NAND _198_ (
    .A(_033_),
    .B(_032_),
    .Y(_004_[2])
  );
  NOR _199_ (
    .A(counterBC[1]),
    .B(counterBC[0]),
    .Y(_034_)
  );
  NAND _200_ (
    .A(_034_),
    .B(reset_L),
    .Y(_035_)
  );
  NOR _201_ (
    .A(_035_),
    .B(_021_),
    .Y(_000_)
  );
  NOR _202_ (
    .A(_109_),
    .B(bus[0]),
    .Y(_036_)
  );
  NAND _203_ (
    .A(_036_),
    .B(_015_),
    .Y(_037_)
  );
  NAND _204_ (
    .A(bus[7]),
    .B(bus[2]),
    .Y(_038_)
  );
  NOR _205_ (
    .A(_038_),
    .B(_037_),
    .Y(_039_)
  );
  NAND _206_ (
    .A(_039_),
    .B(_018_),
    .Y(_040_)
  );
  NOT _207_ (
    .A(_034_),
    .Y(_041_)
  );
  NOR _208_ (
    .A(_041_),
    .B(_040_),
    .Y(_042_)
  );
  NAND _209_ (
    .A(counter0),
    .B(reset_L),
    .Y(_043_)
  );
  NOR _210_ (
    .A(_043_),
    .B(_042_),
    .Y(_044_)
  );
  NAND _211_ (
    .A(_044_),
    .B(active),
    .Y(_045_)
  );
  NOT _212_ (
    .A(valid_out),
    .Y(_046_)
  );
  NOR _213_ (
    .A(_046_),
    .B(_091_),
    .Y(_047_)
  );
  NAND _214_ (
    .A(_047_),
    .B(_022_),
    .Y(_048_)
  );
  NAND _215_ (
    .A(_048_),
    .B(_045_),
    .Y(_006_)
  );
  NOT _216_ (
    .A(counter0),
    .Y(_049_)
  );
  NOT _217_ (
    .A(active),
    .Y(_050_)
  );
  NOR _218_ (
    .A(_050_),
    .B(_049_),
    .Y(_051_)
  );
  NAND _219_ (
    .A(_022_),
    .B(reset_L),
    .Y(_052_)
  );
  NOR _220_ (
    .A(_052_),
    .B(_051_),
    .Y(_053_)
  );
  NAND _221_ (
    .A(_053_),
    .B(data_out[0]),
    .Y(_054_)
  );
  NAND _222_ (
    .A(_051_),
    .B(reset_L),
    .Y(_055_)
  );
  NOR _223_ (
    .A(_055_),
    .B(_042_),
    .Y(_056_)
  );
  NAND _224_ (
    .A(_056_),
    .B(bus[0]),
    .Y(_057_)
  );
  NAND _225_ (
    .A(_057_),
    .B(_054_),
    .Y(_005_[0])
  );
  NAND _226_ (
    .A(_053_),
    .B(data_out[1]),
    .Y(_058_)
  );
  NAND _227_ (
    .A(_056_),
    .B(bus[1]),
    .Y(_059_)
  );
  NAND _228_ (
    .A(_059_),
    .B(_058_),
    .Y(_005_[1])
  );
  NAND _229_ (
    .A(_053_),
    .B(data_out[2]),
    .Y(_060_)
  );
  NAND _230_ (
    .A(_056_),
    .B(bus[2]),
    .Y(_061_)
  );
  NAND _231_ (
    .A(_061_),
    .B(_060_),
    .Y(_005_[2])
  );
  NAND _232_ (
    .A(_053_),
    .B(data_out[3]),
    .Y(_062_)
  );
  NAND _233_ (
    .A(_056_),
    .B(bus[3]),
    .Y(_063_)
  );
  NAND _234_ (
    .A(_063_),
    .B(_062_),
    .Y(_005_[3])
  );
  NAND _235_ (
    .A(_053_),
    .B(data_out[4]),
    .Y(_064_)
  );
  NAND _236_ (
    .A(_056_),
    .B(bus[4]),
    .Y(_065_)
  );
  NAND _237_ (
    .A(_065_),
    .B(_064_),
    .Y(_005_[4])
  );
  NAND _238_ (
    .A(_053_),
    .B(data_out[5]),
    .Y(_066_)
  );
  NAND _239_ (
    .A(_056_),
    .B(bus[5]),
    .Y(_067_)
  );
  NAND _240_ (
    .A(_067_),
    .B(_066_),
    .Y(_005_[5])
  );
  NAND _241_ (
    .A(_053_),
    .B(data_out[6]),
    .Y(_068_)
  );
  NAND _242_ (
    .A(_056_),
    .B(bus[6]),
    .Y(_069_)
  );
  NAND _243_ (
    .A(_069_),
    .B(_068_),
    .Y(_005_[6])
  );
  NAND _244_ (
    .A(_053_),
    .B(data_out[7]),
    .Y(_070_)
  );
  NAND _245_ (
    .A(_056_),
    .B(bus[7]),
    .Y(_071_)
  );
  NAND _246_ (
    .A(_071_),
    .B(_070_),
    .Y(_005_[7])
  );
  NAND _247_ (
    .A(_049_),
    .B(reset_L),
    .Y(_072_)
  );
  NOR _248_ (
    .A(_072_),
    .B(_008_),
    .Y(_002_)
  );
  DFF _249_ (
    .C(clockS32),
    .D(_002_),
    .Q(counter0)
  );
  DFF _250_ (
    .C(clockS32),
    .D(_005_[0]),
    .Q(data_out[0])
  );
  DFF _251_ (
    .C(clockS32),
    .D(_005_[1]),
    .Q(data_out[1])
  );
  DFF _252_ (
    .C(clockS32),
    .D(_005_[2]),
    .Q(data_out[2])
  );
  DFF _253_ (
    .C(clockS32),
    .D(_005_[3]),
    .Q(data_out[3])
  );
  DFF _254_ (
    .C(clockS32),
    .D(_005_[4]),
    .Q(data_out[4])
  );
  DFF _255_ (
    .C(clockS32),
    .D(_005_[5]),
    .Q(data_out[5])
  );
  DFF _256_ (
    .C(clockS32),
    .D(_005_[6]),
    .Q(data_out[6])
  );
  DFF _257_ (
    .C(clockS32),
    .D(_005_[7]),
    .Q(data_out[7])
  );
  DFF _258_ (
    .C(clockS32),
    .D(_006_),
    .Q(valid_out)
  );
  DFF _259_ (
    .C(clockS32),
    .D(_001_[0]),
    .Q(bus[0])
  );
  DFF _260_ (
    .C(clockS32),
    .D(_001_[1]),
    .Q(bus[1])
  );
  DFF _261_ (
    .C(clockS32),
    .D(_001_[2]),
    .Q(bus[2])
  );
  DFF _262_ (
    .C(clockS32),
    .D(_001_[3]),
    .Q(bus[3])
  );
  DFF _263_ (
    .C(clockS32),
    .D(_001_[4]),
    .Q(bus[4])
  );
  DFF _264_ (
    .C(clockS32),
    .D(_001_[5]),
    .Q(bus[5])
  );
  DFF _265_ (
    .C(clockS32),
    .D(_001_[6]),
    .Q(bus[6])
  );
  DFF _266_ (
    .C(clockS32),
    .D(_001_[7]),
    .Q(bus[7])
  );
  DFF _267_ (
    .C(clockS32),
    .D(_004_[0]),
    .Q(counter[0])
  );
  DFF _268_ (
    .C(clockS32),
    .D(_004_[1]),
    .Q(counter[1])
  );
  DFF _269_ (
    .C(clockS32),
    .D(_004_[2]),
    .Q(counter[2])
  );
  DFF _270_ (
    .C(clockS32),
    .D(_003_[0]),
    .Q(counterBC[0])
  );
  DFF _271_ (
    .C(clockS32),
    .D(_003_[1]),
    .Q(counterBC[1])
  );
  DFF _272_ (
    .C(clockS32),
    .D(_000_),
    .Q(active)
  );
endmodule

(* src = "un_byte_stripingS.v:1" *)
module un_byte_stripingS(data_out, reset_L, lane_0, lane_1, valid_0, valid_1, valid_out, clk_2f, clk_f);
  (* src = "un_byte_stripingS.v:19" *)
  wire [31:0] _000_;
  (* src = "un_byte_stripingS.v:19" *)
  wire _001_;
  (* src = "un_byte_stripingS.v:19" *)
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  (* src = "un_byte_stripingS.v:9" *)
  input clk_2f;
  (* src = "un_byte_stripingS.v:10" *)
  input clk_f;
  (* src = "un_byte_stripingS.v:2" *)
  output [31:0] data_out;
  (* src = "un_byte_stripingS.v:4" *)
  input [31:0] lane_0;
  (* src = "un_byte_stripingS.v:5" *)
  input [31:0] lane_1;
  (* src = "un_byte_stripingS.v:3" *)
  input reset_L;
  (* src = "un_byte_stripingS.v:11" *)
  wire selector;
  (* src = "un_byte_stripingS.v:6" *)
  input valid_0;
  (* src = "un_byte_stripingS.v:7" *)
  input valid_1;
  (* src = "un_byte_stripingS.v:8" *)
  output valid_out;
  NOT _134_ (
    .A(valid_0),
    .Y(_003_)
  );
  NOT _135_ (
    .A(selector),
    .Y(_004_)
  );
  NOR _136_ (
    .A(_004_),
    .B(valid_1),
    .Y(_005_)
  );
  NOR _137_ (
    .A(_005_),
    .B(_003_),
    .Y(_002_)
  );
  NOR _138_ (
    .A(lane_0[0]),
    .B(selector),
    .Y(_006_)
  );
  NOT _139_ (
    .A(lane_1[0]),
    .Y(_007_)
  );
  NAND _140_ (
    .A(_007_),
    .B(selector),
    .Y(_008_)
  );
  NAND _141_ (
    .A(_008_),
    .B(valid_0),
    .Y(_009_)
  );
  NOR _142_ (
    .A(_009_),
    .B(_006_),
    .Y(_000_[0])
  );
  NOR _143_ (
    .A(lane_0[1]),
    .B(selector),
    .Y(_010_)
  );
  NOT _144_ (
    .A(lane_1[1]),
    .Y(_011_)
  );
  NAND _145_ (
    .A(_011_),
    .B(selector),
    .Y(_012_)
  );
  NAND _146_ (
    .A(_012_),
    .B(valid_0),
    .Y(_013_)
  );
  NOR _147_ (
    .A(_013_),
    .B(_010_),
    .Y(_000_[1])
  );
  NOR _148_ (
    .A(lane_0[2]),
    .B(selector),
    .Y(_014_)
  );
  NOT _149_ (
    .A(lane_1[2]),
    .Y(_015_)
  );
  NAND _150_ (
    .A(_015_),
    .B(selector),
    .Y(_016_)
  );
  NAND _151_ (
    .A(_016_),
    .B(valid_0),
    .Y(_017_)
  );
  NOR _152_ (
    .A(_017_),
    .B(_014_),
    .Y(_000_[2])
  );
  NOR _153_ (
    .A(lane_0[3]),
    .B(selector),
    .Y(_018_)
  );
  NOT _154_ (
    .A(lane_1[3]),
    .Y(_019_)
  );
  NAND _155_ (
    .A(_019_),
    .B(selector),
    .Y(_020_)
  );
  NAND _156_ (
    .A(_020_),
    .B(valid_0),
    .Y(_021_)
  );
  NOR _157_ (
    .A(_021_),
    .B(_018_),
    .Y(_000_[3])
  );
  NOR _158_ (
    .A(lane_0[4]),
    .B(selector),
    .Y(_022_)
  );
  NOT _159_ (
    .A(lane_1[4]),
    .Y(_023_)
  );
  NAND _160_ (
    .A(_023_),
    .B(selector),
    .Y(_024_)
  );
  NAND _161_ (
    .A(_024_),
    .B(valid_0),
    .Y(_025_)
  );
  NOR _162_ (
    .A(_025_),
    .B(_022_),
    .Y(_000_[4])
  );
  NOR _163_ (
    .A(lane_0[5]),
    .B(selector),
    .Y(_026_)
  );
  NOT _164_ (
    .A(lane_1[5]),
    .Y(_027_)
  );
  NAND _165_ (
    .A(_027_),
    .B(selector),
    .Y(_028_)
  );
  NAND _166_ (
    .A(_028_),
    .B(valid_0),
    .Y(_029_)
  );
  NOR _167_ (
    .A(_029_),
    .B(_026_),
    .Y(_000_[5])
  );
  NOR _168_ (
    .A(lane_0[6]),
    .B(selector),
    .Y(_030_)
  );
  NOT _169_ (
    .A(lane_1[6]),
    .Y(_031_)
  );
  NAND _170_ (
    .A(_031_),
    .B(selector),
    .Y(_032_)
  );
  NAND _171_ (
    .A(_032_),
    .B(valid_0),
    .Y(_033_)
  );
  NOR _172_ (
    .A(_033_),
    .B(_030_),
    .Y(_000_[6])
  );
  NOR _173_ (
    .A(lane_0[7]),
    .B(selector),
    .Y(_034_)
  );
  NOT _174_ (
    .A(lane_1[7]),
    .Y(_035_)
  );
  NAND _175_ (
    .A(_035_),
    .B(selector),
    .Y(_036_)
  );
  NAND _176_ (
    .A(_036_),
    .B(valid_0),
    .Y(_037_)
  );
  NOR _177_ (
    .A(_037_),
    .B(_034_),
    .Y(_000_[7])
  );
  NOR _178_ (
    .A(lane_0[8]),
    .B(selector),
    .Y(_038_)
  );
  NOT _179_ (
    .A(lane_1[8]),
    .Y(_039_)
  );
  NAND _180_ (
    .A(_039_),
    .B(selector),
    .Y(_040_)
  );
  NAND _181_ (
    .A(_040_),
    .B(valid_0),
    .Y(_041_)
  );
  NOR _182_ (
    .A(_041_),
    .B(_038_),
    .Y(_000_[8])
  );
  NOR _183_ (
    .A(lane_0[9]),
    .B(selector),
    .Y(_042_)
  );
  NOT _184_ (
    .A(lane_1[9]),
    .Y(_043_)
  );
  NAND _185_ (
    .A(_043_),
    .B(selector),
    .Y(_044_)
  );
  NAND _186_ (
    .A(_044_),
    .B(valid_0),
    .Y(_045_)
  );
  NOR _187_ (
    .A(_045_),
    .B(_042_),
    .Y(_000_[9])
  );
  NOR _188_ (
    .A(lane_0[10]),
    .B(selector),
    .Y(_046_)
  );
  NOT _189_ (
    .A(lane_1[10]),
    .Y(_047_)
  );
  NAND _190_ (
    .A(_047_),
    .B(selector),
    .Y(_048_)
  );
  NAND _191_ (
    .A(_048_),
    .B(valid_0),
    .Y(_049_)
  );
  NOR _192_ (
    .A(_049_),
    .B(_046_),
    .Y(_000_[10])
  );
  NOR _193_ (
    .A(lane_0[11]),
    .B(selector),
    .Y(_050_)
  );
  NOT _194_ (
    .A(lane_1[11]),
    .Y(_051_)
  );
  NAND _195_ (
    .A(_051_),
    .B(selector),
    .Y(_052_)
  );
  NAND _196_ (
    .A(_052_),
    .B(valid_0),
    .Y(_053_)
  );
  NOR _197_ (
    .A(_053_),
    .B(_050_),
    .Y(_000_[11])
  );
  NOR _198_ (
    .A(lane_0[12]),
    .B(selector),
    .Y(_054_)
  );
  NOT _199_ (
    .A(lane_1[12]),
    .Y(_055_)
  );
  NAND _200_ (
    .A(_055_),
    .B(selector),
    .Y(_056_)
  );
  NAND _201_ (
    .A(_056_),
    .B(valid_0),
    .Y(_057_)
  );
  NOR _202_ (
    .A(_057_),
    .B(_054_),
    .Y(_000_[12])
  );
  NOR _203_ (
    .A(lane_0[13]),
    .B(selector),
    .Y(_058_)
  );
  NOT _204_ (
    .A(lane_1[13]),
    .Y(_059_)
  );
  NAND _205_ (
    .A(_059_),
    .B(selector),
    .Y(_060_)
  );
  NAND _206_ (
    .A(_060_),
    .B(valid_0),
    .Y(_061_)
  );
  NOR _207_ (
    .A(_061_),
    .B(_058_),
    .Y(_000_[13])
  );
  NOR _208_ (
    .A(lane_0[14]),
    .B(selector),
    .Y(_062_)
  );
  NOT _209_ (
    .A(lane_1[14]),
    .Y(_063_)
  );
  NAND _210_ (
    .A(_063_),
    .B(selector),
    .Y(_064_)
  );
  NAND _211_ (
    .A(_064_),
    .B(valid_0),
    .Y(_065_)
  );
  NOR _212_ (
    .A(_065_),
    .B(_062_),
    .Y(_000_[14])
  );
  NOR _213_ (
    .A(lane_0[15]),
    .B(selector),
    .Y(_066_)
  );
  NOT _214_ (
    .A(lane_1[15]),
    .Y(_067_)
  );
  NAND _215_ (
    .A(_067_),
    .B(selector),
    .Y(_068_)
  );
  NAND _216_ (
    .A(_068_),
    .B(valid_0),
    .Y(_069_)
  );
  NOR _217_ (
    .A(_069_),
    .B(_066_),
    .Y(_000_[15])
  );
  NOR _218_ (
    .A(lane_0[16]),
    .B(selector),
    .Y(_070_)
  );
  NOT _219_ (
    .A(lane_1[16]),
    .Y(_071_)
  );
  NAND _220_ (
    .A(_071_),
    .B(selector),
    .Y(_072_)
  );
  NAND _221_ (
    .A(_072_),
    .B(valid_0),
    .Y(_073_)
  );
  NOR _222_ (
    .A(_073_),
    .B(_070_),
    .Y(_000_[16])
  );
  NOR _223_ (
    .A(lane_0[17]),
    .B(selector),
    .Y(_074_)
  );
  NOT _224_ (
    .A(lane_1[17]),
    .Y(_075_)
  );
  NAND _225_ (
    .A(_075_),
    .B(selector),
    .Y(_076_)
  );
  NAND _226_ (
    .A(_076_),
    .B(valid_0),
    .Y(_077_)
  );
  NOR _227_ (
    .A(_077_),
    .B(_074_),
    .Y(_000_[17])
  );
  NOR _228_ (
    .A(lane_0[18]),
    .B(selector),
    .Y(_078_)
  );
  NOT _229_ (
    .A(lane_1[18]),
    .Y(_079_)
  );
  NAND _230_ (
    .A(_079_),
    .B(selector),
    .Y(_080_)
  );
  NAND _231_ (
    .A(_080_),
    .B(valid_0),
    .Y(_081_)
  );
  NOR _232_ (
    .A(_081_),
    .B(_078_),
    .Y(_000_[18])
  );
  NOR _233_ (
    .A(lane_0[19]),
    .B(selector),
    .Y(_082_)
  );
  NOT _234_ (
    .A(lane_1[19]),
    .Y(_083_)
  );
  NAND _235_ (
    .A(_083_),
    .B(selector),
    .Y(_084_)
  );
  NAND _236_ (
    .A(_084_),
    .B(valid_0),
    .Y(_085_)
  );
  NOR _237_ (
    .A(_085_),
    .B(_082_),
    .Y(_000_[19])
  );
  NOR _238_ (
    .A(lane_0[20]),
    .B(selector),
    .Y(_086_)
  );
  NOT _239_ (
    .A(lane_1[20]),
    .Y(_087_)
  );
  NAND _240_ (
    .A(_087_),
    .B(selector),
    .Y(_088_)
  );
  NAND _241_ (
    .A(_088_),
    .B(valid_0),
    .Y(_089_)
  );
  NOR _242_ (
    .A(_089_),
    .B(_086_),
    .Y(_000_[20])
  );
  NOR _243_ (
    .A(lane_0[21]),
    .B(selector),
    .Y(_090_)
  );
  NOT _244_ (
    .A(lane_1[21]),
    .Y(_091_)
  );
  NAND _245_ (
    .A(_091_),
    .B(selector),
    .Y(_092_)
  );
  NAND _246_ (
    .A(_092_),
    .B(valid_0),
    .Y(_093_)
  );
  NOR _247_ (
    .A(_093_),
    .B(_090_),
    .Y(_000_[21])
  );
  NOR _248_ (
    .A(lane_0[22]),
    .B(selector),
    .Y(_094_)
  );
  NOT _249_ (
    .A(lane_1[22]),
    .Y(_095_)
  );
  NAND _250_ (
    .A(_095_),
    .B(selector),
    .Y(_096_)
  );
  NAND _251_ (
    .A(_096_),
    .B(valid_0),
    .Y(_097_)
  );
  NOR _252_ (
    .A(_097_),
    .B(_094_),
    .Y(_000_[22])
  );
  NOR _253_ (
    .A(lane_0[23]),
    .B(selector),
    .Y(_098_)
  );
  NOT _254_ (
    .A(lane_1[23]),
    .Y(_099_)
  );
  NAND _255_ (
    .A(_099_),
    .B(selector),
    .Y(_100_)
  );
  NAND _256_ (
    .A(_100_),
    .B(valid_0),
    .Y(_101_)
  );
  NOR _257_ (
    .A(_101_),
    .B(_098_),
    .Y(_000_[23])
  );
  NOR _258_ (
    .A(lane_0[24]),
    .B(selector),
    .Y(_102_)
  );
  NOT _259_ (
    .A(lane_1[24]),
    .Y(_103_)
  );
  NAND _260_ (
    .A(_103_),
    .B(selector),
    .Y(_104_)
  );
  NAND _261_ (
    .A(_104_),
    .B(valid_0),
    .Y(_105_)
  );
  NOR _262_ (
    .A(_105_),
    .B(_102_),
    .Y(_000_[24])
  );
  NOR _263_ (
    .A(lane_0[25]),
    .B(selector),
    .Y(_106_)
  );
  NOT _264_ (
    .A(lane_1[25]),
    .Y(_107_)
  );
  NAND _265_ (
    .A(_107_),
    .B(selector),
    .Y(_108_)
  );
  NAND _266_ (
    .A(_108_),
    .B(valid_0),
    .Y(_109_)
  );
  NOR _267_ (
    .A(_109_),
    .B(_106_),
    .Y(_000_[25])
  );
  NOR _268_ (
    .A(lane_0[26]),
    .B(selector),
    .Y(_110_)
  );
  NOT _269_ (
    .A(lane_1[26]),
    .Y(_111_)
  );
  NAND _270_ (
    .A(_111_),
    .B(selector),
    .Y(_112_)
  );
  NAND _271_ (
    .A(_112_),
    .B(valid_0),
    .Y(_113_)
  );
  NOR _272_ (
    .A(_113_),
    .B(_110_),
    .Y(_000_[26])
  );
  NOR _273_ (
    .A(lane_0[27]),
    .B(selector),
    .Y(_114_)
  );
  NOT _274_ (
    .A(lane_1[27]),
    .Y(_115_)
  );
  NAND _275_ (
    .A(_115_),
    .B(selector),
    .Y(_116_)
  );
  NAND _276_ (
    .A(_116_),
    .B(valid_0),
    .Y(_117_)
  );
  NOR _277_ (
    .A(_117_),
    .B(_114_),
    .Y(_000_[27])
  );
  NOR _278_ (
    .A(lane_0[28]),
    .B(selector),
    .Y(_118_)
  );
  NOT _279_ (
    .A(lane_1[28]),
    .Y(_119_)
  );
  NAND _280_ (
    .A(_119_),
    .B(selector),
    .Y(_120_)
  );
  NAND _281_ (
    .A(_120_),
    .B(valid_0),
    .Y(_121_)
  );
  NOR _282_ (
    .A(_121_),
    .B(_118_),
    .Y(_000_[28])
  );
  NOR _283_ (
    .A(lane_0[29]),
    .B(selector),
    .Y(_122_)
  );
  NOT _284_ (
    .A(lane_1[29]),
    .Y(_123_)
  );
  NAND _285_ (
    .A(_123_),
    .B(selector),
    .Y(_124_)
  );
  NAND _286_ (
    .A(_124_),
    .B(valid_0),
    .Y(_125_)
  );
  NOR _287_ (
    .A(_125_),
    .B(_122_),
    .Y(_000_[29])
  );
  NOR _288_ (
    .A(lane_0[30]),
    .B(selector),
    .Y(_126_)
  );
  NOT _289_ (
    .A(lane_1[30]),
    .Y(_127_)
  );
  NAND _290_ (
    .A(_127_),
    .B(selector),
    .Y(_128_)
  );
  NAND _291_ (
    .A(_128_),
    .B(valid_0),
    .Y(_129_)
  );
  NOR _292_ (
    .A(_129_),
    .B(_126_),
    .Y(_000_[30])
  );
  NOR _293_ (
    .A(lane_0[31]),
    .B(selector),
    .Y(_130_)
  );
  NOT _294_ (
    .A(lane_1[31]),
    .Y(_131_)
  );
  NAND _295_ (
    .A(_131_),
    .B(selector),
    .Y(_132_)
  );
  NAND _296_ (
    .A(_132_),
    .B(valid_0),
    .Y(_133_)
  );
  NOR _297_ (
    .A(_133_),
    .B(_130_),
    .Y(_000_[31])
  );
  NOR _298_ (
    .A(_003_),
    .B(selector),
    .Y(_001_)
  );
  DFF _299_ (
    .C(clk_2f),
    .D(_000_[0]),
    .Q(data_out[0])
  );
  DFF _300_ (
    .C(clk_2f),
    .D(_000_[1]),
    .Q(data_out[1])
  );
  DFF _301_ (
    .C(clk_2f),
    .D(_000_[2]),
    .Q(data_out[2])
  );
  DFF _302_ (
    .C(clk_2f),
    .D(_000_[3]),
    .Q(data_out[3])
  );
  DFF _303_ (
    .C(clk_2f),
    .D(_000_[4]),
    .Q(data_out[4])
  );
  DFF _304_ (
    .C(clk_2f),
    .D(_000_[5]),
    .Q(data_out[5])
  );
  DFF _305_ (
    .C(clk_2f),
    .D(_000_[6]),
    .Q(data_out[6])
  );
  DFF _306_ (
    .C(clk_2f),
    .D(_000_[7]),
    .Q(data_out[7])
  );
  DFF _307_ (
    .C(clk_2f),
    .D(_000_[8]),
    .Q(data_out[8])
  );
  DFF _308_ (
    .C(clk_2f),
    .D(_000_[9]),
    .Q(data_out[9])
  );
  DFF _309_ (
    .C(clk_2f),
    .D(_000_[10]),
    .Q(data_out[10])
  );
  DFF _310_ (
    .C(clk_2f),
    .D(_000_[11]),
    .Q(data_out[11])
  );
  DFF _311_ (
    .C(clk_2f),
    .D(_000_[12]),
    .Q(data_out[12])
  );
  DFF _312_ (
    .C(clk_2f),
    .D(_000_[13]),
    .Q(data_out[13])
  );
  DFF _313_ (
    .C(clk_2f),
    .D(_000_[14]),
    .Q(data_out[14])
  );
  DFF _314_ (
    .C(clk_2f),
    .D(_000_[15]),
    .Q(data_out[15])
  );
  DFF _315_ (
    .C(clk_2f),
    .D(_000_[16]),
    .Q(data_out[16])
  );
  DFF _316_ (
    .C(clk_2f),
    .D(_000_[17]),
    .Q(data_out[17])
  );
  DFF _317_ (
    .C(clk_2f),
    .D(_000_[18]),
    .Q(data_out[18])
  );
  DFF _318_ (
    .C(clk_2f),
    .D(_000_[19]),
    .Q(data_out[19])
  );
  DFF _319_ (
    .C(clk_2f),
    .D(_000_[20]),
    .Q(data_out[20])
  );
  DFF _320_ (
    .C(clk_2f),
    .D(_000_[21]),
    .Q(data_out[21])
  );
  DFF _321_ (
    .C(clk_2f),
    .D(_000_[22]),
    .Q(data_out[22])
  );
  DFF _322_ (
    .C(clk_2f),
    .D(_000_[23]),
    .Q(data_out[23])
  );
  DFF _323_ (
    .C(clk_2f),
    .D(_000_[24]),
    .Q(data_out[24])
  );
  DFF _324_ (
    .C(clk_2f),
    .D(_000_[25]),
    .Q(data_out[25])
  );
  DFF _325_ (
    .C(clk_2f),
    .D(_000_[26]),
    .Q(data_out[26])
  );
  DFF _326_ (
    .C(clk_2f),
    .D(_000_[27]),
    .Q(data_out[27])
  );
  DFF _327_ (
    .C(clk_2f),
    .D(_000_[28]),
    .Q(data_out[28])
  );
  DFF _328_ (
    .C(clk_2f),
    .D(_000_[29]),
    .Q(data_out[29])
  );
  DFF _329_ (
    .C(clk_2f),
    .D(_000_[30]),
    .Q(data_out[30])
  );
  DFF _330_ (
    .C(clk_2f),
    .D(_000_[31]),
    .Q(data_out[31])
  );
  DFF _331_ (
    .C(clk_2f),
    .D(_002_),
    .Q(valid_out)
  );
  DFF _332_ (
    .C(clk_2f),
    .D(_001_),
    .Q(selector)
  );
endmodule
