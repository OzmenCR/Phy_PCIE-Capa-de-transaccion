/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 4.8.4-2ubuntu1~14.04.3 -O2 -fstack-protector -fPIC -Os) */

(* top =  1  *)
(* src = "c32b_8bS.v:3" *)
module c32b_8bS(data_in, data_out, valid_in, clock1, clock4, reset_L, valid_out);
  (* src = "c32b_8bS.v:10" *)
  wire [7:0] _000_;
  (* src = "c32b_8bS.v:10" *)
  wire [1:0] _001_;
  (* src = "c32b_8bS.v:10" *)
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  (* src = "c32b_8bS.v:5" *)
  input clock1;
  (* src = "c32b_8bS.v:5" *)
  input clock4;
  (* src = "c32b_8bS.v:3" *)
  input [31:0] data_in;
  (* src = "c32b_8bS.v:4" *)
  output [7:0] data_out;
  (* src = "c32b_8bS.v:5" *)
  input reset_L;
  (* src = "c32b_8bS.v:9" *)
  wire [1:0] select;
  (* src = "c32b_8bS.v:5" *)
  input valid_in;
  (* src = "c32b_8bS.v:6" *)
  output valid_out;
  NOT _099_ (
    .A(reset_L),
    .Y(_003_)
  );
  NOT _100_ (
    .A(select[0]),
    .Y(_001_[0])
  );
  NOT _101_ (
    .A(data_in[7]),
    .Y(_061_)
  );
  NAND _102_ (
    .A(select[1]),
    .B(select[0]),
    .Y(_062_)
  );
  NOR _103_ (
    .A(_062_),
    .B(_061_),
    .Y(_063_)
  );
  NOT _104_ (
    .A(data_in[23]),
    .Y(_064_)
  );
  NOT _105_ (
    .A(select[1]),
    .Y(_065_)
  );
  NAND _106_ (
    .A(_065_),
    .B(select[0]),
    .Y(_066_)
  );
  NOR _107_ (
    .A(_066_),
    .B(_064_),
    .Y(_067_)
  );
  NOR _108_ (
    .A(_067_),
    .B(_063_),
    .Y(_068_)
  );
  NOT _109_ (
    .A(data_in[31]),
    .Y(_069_)
  );
  NAND _110_ (
    .A(_065_),
    .B(_001_[0]),
    .Y(_070_)
  );
  NOR _111_ (
    .A(_070_),
    .B(_069_),
    .Y(_071_)
  );
  NOT _112_ (
    .A(data_in[15]),
    .Y(_072_)
  );
  NAND _113_ (
    .A(select[1]),
    .B(_001_[0]),
    .Y(_073_)
  );
  NOR _114_ (
    .A(_073_),
    .B(_072_),
    .Y(_074_)
  );
  NOR _115_ (
    .A(_074_),
    .B(_071_),
    .Y(_075_)
  );
  NAND _116_ (
    .A(_075_),
    .B(_068_),
    .Y(_000_[7])
  );
  NOT _117_ (
    .A(data_in[6]),
    .Y(_076_)
  );
  NOR _118_ (
    .A(_062_),
    .B(_076_),
    .Y(_077_)
  );
  NOT _119_ (
    .A(data_in[30]),
    .Y(_079_)
  );
  NOR _120_ (
    .A(_070_),
    .B(_079_),
    .Y(_081_)
  );
  NOR _121_ (
    .A(_081_),
    .B(_077_),
    .Y(_083_)
  );
  NOT _122_ (
    .A(data_in[22]),
    .Y(_085_)
  );
  NOR _123_ (
    .A(_066_),
    .B(_085_),
    .Y(_087_)
  );
  NOT _124_ (
    .A(data_in[14]),
    .Y(_089_)
  );
  NOR _125_ (
    .A(_073_),
    .B(_089_),
    .Y(_091_)
  );
  NOR _126_ (
    .A(_091_),
    .B(_087_),
    .Y(_093_)
  );
  NAND _127_ (
    .A(_093_),
    .B(_083_),
    .Y(_000_[6])
  );
  NOT _128_ (
    .A(data_in[21]),
    .Y(_096_)
  );
  NOR _129_ (
    .A(_066_),
    .B(_096_),
    .Y(_097_)
  );
  NOT _130_ (
    .A(data_in[5]),
    .Y(_098_)
  );
  NOR _131_ (
    .A(_062_),
    .B(_098_),
    .Y(_004_)
  );
  NOR _132_ (
    .A(_004_),
    .B(_097_),
    .Y(_005_)
  );
  NOT _133_ (
    .A(data_in[13]),
    .Y(_006_)
  );
  NOR _134_ (
    .A(_073_),
    .B(_006_),
    .Y(_007_)
  );
  NOT _135_ (
    .A(data_in[29]),
    .Y(_008_)
  );
  NOR _136_ (
    .A(_070_),
    .B(_008_),
    .Y(_009_)
  );
  NOR _137_ (
    .A(_009_),
    .B(_007_),
    .Y(_010_)
  );
  NAND _138_ (
    .A(_010_),
    .B(_005_),
    .Y(_000_[5])
  );
  NOT _139_ (
    .A(data_in[4]),
    .Y(_011_)
  );
  NOR _140_ (
    .A(_062_),
    .B(_011_),
    .Y(_012_)
  );
  NOT _141_ (
    .A(data_in[28]),
    .Y(_013_)
  );
  NOR _142_ (
    .A(_070_),
    .B(_013_),
    .Y(_014_)
  );
  NOR _143_ (
    .A(_014_),
    .B(_012_),
    .Y(_015_)
  );
  NOT _144_ (
    .A(data_in[20]),
    .Y(_016_)
  );
  NOR _145_ (
    .A(_066_),
    .B(_016_),
    .Y(_017_)
  );
  NOT _146_ (
    .A(data_in[12]),
    .Y(_018_)
  );
  NOR _147_ (
    .A(_073_),
    .B(_018_),
    .Y(_019_)
  );
  NOR _148_ (
    .A(_019_),
    .B(_017_),
    .Y(_020_)
  );
  NAND _149_ (
    .A(_020_),
    .B(_015_),
    .Y(_000_[4])
  );
  NOT _150_ (
    .A(data_in[11]),
    .Y(_021_)
  );
  NOR _151_ (
    .A(_073_),
    .B(_021_),
    .Y(_022_)
  );
  NOT _152_ (
    .A(data_in[3]),
    .Y(_023_)
  );
  NOR _153_ (
    .A(_062_),
    .B(_023_),
    .Y(_024_)
  );
  NOR _154_ (
    .A(_024_),
    .B(_022_),
    .Y(_025_)
  );
  NOT _155_ (
    .A(data_in[27]),
    .Y(_026_)
  );
  NOR _156_ (
    .A(_070_),
    .B(_026_),
    .Y(_027_)
  );
  NOT _157_ (
    .A(data_in[19]),
    .Y(_028_)
  );
  NOR _158_ (
    .A(_066_),
    .B(_028_),
    .Y(_029_)
  );
  NOR _159_ (
    .A(_029_),
    .B(_027_),
    .Y(_030_)
  );
  NAND _160_ (
    .A(_030_),
    .B(_025_),
    .Y(_000_[3])
  );
  NOT _161_ (
    .A(data_in[10]),
    .Y(_031_)
  );
  NOR _162_ (
    .A(_073_),
    .B(_031_),
    .Y(_032_)
  );
  NOT _163_ (
    .A(data_in[2]),
    .Y(_033_)
  );
  NOR _164_ (
    .A(_062_),
    .B(_033_),
    .Y(_034_)
  );
  NOR _165_ (
    .A(_034_),
    .B(_032_),
    .Y(_035_)
  );
  NOT _166_ (
    .A(data_in[18]),
    .Y(_036_)
  );
  NOR _167_ (
    .A(_066_),
    .B(_036_),
    .Y(_037_)
  );
  NOT _168_ (
    .A(data_in[26]),
    .Y(_038_)
  );
  NOR _169_ (
    .A(_070_),
    .B(_038_),
    .Y(_039_)
  );
  NOR _170_ (
    .A(_039_),
    .B(_037_),
    .Y(_040_)
  );
  NAND _171_ (
    .A(_040_),
    .B(_035_),
    .Y(_000_[2])
  );
  NOT _172_ (
    .A(data_in[9]),
    .Y(_041_)
  );
  NOR _173_ (
    .A(_073_),
    .B(_041_),
    .Y(_042_)
  );
  NOT _174_ (
    .A(data_in[1]),
    .Y(_043_)
  );
  NOR _175_ (
    .A(_062_),
    .B(_043_),
    .Y(_044_)
  );
  NOR _176_ (
    .A(_044_),
    .B(_042_),
    .Y(_045_)
  );
  NOT _177_ (
    .A(data_in[17]),
    .Y(_046_)
  );
  NOR _178_ (
    .A(_066_),
    .B(_046_),
    .Y(_047_)
  );
  NOT _179_ (
    .A(data_in[25]),
    .Y(_048_)
  );
  NOR _180_ (
    .A(_070_),
    .B(_048_),
    .Y(_049_)
  );
  NOR _181_ (
    .A(_049_),
    .B(_047_),
    .Y(_050_)
  );
  NAND _182_ (
    .A(_050_),
    .B(_045_),
    .Y(_000_[1])
  );
  NOT _183_ (
    .A(data_in[24]),
    .Y(_051_)
  );
  NOR _184_ (
    .A(_070_),
    .B(_051_),
    .Y(_052_)
  );
  NOT _185_ (
    .A(data_in[0]),
    .Y(_053_)
  );
  NOR _186_ (
    .A(_062_),
    .B(_053_),
    .Y(_054_)
  );
  NOR _187_ (
    .A(_054_),
    .B(_052_),
    .Y(_055_)
  );
  NOT _188_ (
    .A(data_in[8]),
    .Y(_056_)
  );
  NOR _189_ (
    .A(_073_),
    .B(_056_),
    .Y(_057_)
  );
  NOT _190_ (
    .A(data_in[16]),
    .Y(_058_)
  );
  NOR _191_ (
    .A(_066_),
    .B(_058_),
    .Y(_059_)
  );
  NOR _192_ (
    .A(_059_),
    .B(_057_),
    .Y(_060_)
  );
  NAND _193_ (
    .A(_060_),
    .B(_055_),
    .Y(_000_[0])
  );
  NAND _194_ (
    .A(_073_),
    .B(_066_),
    .Y(_001_[1])
  );
  BUF _195_ (
    .A(valid_in),
    .Y(_002_)
  );
  NOT _196_ (
    .A(reset_L),
    .Y(_078_)
  );
  NOT _197_ (
    .A(reset_L),
    .Y(_080_)
  );
  NOT _198_ (
    .A(reset_L),
    .Y(_082_)
  );
  NOT _199_ (
    .A(reset_L),
    .Y(_084_)
  );
  NOT _200_ (
    .A(reset_L),
    .Y(_086_)
  );
  NOT _201_ (
    .A(reset_L),
    .Y(_088_)
  );
  NOT _202_ (
    .A(reset_L),
    .Y(_090_)
  );
  NOT _203_ (
    .A(reset_L),
    .Y(_092_)
  );
  NOT _204_ (
    .A(reset_L),
    .Y(_094_)
  );
  NOT _205_ (
    .A(reset_L),
    .Y(_095_)
  );
  DFFSR _206_ (
    .C(clock4),
    .D(_000_[0]),
    .Q(data_out[0]),
    .R(_078_),
    .S(1'b0)
  );
  DFFSR _207_ (
    .C(clock4),
    .D(_000_[1]),
    .Q(data_out[1]),
    .R(_080_),
    .S(1'b0)
  );
  DFFSR _208_ (
    .C(clock4),
    .D(_000_[2]),
    .Q(data_out[2]),
    .R(_082_),
    .S(1'b0)
  );
  DFFSR _209_ (
    .C(clock4),
    .D(_000_[3]),
    .Q(data_out[3]),
    .R(_084_),
    .S(1'b0)
  );
  DFFSR _210_ (
    .C(clock4),
    .D(_000_[4]),
    .Q(data_out[4]),
    .R(_086_),
    .S(1'b0)
  );
  DFFSR _211_ (
    .C(clock4),
    .D(_000_[5]),
    .Q(data_out[5]),
    .R(_088_),
    .S(1'b0)
  );
  DFFSR _212_ (
    .C(clock4),
    .D(_000_[6]),
    .Q(data_out[6]),
    .R(_090_),
    .S(1'b0)
  );
  DFFSR _213_ (
    .C(clock4),
    .D(_000_[7]),
    .Q(data_out[7]),
    .R(_092_),
    .S(1'b0)
  );
  DFFSR _214_ (
    .C(clock4),
    .D(_002_),
    .Q(valid_out),
    .R(_094_),
    .S(1'b0)
  );
  DFFSR _215_ (
    .C(clock4),
    .D(_001_[0]),
    .Q(select[0]),
    .R(1'b0),
    .S(_095_)
  );
  DFFSR _216_ (
    .C(clock4),
    .D(_001_[1]),
    .Q(select[1]),
    .R(_003_),
    .S(1'b0)
  );
endmodule
